import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    public void assertBooleanArrayEquals(boolean[] expectedArray, boolean[] actualArray) {
        if (expectedArray.length != actualArray.length) {
            throw new AssertionError("Array lengths differ: " + expectedArray.length + " != " + actualArray.length);
        }
        for (int i = 0; i < expectedArray.length; i++) {
            if (expectedArray[i] != actualArray[i]) {
                throw new AssertionError("Arrays differ at index " + i + ": " + expectedArray[i] + " != " + actualArray[i]);
            }
        }
    }

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        int int0 = javax.swing.JComponent.WHEN_IN_FOCUSED_WINDOW;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 2 + "'", int0 == 2);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        int int0 = java.awt.image.ImageObserver.SOMEBITS;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 8 + "'", int0 == 8);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        int int0 = java.awt.image.ImageObserver.ALLBITS;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 32 + "'", int0 == 32);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        int int0 = javax.swing.JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 1 + "'", int0 == 1);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        ManagerRole managerRole0 = MainSystem.currentManager;
        org.junit.Assert.assertNull(managerRole0);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        int int0 = java.awt.image.ImageObserver.PROPERTIES;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 4 + "'", int0 == 4);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.Point point2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component3 = managementDashboard1.findComponentAt(point2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"x\" because \"p\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        String str0 = MainSystem.managerFilePath;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "data/managerData.csv" + "'", str0, "data/managerData.csv");
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.LayoutManager layoutManager5 = null;
        managementDashboard1.setLayout(layoutManager5);
        java.awt.event.ActionListener actionListener7 = null;
        javax.swing.KeyStroke keyStroke8 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.registerKeyboardAction(actionListener7, keyStroke8, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        // The following exception was thrown during execution in test generation
        try {
            int int5 = container4.getComponentCount();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.getClass()\" because \"o\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        UserFactory userFactory0 = new UserFactory();
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.LayoutManager layoutManager5 = null;
        managementDashboard1.setLayout(layoutManager5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.awt.AWTKeyStroke> aWTKeyStrokeSet8 = managementDashboard1.getFocusTraversalKeys(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid focus traversal key identifier");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.Event event2 = null;
        boolean boolean5 = managementDashboard1.mouseDrag(event2, 10, 100);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        int int0 = java.awt.image.ImageObserver.WIDTH;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 1 + "'", int0 == 1);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        java.awt.Font font9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.FontMetrics fontMetrics10 = managementDashboard1.getFontMetrics(font9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.Font.hashCode()\" because \"font\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        javax.swing.event.AncestorListener ancestorListener9 = null;
        managementDashboard1.removeAncestorListener(ancestorListener9);
        java.awt.Dimension dimension11 = managementDashboard1.getPreferredSize();
        managementDashboard1.repaint((long) 1);
        java.awt.Point point14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = managementDashboard1.contains(point14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"x\" because \"p\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(dimension11);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        java.util.Locale locale0 = null;
        javax.swing.JComponent.setDefaultLocale(locale0);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        float float0 = java.awt.Component.TOP_ALIGNMENT;
        org.junit.Assert.assertTrue("'" + float0 + "' != '" + 0.0f + "'", float0 == 0.0f);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        java.awt.Dimension dimension9 = managementDashboard1.getMaximumSize();
        java.awt.Event event10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = managementDashboard1.postEvent(event10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(dimension9);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        float float0 = java.awt.Component.CENTER_ALIGNMENT;
        org.junit.Assert.assertTrue("'" + float0 + "' != '" + 0.5f + "'", float0 == 0.5f);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        javax.swing.event.AncestorListener ancestorListener9 = null;
        managementDashboard1.removeAncestorListener(ancestorListener9);
        java.awt.Dimension dimension11 = managementDashboard1.getPreferredSize();
        managementDashboard1.repaint((long) 1);
        java.util.function.Consumer<String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        managementDashboard15.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy18 = null;
        managementDashboard15.setFocusTraversalPolicy(focusTraversalPolicy18);
        java.util.function.Consumer<String> strConsumer20 = null;
        ManagementDashboard managementDashboard21 = new ManagementDashboard(strConsumer20);
        managementDashboard21.setRequestFocusEnabled(false);
        java.awt.Event event24 = null;
        boolean boolean26 = managementDashboard21.keyUp(event24, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener27 = null;
        managementDashboard21.addInputMethodListener(inputMethodListener27);
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.add((java.awt.Component) managementDashboard15, (Object) inputMethodListener27, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: illegal component position");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(dimension11);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard1.removePropertyChangeListener("", propertyChangeListener10);
        java.awt.Event event12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = managementDashboard1.handleEvent(event12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        Object obj14 = managementDashboard1.getClientProperty((Object) managementDashboard9);
        java.util.function.Consumer<String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        managementDashboard16.setRequestFocusEnabled(false);
        java.awt.Event event19 = null;
        boolean boolean21 = managementDashboard16.keyUp(event19, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener22 = null;
        managementDashboard16.addInputMethodListener(inputMethodListener22);
        java.awt.Dimension dimension24 = managementDashboard16.getMaximumSize();
        int int25 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard16);
        java.io.PrintStream printStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.println(Object)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.awt.Event event8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = managementDashboard1.handleEvent(event8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseDrag(event6, (int) (short) 10, 4);
        java.awt.GraphicsConfiguration graphicsConfiguration10 = managementDashboard1.getGraphicsConfiguration();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(graphicsConfiguration10);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.LayoutManager layoutManager4 = null;
        managementDashboard1.setLayout(layoutManager4);
        managementDashboard1.setFocusTraversalPolicyProvider(true);
        java.awt.Graphics graphics8 = null;
        managementDashboard1.paint(graphics8);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        int int0 = java.awt.image.ImageObserver.ERROR;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 64 + "'", int0 == 64);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray9 = managementDashboard1.getHierarchyListeners();
        java.awt.event.ActionListener actionListener10 = null;
        javax.swing.KeyStroke keyStroke12 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.registerKeyboardAction(actionListener10, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]", keyStroke12, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray9);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray9, new java.awt.event.HierarchyListener[] {});
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard1.removePropertyChangeListener("", propertyChangeListener10);
        java.awt.Dimension dimension12 = managementDashboard1.getPreferredSize();
        java.awt.event.ActionListener actionListener13 = null;
        javax.swing.KeyStroke keyStroke14 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.registerKeyboardAction(actionListener13, keyStroke14, 64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(dimension12);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        String str0 = javax.swing.JComponent.TOOL_TIP_TEXT_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "ToolTipText" + "'", str0, "ToolTipText");
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        PaymentStrategy paymentStrategy0 = null;
        PaymentProcessor paymentProcessor1 = new PaymentProcessor(paymentStrategy0);
        CreditCardPayment creditCardPayment2 = new CreditCardPayment();
        paymentProcessor1.setPaymentStrategy((PaymentStrategy) creditCardPayment2);
        creditCardPayment2.pay((double) 1.0f);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        User user0 = MainSystem.currentUser;
        org.junit.Assert.assertNull(user0);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        Object obj14 = managementDashboard1.getClientProperty((Object) managementDashboard9);
        java.awt.Rectangle rectangle15 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard9.repaint(rectangle15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"x\" because \"r\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.LayoutManager layoutManager4 = null;
        managementDashboard1.setLayout(layoutManager4);
        java.io.PrintWriter printWriter6 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printWriter6, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.println(Object)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        String str0 = MainSystem.lotFilePath;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "data/lotData.csv" + "'", str0, "data/lotData.csv");
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        javax.swing.event.AncestorListener ancestorListener7 = null;
        managementDashboard1.addAncestorListener(ancestorListener7);
        java.io.PrintWriter printWriter9 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printWriter9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.println(Object)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.Event event3 = null;
        boolean boolean5 = managementDashboard1.lostFocus(event3, (Object) "");
        managementDashboard1.setAutoscrolls(false);
        java.util.function.Consumer<String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        boolean boolean11 = managementDashboard10.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests12 = managementDashboard10.getInputMethodRequests();
        java.awt.Container container13 = managementDashboard10.getTopLevelAncestor();
        java.awt.Color color14 = null;
        managementDashboard10.setForeground(color14);
        managementDashboard10.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean21 = managementDashboard10.requestFocusInWindow();
        java.util.function.Consumer<String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        managementDashboard23.setRequestFocusEnabled(false);
        java.awt.Event event26 = null;
        boolean boolean28 = managementDashboard23.keyUp(event26, (int) (short) 1);
        managementDashboard23.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener32 = null;
        managementDashboard23.removePropertyChangeListener("", propertyChangeListener32);
        managementDashboard23.doLayout();
        javax.swing.JPopupMenu jPopupMenu35 = managementDashboard23.getComponentPopupMenu();
        java.awt.Component component37 = managementDashboard10.add((java.awt.Component) managementDashboard23, 1);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component38 = managementDashboard1.add("PanelUI", component37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cannot add to layout: unknown constraint: PanelUI");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(inputMethodRequests12);
        org.junit.Assert.assertNull(container13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jPopupMenu35);
        org.junit.Assert.assertNotNull(component37);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        java.awt.Event event6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = managementDashboard1.postEvent(event6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        boolean boolean12 = managementDashboard11.isCursorSet();
        java.awt.Event event13 = null;
        boolean boolean15 = managementDashboard11.lostFocus(event13, (Object) "");
        java.util.function.Consumer<String> strConsumer16 = null;
        ManagementDashboard managementDashboard17 = new ManagementDashboard(strConsumer16);
        managementDashboard17.setRequestFocusEnabled(false);
        java.awt.Event event20 = null;
        boolean boolean22 = managementDashboard17.keyUp(event20, (int) (short) 1);
        managementDashboard17.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray25 = managementDashboard17.getHierarchyListeners();
        jToolTip9.add((java.awt.Component) managementDashboard11, (Object) hierarchyListenerArray25);
        boolean boolean27 = jToolTip9.requestDefaultFocus();
        java.awt.Rectangle rectangle28 = null;
        // The following exception was thrown during execution in test generation
        try {
            jToolTip9.paintImmediately(rectangle28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"x\" because \"r\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray25);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray25, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.awt.Event event8 = null;
        boolean boolean10 = managementDashboard1.keyUp(event8, (int) (short) 10);
        java.awt.Event event11 = null;
        boolean boolean14 = managementDashboard1.mouseMove(event11, (int) (short) -1, (int) (byte) 1);
        java.io.PrintWriter printWriter15 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printWriter15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.println(Object)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        ManagerRole managerRole0 = null;
        MainSystem.currentManager = managerRole0;
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        String str0 = MainSystem.userFilePath;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "data/userData.csv" + "'", str0, "data/userData.csv");
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        managementDashboard1.setFocusable(false);
        java.awt.Image image9 = null;
        java.util.function.Consumer<String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        boolean boolean14 = managementDashboard13.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests15 = managementDashboard13.getInputMethodRequests();
        java.awt.Container container16 = managementDashboard13.getTopLevelAncestor();
        boolean boolean17 = managementDashboard1.prepareImage(image9, 8, (int) (byte) 100, (java.awt.image.ImageObserver) container16);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.event.HierarchyBoundsListener[] hierarchyBoundsListenerArray18 = container16.getHierarchyBoundsListeners();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"Object.getClass()\" because \"o\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(inputMethodRequests15);
        org.junit.Assert.assertNull(container16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        managementDashboard1.setFocusTraversalKeysEnabled(true);
        java.awt.event.MouseEvent mouseEvent8 = null;
        java.awt.Point point9 = managementDashboard1.getToolTipLocation(mouseEvent8);
        org.junit.Assert.assertNull(point9);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        int int0 = java.awt.image.ImageObserver.ABORT;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 128 + "'", int0 == 128);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray9 = managementDashboard1.getHierarchyListeners();
        java.awt.event.KeyListener keyListener10 = null;
        managementDashboard1.addKeyListener(keyListener10);
        javax.swing.InputMap inputMap13 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.setInputMap(128, inputMap13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray9);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray9, new java.awt.event.HierarchyListener[] {});
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        int int0 = javax.swing.JComponent.UNDEFINED_CONDITION;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + (-1) + "'", int0 == (-1));
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard1.removePropertyChangeListener("", propertyChangeListener10);
        managementDashboard1.doLayout();
        javax.swing.JPopupMenu jPopupMenu13 = managementDashboard1.getComponentPopupMenu();
        String str14 = managementDashboard1.getUIClassID();
        java.awt.event.HierarchyListener hierarchyListener15 = null;
        managementDashboard1.addHierarchyListener(hierarchyListener15);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(jPopupMenu13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PanelUI" + "'", str14, "PanelUI");
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        float float0 = java.awt.Component.LEFT_ALIGNMENT;
        org.junit.Assert.assertTrue("'" + float0 + "' != '" + 0.0f + "'", float0 == 0.0f);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        managementDashboard1.move((int) (byte) 0, 8);
        java.util.function.Consumer<String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        boolean boolean22 = managementDashboard14.isRequestFocusEnabled();
        javax.swing.InputMap inputMap24 = managementDashboard14.getInputMap((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.setInputMap((int) ' ', inputMap24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(inputMap24);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        boolean boolean9 = managementDashboard1.isRequestFocusEnabled();
        javax.swing.InputMap inputMap11 = managementDashboard1.getInputMap((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Point point12 = managementDashboard1.getLocationOnScreen();
            org.junit.Assert.fail("Expected exception of type java.awt.IllegalComponentStateException; message: component must be showing on the screen to determine its location");
        } catch (java.awt.IllegalComponentStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(inputMap11);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard1.removePropertyChangeListener("", propertyChangeListener10);
        java.util.function.Consumer<String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        boolean boolean14 = managementDashboard13.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests15 = managementDashboard13.getInputMethodRequests();
        java.awt.Container container16 = managementDashboard13.getTopLevelAncestor();
        java.awt.Color color17 = null;
        managementDashboard13.setForeground(color17);
        javax.swing.KeyStroke keyStroke19 = null;
        java.awt.event.ActionListener actionListener20 = managementDashboard13.getActionForKeyStroke(keyStroke19);
        javax.swing.JToolTip jToolTip21 = managementDashboard13.createToolTip();
        java.awt.Event event22 = null;
        java.util.function.Consumer<String> strConsumer23 = null;
        ManagementDashboard managementDashboard24 = new ManagementDashboard(strConsumer23);
        managementDashboard24.setInheritsPopupMenu(true);
        boolean boolean27 = managementDashboard24.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget28 = null;
        managementDashboard24.setDropTarget(dropTarget28);
        java.awt.Dimension dimension30 = null;
        managementDashboard24.setPreferredSize(dimension30);
        javax.swing.event.AncestorListener ancestorListener32 = null;
        managementDashboard24.removeAncestorListener(ancestorListener32);
        java.awt.Dimension dimension34 = managementDashboard24.getPreferredSize();
        java.awt.Dimension dimension35 = managementDashboard24.getPreferredSize();
        managementDashboard24.setDebugGraphicsOptions(10);
        boolean boolean38 = jToolTip21.lostFocus(event22, (Object) managementDashboard24);
        boolean boolean39 = managementDashboard24.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener41 = null;
        managementDashboard24.addPropertyChangeListener("ToolTipText", propertyChangeListener41);
        java.awt.Component[] componentArray43 = managementDashboard24.getComponents();
        java.awt.Font font44 = null;
        managementDashboard24.setFont(font44);
        Object obj46 = managementDashboard1.getClientProperty((Object) font44);
        javax.swing.KeyStroke keyStroke47 = null;
        java.awt.event.ActionListener actionListener48 = managementDashboard1.getActionForKeyStroke(keyStroke47);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(inputMethodRequests15);
        org.junit.Assert.assertNull(container16);
        org.junit.Assert.assertNull(actionListener20);
        org.junit.Assert.assertNotNull(jToolTip21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(dimension34);
        org.junit.Assert.assertNotNull(dimension35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(componentArray43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(actionListener48);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy9 = managementDashboard1.getFocusTraversalPolicy();
        java.awt.Event event10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = managementDashboard1.postEvent(event10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(focusTraversalPolicy9);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        Class<?> wildcardClass4 = managementDashboard1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        boolean boolean9 = managementDashboard1.isRequestFocusEnabled();
        int int12 = managementDashboard1.getBaseline(0, (int) (byte) 100);
        java.awt.Component component14 = managementDashboard1.getComponent((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(component14);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        managementDashboard1.setRequestFocusEnabled(true);
        managementDashboard1.addNotify();
        java.util.Locale locale24 = null;
        managementDashboard1.setLocale(locale24);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        managementDashboard1.setName("");
        managementDashboard1.doLayout();
        java.awt.event.ActionListener actionListener7 = null;
        javax.swing.KeyStroke keyStroke8 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.registerKeyboardAction(actionListener7, keyStroke8, 128);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        javax.swing.event.AncestorListener ancestorListener9 = null;
        managementDashboard1.removeAncestorListener(ancestorListener9);
        java.util.function.Consumer<String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy15 = null;
        managementDashboard12.setFocusTraversalPolicy(focusTraversalPolicy15);
        java.awt.Event event17 = null;
        boolean boolean20 = managementDashboard12.mouseDrag(event17, (int) (short) 10, 4);
        managementDashboard12.setEnabled(true);
        java.awt.Component component23 = managementDashboard1.add((java.awt.Component) managementDashboard12);
        java.awt.Container container24 = managementDashboard12.getFocusCycleRootAncestor();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(component23);
        org.junit.Assert.assertNull(container24);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseDrag(event6, (int) (short) 10, 4);
        java.beans.PropertyChangeListener propertyChangeListener11 = null;
        managementDashboard1.removePropertyChangeListener("hi!", propertyChangeListener11);
        boolean boolean13 = managementDashboard1.isMaximumSizeSet();
        int int14 = managementDashboard1.getY();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        Object obj14 = managementDashboard1.getClientProperty((Object) managementDashboard9);
        java.util.function.Consumer<String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        managementDashboard16.setRequestFocusEnabled(false);
        java.awt.Event event19 = null;
        boolean boolean21 = managementDashboard16.keyUp(event19, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener22 = null;
        managementDashboard16.addInputMethodListener(inputMethodListener22);
        java.awt.Dimension dimension24 = managementDashboard16.getMaximumSize();
        int int25 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard16);
        java.awt.Component component26 = managementDashboard1.getNextFocusableComponent();
        boolean boolean27 = managementDashboard1.isEnabled();
        java.io.PrintStream printStream28 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.println(Object)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(component26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        managementDashboard1.resetKeyboardActions();
        java.awt.Event event10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = managementDashboard1.handleEvent(event10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (Object) managementDashboard12);
        boolean boolean27 = managementDashboard12.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener29 = null;
        managementDashboard12.addPropertyChangeListener("ToolTipText", propertyChangeListener29);
        java.awt.Component[] componentArray31 = managementDashboard12.getComponents();
        java.awt.Font font32 = null;
        managementDashboard12.setFont(font32);
        javax.swing.plaf.PanelUI panelUI34 = managementDashboard12.getUI();
        java.awt.event.HierarchyListener hierarchyListener35 = null;
        managementDashboard12.removeHierarchyListener(hierarchyListener35);
        java.awt.Event event37 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean38 = managementDashboard12.handleEvent(event37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(componentArray31);
        org.junit.Assert.assertNotNull(panelUI34);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        java.awt.Event event9 = null;
        boolean boolean12 = managementDashboard1.mouseExit(event9, (int) 'a', (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Point point13 = managementDashboard1.getLocationOnScreen();
            org.junit.Assert.fail("Expected exception of type java.awt.IllegalComponentStateException; message: component must be showing on the screen to determine its location");
        } catch (java.awt.IllegalComponentStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        float float0 = java.awt.Component.RIGHT_ALIGNMENT;
        org.junit.Assert.assertTrue("'" + float0 + "' != '" + 1.0f + "'", float0 == 1.0f);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        javax.swing.event.AncestorListener ancestorListener9 = null;
        managementDashboard1.removeAncestorListener(ancestorListener9);
        java.awt.Dimension dimension11 = managementDashboard1.getPreferredSize();
        managementDashboard1.repaint((long) 1);
        java.awt.event.ActionListener actionListener14 = null;
        javax.swing.KeyStroke keyStroke15 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.registerKeyboardAction(actionListener14, keyStroke15, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(dimension11);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.event.ActionListener actionListener4 = null;
        javax.swing.KeyStroke keyStroke5 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.registerKeyboardAction(actionListener4, keyStroke5, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        String str7 = managementDashboard1.toString();
        java.awt.AWTEvent aWTEvent8 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.dispatchEvent(aWTEvent8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.AWTEvent.getID()\" because \"e\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]" + "'", str7, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]");
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.Event event3 = null;
        boolean boolean5 = managementDashboard1.lostFocus(event3, (Object) "");
        managementDashboard1.setAutoscrolls(false);
        java.awt.Graphics graphics8 = null;
        managementDashboard1.update(graphics8);
        managementDashboard1.firePropertyChange("", (byte) 0, (byte) 10);
        managementDashboard1.setDebugGraphicsOptions((int) ' ');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setRequestFocusEnabled(false);
        java.awt.Event event14 = null;
        boolean boolean16 = managementDashboard11.keyUp(event14, (int) (short) 1);
        java.util.function.Consumer<String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        managementDashboard18.setRequestFocusEnabled(false);
        java.awt.Event event21 = null;
        boolean boolean23 = managementDashboard18.keyUp(event21, (int) (short) 1);
        managementDashboard18.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener27 = null;
        managementDashboard18.removePropertyChangeListener("", propertyChangeListener27);
        java.awt.Dimension dimension29 = managementDashboard18.getPreferredSize();
        managementDashboard11.setSize(dimension29);
        managementDashboard1.setMinimumSize(dimension29);
        java.util.function.Consumer<String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        managementDashboard33.setRequestFocusEnabled(false);
        java.awt.Event event36 = null;
        boolean boolean38 = managementDashboard33.keyUp(event36, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener39 = null;
        managementDashboard33.addInputMethodListener(inputMethodListener39);
        boolean boolean41 = managementDashboard33.isValidateRoot();
        boolean boolean42 = managementDashboard1.isFocusCycleRoot((java.awt.Container) managementDashboard33);
        boolean boolean43 = managementDashboard1.isForegroundSet();
        boolean boolean44 = managementDashboard1.isOptimizedDrawingEnabled();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(dimension29);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        managementDashboard1.setName("");
        managementDashboard1.doLayout();
        java.awt.event.KeyListener keyListener7 = null;
        managementDashboard1.addKeyListener(keyListener7);
        int int9 = managementDashboard1.getY();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        managementDashboard1.addNotify();
        javax.swing.JPopupMenu jPopupMenu10 = null;
        managementDashboard1.setComponentPopupMenu(jPopupMenu10);
        java.awt.Event event12 = null;
        boolean boolean15 = managementDashboard1.mouseEnter(event12, (int) (short) 100, 64);
        boolean boolean16 = managementDashboard1.isShowing();
        java.awt.Component component19 = managementDashboard1.getComponentAt(0, 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(component19);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        managementDashboard1.setRequestFocusEnabled(true);
        managementDashboard1.addNotify();
        managementDashboard1.firePropertyChange("hi!", (byte) -1, (byte) 100);
        managementDashboard1.setRequestFocusEnabled(true);
        java.awt.event.KeyListener keyListener30 = null;
        managementDashboard1.removeKeyListener(keyListener30);
        java.awt.event.ComponentListener[] componentListenerArray32 = managementDashboard1.getComponentListeners();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
        org.junit.Assert.assertNotNull(componentListenerArray32);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        java.beans.PropertyChangeListener propertyChangeListener21 = null;
        managementDashboard1.removePropertyChangeListener(propertyChangeListener21);
        boolean boolean23 = managementDashboard1.isOpaque();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        java.io.PrintWriter printWriter29 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printWriter29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.println(Object)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.setToolTipText("PanelUI");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        managementDashboard1.move((int) (byte) 0, 8);
        java.awt.Event event12 = null;
        java.util.function.Consumer<String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests16 = managementDashboard14.getInputMethodRequests();
        java.awt.Container container17 = managementDashboard14.getTopLevelAncestor();
        boolean boolean18 = managementDashboard1.gotFocus(event12, (Object) container17);
        managementDashboard1.hide();
        boolean boolean20 = managementDashboard1.isFocusTraversable();
        java.awt.event.MouseMotionListener mouseMotionListener21 = null;
        managementDashboard1.removeMouseMotionListener(mouseMotionListener21);
        java.util.function.Consumer<String> strConsumer23 = null;
        ManagementDashboard managementDashboard24 = new ManagementDashboard(strConsumer23);
        managementDashboard24.setInheritsPopupMenu(true);
        managementDashboard24.setName("");
        managementDashboard24.doLayout();
        java.awt.event.KeyListener keyListener30 = null;
        managementDashboard24.addKeyListener(keyListener30);
        java.util.function.Consumer<String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        managementDashboard33.setInheritsPopupMenu(true);
        boolean boolean36 = managementDashboard33.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget37 = null;
        managementDashboard33.setDropTarget(dropTarget37);
        boolean boolean39 = managementDashboard33.getAutoscrolls();
        java.util.function.Consumer<String> strConsumer40 = null;
        ManagementDashboard managementDashboard41 = new ManagementDashboard(strConsumer40);
        managementDashboard41.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy44 = null;
        managementDashboard41.setFocusTraversalPolicy(focusTraversalPolicy44);
        Object obj46 = managementDashboard33.getClientProperty((Object) managementDashboard41);
        java.util.function.Consumer<String> strConsumer47 = null;
        ManagementDashboard managementDashboard48 = new ManagementDashboard(strConsumer47);
        managementDashboard48.setRequestFocusEnabled(false);
        java.awt.Event event51 = null;
        boolean boolean53 = managementDashboard48.keyUp(event51, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener54 = null;
        managementDashboard48.addInputMethodListener(inputMethodListener54);
        java.awt.Dimension dimension56 = managementDashboard48.getMaximumSize();
        int int57 = managementDashboard33.getComponentZOrder((java.awt.Component) managementDashboard48);
        javax.swing.KeyStroke keyStroke58 = null;
        int int59 = managementDashboard33.getConditionForKeyStroke(keyStroke58);
        managementDashboard33.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer61 = null;
        java.awt.Image image62 = managementDashboard33.createImage(imageProducer61);
        java.util.function.Consumer<String> strConsumer63 = null;
        ManagementDashboard managementDashboard64 = new ManagementDashboard(strConsumer63);
        managementDashboard64.setRequestFocusEnabled(false);
        java.awt.Event event67 = null;
        boolean boolean69 = managementDashboard64.keyUp(event67, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener70 = null;
        managementDashboard64.addInputMethodListener(inputMethodListener70);
        java.awt.image.VolatileImage volatileImage74 = managementDashboard64.createVolatileImage((int) (short) 0, 1);
        boolean boolean75 = managementDashboard64.isOptimizedDrawingEnabled();
        javax.swing.ActionMap actionMap76 = managementDashboard64.getActionMap();
        int int77 = managementDashboard24.checkImage(image62, (java.awt.image.ImageObserver) managementDashboard64);
        java.util.function.Consumer<String> strConsumer78 = null;
        ManagementDashboard managementDashboard79 = new ManagementDashboard(strConsumer78);
        boolean boolean80 = managementDashboard79.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests81 = managementDashboard79.getInputMethodRequests();
        java.awt.Container container82 = managementDashboard79.getTopLevelAncestor();
        java.awt.Color color83 = null;
        managementDashboard79.setForeground(color83);
        java.awt.event.HierarchyListener hierarchyListener85 = null;
        managementDashboard79.addHierarchyListener(hierarchyListener85);
        java.awt.Cursor cursor87 = null;
        managementDashboard79.setCursor(cursor87);
        java.awt.Point point90 = managementDashboard79.getMousePosition(false);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean91 = managementDashboard1.prepareImage(image62, (java.awt.image.ImageObserver) managementDashboard79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.image.ImageProducer.startProduction(java.awt.image.ImageConsumer)\" because the return value of \"sun.awt.image.ToolkitImage.getSource()\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(inputMethodRequests16);
        org.junit.Assert.assertNull(container17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(dimension56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(image62);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(volatileImage74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(actionMap76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(inputMethodRequests81);
        org.junit.Assert.assertNull(container82);
        org.junit.Assert.assertNull(point90);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        int int0 = javax.swing.JComponent.WHEN_FOCUSED;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 0 + "'", int0 == 0);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (Object) managementDashboard12);
        boolean boolean27 = managementDashboard12.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener29 = null;
        managementDashboard12.addPropertyChangeListener("ToolTipText", propertyChangeListener29);
        java.awt.Component[] componentArray31 = managementDashboard12.getComponents();
        java.awt.Font font32 = null;
        managementDashboard12.setFont(font32);
        javax.swing.plaf.PanelUI panelUI34 = managementDashboard12.getUI();
        java.util.function.Consumer<String> strConsumer35 = null;
        ManagementDashboard managementDashboard36 = new ManagementDashboard(strConsumer35);
        managementDashboard36.setInheritsPopupMenu(true);
        boolean boolean39 = managementDashboard36.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget40 = null;
        managementDashboard36.setDropTarget(dropTarget40);
        boolean boolean42 = managementDashboard36.getAutoscrolls();
        java.util.function.Consumer<String> strConsumer43 = null;
        ManagementDashboard managementDashboard44 = new ManagementDashboard(strConsumer43);
        managementDashboard44.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy47 = null;
        managementDashboard44.setFocusTraversalPolicy(focusTraversalPolicy47);
        Object obj49 = managementDashboard36.getClientProperty((Object) managementDashboard44);
        java.util.function.Consumer<String> strConsumer50 = null;
        ManagementDashboard managementDashboard51 = new ManagementDashboard(strConsumer50);
        managementDashboard51.setRequestFocusEnabled(false);
        java.awt.Event event54 = null;
        boolean boolean56 = managementDashboard51.keyUp(event54, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener57 = null;
        managementDashboard51.addInputMethodListener(inputMethodListener57);
        java.awt.Dimension dimension59 = managementDashboard51.getMaximumSize();
        int int60 = managementDashboard36.getComponentZOrder((java.awt.Component) managementDashboard51);
        javax.swing.KeyStroke keyStroke61 = null;
        int int62 = managementDashboard36.getConditionForKeyStroke(keyStroke61);
        managementDashboard36.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer64 = null;
        java.awt.Image image65 = managementDashboard36.createImage(imageProducer64);
        java.util.function.Consumer<String> strConsumer68 = null;
        ManagementDashboard managementDashboard69 = new ManagementDashboard(strConsumer68);
        boolean boolean70 = managementDashboard69.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests71 = managementDashboard69.getInputMethodRequests();
        java.awt.Container container72 = managementDashboard69.getTopLevelAncestor();
        java.awt.Color color73 = null;
        managementDashboard69.setForeground(color73);
        java.awt.event.HierarchyListener hierarchyListener75 = null;
        managementDashboard69.addHierarchyListener(hierarchyListener75);
        java.awt.Cursor cursor77 = null;
        managementDashboard69.setCursor(cursor77);
        int int79 = managementDashboard12.checkImage(image65, (int) (byte) 10, (int) 'a', (java.awt.image.ImageObserver) managementDashboard69);
        java.io.PrintStream printStream80 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard69.list(printStream80, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.println(Object)\" because \"out\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(componentArray31);
        org.junit.Assert.assertNotNull(panelUI34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(dimension59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(image65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(inputMethodRequests71);
        org.junit.Assert.assertNull(container72);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.Event event3 = null;
        boolean boolean5 = managementDashboard1.lostFocus(event3, (Object) "");
        managementDashboard1.setAutoscrolls(false);
        java.awt.Graphics graphics8 = null;
        managementDashboard1.update(graphics8);
        java.util.function.Consumer<String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setInheritsPopupMenu(true);
        boolean boolean14 = managementDashboard11.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget15 = null;
        managementDashboard11.setDropTarget(dropTarget15);
        boolean boolean17 = managementDashboard11.getAutoscrolls();
        java.util.function.Consumer<String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        managementDashboard19.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy22 = null;
        managementDashboard19.setFocusTraversalPolicy(focusTraversalPolicy22);
        Object obj24 = managementDashboard11.getClientProperty((Object) managementDashboard19);
        java.util.function.Consumer<String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        managementDashboard26.setRequestFocusEnabled(false);
        java.awt.Event event29 = null;
        boolean boolean31 = managementDashboard26.keyUp(event29, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener32 = null;
        managementDashboard26.addInputMethodListener(inputMethodListener32);
        java.awt.Dimension dimension34 = managementDashboard26.getMaximumSize();
        int int35 = managementDashboard11.getComponentZOrder((java.awt.Component) managementDashboard26);
        javax.swing.KeyStroke keyStroke36 = null;
        int int37 = managementDashboard11.getConditionForKeyStroke(keyStroke36);
        managementDashboard11.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer39 = null;
        java.awt.Image image40 = managementDashboard11.createImage(imageProducer39);
        boolean boolean46 = managementDashboard1.imageUpdate(image40, (int) (byte) 10, (int) (short) 10, 4, (int) (short) 0, 2);
        managementDashboard1.enableInputMethods(false);
        java.util.function.Consumer<String> strConsumer49 = null;
        ManagementDashboard managementDashboard50 = new ManagementDashboard(strConsumer49);
        managementDashboard50.setInheritsPopupMenu(true);
        boolean boolean53 = managementDashboard50.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget54 = null;
        managementDashboard50.setDropTarget(dropTarget54);
        java.awt.Dimension dimension56 = null;
        managementDashboard50.setPreferredSize(dimension56);
        javax.swing.event.AncestorListener ancestorListener58 = null;
        managementDashboard50.removeAncestorListener(ancestorListener58);
        java.awt.Dimension dimension60 = managementDashboard50.getPreferredSize();
        java.awt.Dimension dimension61 = managementDashboard50.getPreferredSize();
        java.util.function.Consumer<String> strConsumer62 = null;
        ManagementDashboard managementDashboard63 = new ManagementDashboard(strConsumer62);
        managementDashboard63.setRequestFocusEnabled(false);
        java.awt.Event event66 = null;
        boolean boolean68 = managementDashboard63.keyUp(event66, (int) (short) 1);
        java.util.function.Consumer<String> strConsumer69 = null;
        ManagementDashboard managementDashboard70 = new ManagementDashboard(strConsumer69);
        managementDashboard70.setRequestFocusEnabled(false);
        java.awt.Event event73 = null;
        boolean boolean75 = managementDashboard70.keyUp(event73, (int) (short) 1);
        managementDashboard70.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener79 = null;
        managementDashboard70.removePropertyChangeListener("", propertyChangeListener79);
        java.awt.Dimension dimension81 = managementDashboard70.getPreferredSize();
        managementDashboard63.setSize(dimension81);
        java.awt.Dimension dimension83 = managementDashboard50.getSize(dimension81);
        managementDashboard1.setPreferredSize(dimension81);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(dimension34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(image40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(dimension60);
        org.junit.Assert.assertNotNull(dimension61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(dimension81);
        org.junit.Assert.assertNotNull(dimension83);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.Event event3 = null;
        boolean boolean5 = managementDashboard1.lostFocus(event3, (Object) "");
        managementDashboard1.setAutoscrolls(false);
        java.awt.Graphics graphics8 = null;
        managementDashboard1.update(graphics8);
        java.awt.Dimension dimension10 = managementDashboard1.getPreferredSize();
        java.awt.event.ActionListener actionListener11 = null;
        javax.swing.KeyStroke keyStroke12 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.registerKeyboardAction(actionListener11, keyStroke12, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(dimension10);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard1.removePropertyChangeListener("", propertyChangeListener10);
        managementDashboard1.doLayout();
        javax.swing.JPopupMenu jPopupMenu13 = managementDashboard1.getComponentPopupMenu();
        java.awt.event.HierarchyListener hierarchyListener14 = null;
        managementDashboard1.removeHierarchyListener(hierarchyListener14);
        java.beans.VetoableChangeListener[] vetoableChangeListenerArray16 = managementDashboard1.getVetoableChangeListeners();
        java.awt.event.MouseEvent mouseEvent17 = null;
        java.awt.Point point18 = managementDashboard1.getToolTipLocation(mouseEvent17);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(jPopupMenu13);
        org.junit.Assert.assertNotNull(vetoableChangeListenerArray16);
        org.junit.Assert.assertArrayEquals(vetoableChangeListenerArray16, new java.beans.VetoableChangeListener[] {});
        org.junit.Assert.assertNull(point18);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        boolean boolean12 = managementDashboard11.isCursorSet();
        java.awt.Event event13 = null;
        boolean boolean15 = managementDashboard11.lostFocus(event13, (Object) "");
        java.util.function.Consumer<String> strConsumer16 = null;
        ManagementDashboard managementDashboard17 = new ManagementDashboard(strConsumer16);
        managementDashboard17.setRequestFocusEnabled(false);
        java.awt.Event event20 = null;
        boolean boolean22 = managementDashboard17.keyUp(event20, (int) (short) 1);
        managementDashboard17.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray25 = managementDashboard17.getHierarchyListeners();
        jToolTip9.add((java.awt.Component) managementDashboard11, (Object) hierarchyListenerArray25);
        boolean boolean27 = managementDashboard11.isManagingFocus();
        String str28 = managementDashboard11.getToolTipText();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray25);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray25, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        Object obj14 = managementDashboard1.getClientProperty((Object) managementDashboard9);
        java.util.function.Consumer<String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        managementDashboard16.setRequestFocusEnabled(false);
        java.awt.Event event19 = null;
        boolean boolean21 = managementDashboard16.keyUp(event19, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener22 = null;
        managementDashboard16.addInputMethodListener(inputMethodListener22);
        java.awt.Dimension dimension24 = managementDashboard16.getMaximumSize();
        int int25 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard16);
        javax.swing.KeyStroke keyStroke26 = null;
        int int27 = managementDashboard1.getConditionForKeyStroke(keyStroke26);
        managementDashboard1.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer29 = null;
        java.awt.Image image30 = managementDashboard1.createImage(imageProducer29);
        managementDashboard1.setLocation(2, (-1));
        java.awt.event.MouseMotionListener mouseMotionListener34 = null;
        managementDashboard1.addMouseMotionListener(mouseMotionListener34);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(image30);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        PaymentStrategy paymentStrategy0 = null;
        PaymentProcessor paymentProcessor1 = new PaymentProcessor(paymentStrategy0);
        CreditCardPayment creditCardPayment2 = new CreditCardPayment();
        paymentProcessor1.setPaymentStrategy((PaymentStrategy) creditCardPayment2);
        PaymentStrategy paymentStrategy4 = null;
        PaymentProcessor paymentProcessor5 = new PaymentProcessor(paymentStrategy4);
        CreditCardPayment creditCardPayment6 = new CreditCardPayment();
        paymentProcessor5.setPaymentStrategy((PaymentStrategy) creditCardPayment6);
        paymentProcessor1.setPaymentStrategy((PaymentStrategy) creditCardPayment6);
        creditCardPayment6.pay((double) (short) 100);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        java.util.function.Consumer<String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        javax.swing.event.AncestorListener ancestorListener9 = null;
        managementDashboard1.removeAncestorListener(ancestorListener9);
        java.awt.Dimension dimension11 = managementDashboard1.getPreferredSize();
        java.util.function.Consumer<String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        managementDashboard13.setInheritsPopupMenu(true);
        boolean boolean16 = managementDashboard13.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget17 = null;
        managementDashboard13.setDropTarget(dropTarget17);
        java.awt.Dimension dimension19 = null;
        managementDashboard13.setPreferredSize(dimension19);
        java.awt.Event event21 = null;
        boolean boolean24 = managementDashboard13.mouseExit(event21, (int) 'a', (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        boolean boolean27 = managementDashboard26.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests28 = managementDashboard26.getInputMethodRequests();
        java.awt.Container container29 = managementDashboard26.getTopLevelAncestor();
        java.awt.Color color30 = null;
        managementDashboard26.setForeground(color30);
        javax.swing.KeyStroke keyStroke32 = null;
        java.awt.event.ActionListener actionListener33 = managementDashboard26.getActionForKeyStroke(keyStroke32);
        javax.swing.JToolTip jToolTip34 = managementDashboard26.createToolTip();
        java.awt.Event event35 = null;
        java.util.function.Consumer<java.lang.String> strConsumer36 = null;
        ManagementDashboard managementDashboard37 = new ManagementDashboard(strConsumer36);
        managementDashboard37.setInheritsPopupMenu(true);
        boolean boolean40 = managementDashboard37.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget41 = null;
        managementDashboard37.setDropTarget(dropTarget41);
        java.awt.Dimension dimension43 = null;
        managementDashboard37.setPreferredSize(dimension43);
        javax.swing.event.AncestorListener ancestorListener45 = null;
        managementDashboard37.removeAncestorListener(ancestorListener45);
        java.awt.Dimension dimension47 = managementDashboard37.getPreferredSize();
        java.awt.Dimension dimension48 = managementDashboard37.getPreferredSize();
        managementDashboard37.setDebugGraphicsOptions(10);
        boolean boolean51 = jToolTip34.lostFocus(event35, (java.lang.Object) managementDashboard37);
        java.awt.Rectangle rectangle52 = jToolTip34.bounds();
        managementDashboard13.computeVisibleRect(rectangle52);
        managementDashboard1.computeVisibleRect(rectangle52);
        java.util.function.Consumer<java.lang.String> strConsumer55 = null;
        ManagementDashboard managementDashboard56 = new ManagementDashboard(strConsumer55);
        managementDashboard56.setRequestFocusEnabled(false);
        managementDashboard56.enable();
        managementDashboard56.list();
        java.awt.Point point61 = managementDashboard56.location();
        java.awt.Point point62 = managementDashboard1.getLocation(point61);
        java.util.function.Consumer<java.lang.String> strConsumer63 = null;
        ManagementDashboard managementDashboard64 = new ManagementDashboard(strConsumer63);
        managementDashboard64.setInheritsPopupMenu(true);
        boolean boolean67 = managementDashboard64.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget68 = null;
        managementDashboard64.setDropTarget(dropTarget68);
        boolean boolean70 = managementDashboard64.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer71 = null;
        ManagementDashboard managementDashboard72 = new ManagementDashboard(strConsumer71);
        managementDashboard72.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy75 = null;
        managementDashboard72.setFocusTraversalPolicy(focusTraversalPolicy75);
        java.lang.Object obj77 = managementDashboard64.getClientProperty((java.lang.Object) managementDashboard72);
        java.util.function.Consumer<java.lang.String> strConsumer78 = null;
        ManagementDashboard managementDashboard79 = new ManagementDashboard(strConsumer78);
        managementDashboard79.setRequestFocusEnabled(false);
        java.awt.Event event82 = null;
        boolean boolean84 = managementDashboard79.keyUp(event82, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener85 = null;
        managementDashboard79.addInputMethodListener(inputMethodListener85);
        java.awt.Dimension dimension87 = managementDashboard79.getMaximumSize();
        int int88 = managementDashboard64.getComponentZOrder((java.awt.Component) managementDashboard79);
        javax.swing.KeyStroke keyStroke89 = null;
        int int90 = managementDashboard64.getConditionForKeyStroke(keyStroke89);
        managementDashboard64.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer92 = null;
        java.awt.Image image93 = managementDashboard64.createImage(imageProducer92);
        boolean boolean99 = managementDashboard1.imageUpdate(image93, 128, 2, (int) (byte) -1, 64, 128);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(dimension11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(inputMethodRequests28);
        org.junit.Assert.assertNull(container29);
        org.junit.Assert.assertNull(actionListener33);
        org.junit.Assert.assertNotNull(jToolTip34);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(dimension47);
        org.junit.Assert.assertNotNull(dimension48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(rectangle52);
        org.junit.Assert.assertNotNull(point61);
        org.junit.Assert.assertNotNull(point62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(dimension87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(image93);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.io.PrintStream printStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jToolTip9.list(printStream10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.print(String)\" because \"out\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        ParkingSpace parkingSpace4 = new ParkingSpace((int) (byte) 10, "data/managerData.csv", "", "ToolTipText");
        java.lang.String str5 = parkingSpace4.getCurrentUser();
        int int6 = parkingSpace4.getIndex();
        java.lang.String str7 = parkingSpace4.getCurrentUser();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        javax.swing.event.AncestorListener ancestorListener9 = null;
        managementDashboard1.removeAncestorListener(ancestorListener9);
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy15 = null;
        managementDashboard12.setFocusTraversalPolicy(focusTraversalPolicy15);
        java.awt.Event event17 = null;
        boolean boolean20 = managementDashboard12.mouseDrag(event17, (int) (short) 10, 4);
        managementDashboard12.setEnabled(true);
        java.awt.Component component23 = managementDashboard1.add((java.awt.Component) managementDashboard12);
        component23.show();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(component23);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        java.awt.event.HierarchyListener hierarchyListener7 = null;
        managementDashboard1.addHierarchyListener(hierarchyListener7);
        java.awt.Cursor cursor9 = null;
        managementDashboard1.setCursor(cursor9);
        java.awt.Point point12 = managementDashboard1.getMousePosition(false);
        managementDashboard1.firePropertyChange("data/managerData.csv", (byte) -1, (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(point12);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        java.awt.event.HierarchyListener hierarchyListener7 = null;
        managementDashboard1.addHierarchyListener(hierarchyListener7);
        java.awt.Cursor cursor9 = null;
        managementDashboard1.setCursor(cursor9);
        java.awt.LayoutManager layoutManager11 = null;
        managementDashboard1.setLayout(layoutManager11);
        boolean boolean13 = managementDashboard1.getFocusTraversalKeysEnabled();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        boolean boolean29 = component28.isEnabled();
        java.beans.PropertyChangeListener propertyChangeListener30 = null;
        component28.removePropertyChangeListener(propertyChangeListener30);
        component28.nextFocus();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setRequestFocusEnabled(false);
        java.awt.Event event14 = null;
        boolean boolean16 = managementDashboard11.keyUp(event14, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        managementDashboard18.setRequestFocusEnabled(false);
        java.awt.Event event21 = null;
        boolean boolean23 = managementDashboard18.keyUp(event21, (int) (short) 1);
        managementDashboard18.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener27 = null;
        managementDashboard18.removePropertyChangeListener("", propertyChangeListener27);
        java.awt.Dimension dimension29 = managementDashboard18.getPreferredSize();
        managementDashboard11.setSize(dimension29);
        managementDashboard1.setMinimumSize(dimension29);
        java.util.function.Consumer<java.lang.String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        managementDashboard33.setRequestFocusEnabled(false);
        java.awt.Event event36 = null;
        boolean boolean38 = managementDashboard33.keyUp(event36, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener39 = null;
        managementDashboard33.addInputMethodListener(inputMethodListener39);
        boolean boolean41 = managementDashboard33.isValidateRoot();
        boolean boolean42 = managementDashboard1.isFocusCycleRoot((java.awt.Container) managementDashboard33);
        boolean boolean43 = managementDashboard1.isForegroundSet();
        managementDashboard1.hide();
        int int47 = managementDashboard1.getBaseline((int) (byte) 10, (int) (short) 0);
        java.util.function.Consumer<java.lang.String> strConsumer48 = null;
        ManagementDashboard managementDashboard49 = new ManagementDashboard(strConsumer48);
        boolean boolean50 = managementDashboard49.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests51 = managementDashboard49.getInputMethodRequests();
        managementDashboard49.move((int) (byte) 1, (int) '#');
        boolean boolean55 = managementDashboard49.isFocusTraversable();
        java.util.function.Consumer<java.lang.String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        managementDashboard57.setRequestFocusEnabled(false);
        managementDashboard57.enable();
        managementDashboard57.list();
        java.awt.Point point62 = managementDashboard57.location();
        boolean boolean63 = managementDashboard49.contains(point62);
        java.awt.Point point64 = managementDashboard1.getLocation(point62);
        boolean boolean65 = managementDashboard1.isCursorSet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(dimension29);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(inputMethodRequests51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(point62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(point64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        managementDashboard5.requestFocus();
        boolean boolean11 = managementDashboard5.isDisplayable();
        java.util.function.Consumer<java.lang.String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        managementDashboard13.setRequestFocusEnabled(false);
        java.awt.Event event16 = null;
        boolean boolean18 = managementDashboard13.keyUp(event16, (int) (short) 1);
        managementDashboard13.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener22 = null;
        managementDashboard13.removePropertyChangeListener("", propertyChangeListener22);
        managementDashboard13.doLayout();
        java.util.function.Consumer<java.lang.String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        managementDashboard26.setInheritsPopupMenu(true);
        boolean boolean29 = managementDashboard26.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget30 = null;
        managementDashboard26.setDropTarget(dropTarget30);
        java.awt.Dimension dimension32 = null;
        managementDashboard26.setPreferredSize(dimension32);
        java.awt.Event event34 = null;
        boolean boolean37 = managementDashboard26.mouseExit(event34, (int) 'a', (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        boolean boolean40 = managementDashboard39.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests41 = managementDashboard39.getInputMethodRequests();
        java.awt.Container container42 = managementDashboard39.getTopLevelAncestor();
        java.awt.Color color43 = null;
        managementDashboard39.setForeground(color43);
        javax.swing.KeyStroke keyStroke45 = null;
        java.awt.event.ActionListener actionListener46 = managementDashboard39.getActionForKeyStroke(keyStroke45);
        javax.swing.JToolTip jToolTip47 = managementDashboard39.createToolTip();
        java.awt.Event event48 = null;
        java.util.function.Consumer<java.lang.String> strConsumer49 = null;
        ManagementDashboard managementDashboard50 = new ManagementDashboard(strConsumer49);
        managementDashboard50.setInheritsPopupMenu(true);
        boolean boolean53 = managementDashboard50.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget54 = null;
        managementDashboard50.setDropTarget(dropTarget54);
        java.awt.Dimension dimension56 = null;
        managementDashboard50.setPreferredSize(dimension56);
        javax.swing.event.AncestorListener ancestorListener58 = null;
        managementDashboard50.removeAncestorListener(ancestorListener58);
        java.awt.Dimension dimension60 = managementDashboard50.getPreferredSize();
        java.awt.Dimension dimension61 = managementDashboard50.getPreferredSize();
        managementDashboard50.setDebugGraphicsOptions(10);
        boolean boolean64 = jToolTip47.lostFocus(event48, (java.lang.Object) managementDashboard50);
        java.awt.Rectangle rectangle65 = jToolTip47.bounds();
        managementDashboard26.computeVisibleRect(rectangle65);
        managementDashboard13.setMixingCutoutShape((java.awt.Shape) rectangle65);
        managementDashboard5.paintImmediately(rectangle65);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(inputMethodRequests41);
        org.junit.Assert.assertNull(container42);
        org.junit.Assert.assertNull(actionListener46);
        org.junit.Assert.assertNotNull(jToolTip47);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(dimension60);
        org.junit.Assert.assertNotNull(dimension61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(rectangle65);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        boolean boolean27 = managementDashboard12.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener29 = null;
        managementDashboard12.addPropertyChangeListener("ToolTipText", propertyChangeListener29);
        java.awt.Component[] componentArray31 = managementDashboard12.getComponents();
        java.awt.Font font32 = null;
        managementDashboard12.setFont(font32);
        javax.swing.plaf.PanelUI panelUI34 = managementDashboard12.getUI();
        boolean boolean35 = managementDashboard12.isRequestFocusEnabled();
        java.util.function.Consumer<java.lang.String> strConsumer37 = null;
        ManagementDashboard managementDashboard38 = new ManagementDashboard(strConsumer37);
        managementDashboard38.setRequestFocusEnabled(false);
        java.awt.Event event41 = null;
        boolean boolean43 = managementDashboard38.keyUp(event41, (int) (short) 1);
        managementDashboard38.setAutoscrolls(true);
        boolean boolean46 = managementDashboard38.isRequestFocusEnabled();
        javax.swing.InputMap inputMap48 = managementDashboard38.getInputMap((int) (short) 1);
        managementDashboard12.setInputMap(1, inputMap48);
        managementDashboard12.firePropertyChange("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]", 'a', 'a');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(componentArray31);
        org.junit.Assert.assertNotNull(panelUI34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(inputMap48);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        java.lang.Object obj14 = managementDashboard1.getClientProperty((java.lang.Object) managementDashboard9);
        java.util.function.Consumer<java.lang.String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        managementDashboard16.setRequestFocusEnabled(false);
        java.awt.Event event19 = null;
        boolean boolean21 = managementDashboard16.keyUp(event19, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener22 = null;
        managementDashboard16.addInputMethodListener(inputMethodListener22);
        java.awt.Dimension dimension24 = managementDashboard16.getMaximumSize();
        int int25 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard16);
        java.awt.Component component27 = managementDashboard1.getComponent(1);
        java.awt.MenuComponent menuComponent28 = null;
        component27.remove(menuComponent28);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(component27);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        java.lang.Object obj14 = managementDashboard1.getClientProperty((java.lang.Object) managementDashboard9);
        java.util.function.Consumer<java.lang.String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        managementDashboard16.setRequestFocusEnabled(false);
        java.awt.Event event19 = null;
        boolean boolean21 = managementDashboard16.keyUp(event19, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener22 = null;
        managementDashboard16.addInputMethodListener(inputMethodListener22);
        java.awt.Dimension dimension24 = managementDashboard16.getMaximumSize();
        int int25 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard16);
        managementDashboard16.setAlignmentX(0.0f);
        java.awt.Graphics graphics28 = null;
        managementDashboard16.printComponents(graphics28);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        boolean boolean29 = component28.isEnabled();
        boolean boolean30 = component28.isBackgroundSet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        managementDashboard1.setRequestFocusEnabled(true);
        managementDashboard1.addNotify();
        managementDashboard1.firePropertyChange("hi!", (byte) -1, (byte) 100);
        java.util.function.Consumer<java.lang.String> strConsumer28 = null;
        ManagementDashboard managementDashboard29 = new ManagementDashboard(strConsumer28);
        managementDashboard29.setInheritsPopupMenu(true);
        boolean boolean32 = managementDashboard29.isValidateRoot();
        java.awt.LayoutManager layoutManager33 = null;
        managementDashboard29.setLayout(layoutManager33);
        boolean boolean35 = managementDashboard29.getFocusTraversalKeysEnabled();
        java.awt.Event event36 = null;
        boolean boolean39 = managementDashboard29.mouseEnter(event36, (int) (byte) 0, 0);
        java.awt.event.MouseEvent mouseEvent40 = null;
        java.awt.Point point41 = managementDashboard29.getPopupLocation(mouseEvent40);
        java.util.function.Consumer<java.lang.String> strConsumer42 = null;
        ManagementDashboard managementDashboard43 = new ManagementDashboard(strConsumer42);
        managementDashboard43.setInheritsPopupMenu(true);
        boolean boolean46 = managementDashboard43.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget47 = null;
        managementDashboard43.setDropTarget(dropTarget47);
        boolean boolean49 = managementDashboard43.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer50 = null;
        ManagementDashboard managementDashboard51 = new ManagementDashboard(strConsumer50);
        managementDashboard51.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy54 = null;
        managementDashboard51.setFocusTraversalPolicy(focusTraversalPolicy54);
        java.lang.Object obj56 = managementDashboard43.getClientProperty((java.lang.Object) managementDashboard51);
        java.util.function.Consumer<java.lang.String> strConsumer57 = null;
        ManagementDashboard managementDashboard58 = new ManagementDashboard(strConsumer57);
        managementDashboard58.setRequestFocusEnabled(false);
        java.awt.Event event61 = null;
        boolean boolean63 = managementDashboard58.keyUp(event61, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener64 = null;
        managementDashboard58.addInputMethodListener(inputMethodListener64);
        java.awt.Dimension dimension66 = managementDashboard58.getMaximumSize();
        int int67 = managementDashboard43.getComponentZOrder((java.awt.Component) managementDashboard58);
        java.awt.Component component68 = managementDashboard43.getNextFocusableComponent();
        java.awt.Insets insets69 = managementDashboard43.insets();
        java.awt.Insets insets70 = managementDashboard29.getInsets(insets69);
        java.awt.Insets insets71 = managementDashboard1.getInsets(insets69);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(point41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(dimension66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(component68);
        org.junit.Assert.assertNotNull(insets69);
        org.junit.Assert.assertNotNull(insets70);
        org.junit.Assert.assertNotNull(insets71);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        managementDashboard30.setRequestFocusEnabled(false);
        java.awt.Event event33 = null;
        boolean boolean35 = managementDashboard30.keyUp(event33, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener36 = null;
        managementDashboard30.addInputMethodListener(inputMethodListener36);
        java.awt.Dimension dimension38 = managementDashboard30.getMaximumSize();
        managementDashboard14.setPreferredSize(dimension38);
        managementDashboard14.firePropertyChange("data/managerData.csv", ' ', ' ');
        java.awt.ComponentOrientation componentOrientation44 = managementDashboard14.getComponentOrientation();
        managementDashboard14.setSize((int) 'a', 100);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(dimension38);
        org.junit.Assert.assertNotNull(componentOrientation44);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        managementDashboard1.move((int) (byte) 1, (int) '#');
        boolean boolean7 = managementDashboard1.isFocusTraversable();
        java.awt.event.FocusListener focusListener8 = null;
        managementDashboard1.removeFocusListener(focusListener8);
        java.awt.AWTEvent aWTEvent10 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.dispatchEvent(aWTEvent10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.AWTEvent.getID()\" because \"e\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        java.awt.event.HierarchyListener hierarchyListener7 = null;
        managementDashboard1.addHierarchyListener(hierarchyListener7);
        java.awt.Cursor cursor9 = null;
        managementDashboard1.setCursor(cursor9);
        java.awt.Event event11 = null;
        boolean boolean14 = managementDashboard1.mouseDown(event11, (-1), (int) (short) 10);
        managementDashboard1.resize((int) (byte) 1, (int) (byte) 10);
        boolean boolean18 = managementDashboard1.requestDefaultFocus();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        java.awt.Dimension dimension9 = managementDashboard1.getMaximumSize();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setRequestFocusEnabled(false);
        java.awt.Event event14 = null;
        boolean boolean16 = managementDashboard11.keyUp(event14, (int) (short) 1);
        managementDashboard11.list();
        javax.swing.plaf.PanelUI panelUI18 = managementDashboard11.getUI();
        managementDashboard1.setUI(panelUI18);
        int int20 = managementDashboard1.getComponentCount();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(dimension9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(panelUI18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        User user0 = null;
        MainSystem.currentUser = user0;
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseDrag(event6, (int) (short) 10, 4);
        managementDashboard1.setEnabled(true);
        managementDashboard1.invalidate();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.beans.PropertyChangeListener propertyChangeListener14 = null;
        managementDashboard1.removePropertyChangeListener("ToolTipText", propertyChangeListener14);
        java.awt.event.ContainerListener[] containerListenerArray16 = managementDashboard1.getContainerListeners();
        // The following exception was thrown during execution in test generation
        try {
            javax.swing.InputMap inputMap18 = managementDashboard1.getInputMap((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(containerListenerArray16);
        org.junit.Assert.assertArrayEquals(containerListenerArray16, new java.awt.event.ContainerListener[] {});
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.beans.PropertyChangeListener propertyChangeListener11 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener11);
        boolean boolean13 = managementDashboard5.isPreferredSizeSet();
        managementDashboard5.setToolTipText("");
        managementDashboard5.setSize((int) (byte) 0, 4);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        java.io.PrintStream printStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.println(Object)\" because \"out\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        boolean boolean29 = managementDashboard14.isLightweight();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        boolean boolean5 = managementDashboard1.isFocusTraversalPolicyProvider();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.list();
        javax.swing.plaf.PanelUI panelUI8 = managementDashboard1.getUI();
        java.awt.event.ContainerListener[] containerListenerArray9 = managementDashboard1.getContainerListeners();
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.remove(128);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Array index out of range: 128");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(panelUI8);
        org.junit.Assert.assertNotNull(containerListenerArray9);
        org.junit.Assert.assertArrayEquals(containerListenerArray9, new java.awt.event.ContainerListener[] {});
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        UserDashboard userDashboard1 = new UserDashboard(strConsumer0);
        userDashboard1.transferFocusDownCycle();
        java.awt.FocusTraversalPolicy focusTraversalPolicy3 = userDashboard1.getFocusTraversalPolicy();
        boolean boolean4 = userDashboard1.isPaintingForPrint();
        org.junit.Assert.assertNull(focusTraversalPolicy3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        java.awt.event.MouseListener mouseListener9 = null;
        managementDashboard1.removeMouseListener(mouseListener9);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        boolean boolean9 = managementDashboard1.isValidateRoot();
        java.awt.event.MouseWheelListener[] mouseWheelListenerArray10 = managementDashboard1.getMouseWheelListeners();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(mouseWheelListenerArray10);
        org.junit.Assert.assertArrayEquals(mouseWheelListenerArray10, new java.awt.event.MouseWheelListener[] {});
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseDrag(event6, (int) (short) 10, 4);
        managementDashboard1.setEnabled(true);
        java.awt.Point point13 = managementDashboard1.getMousePosition(true);
        managementDashboard1.transferFocusDownCycle();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(point13);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        managementDashboard1.setRequestFocusEnabled(true);
        java.awt.Font font23 = null;
        managementDashboard1.setFont(font23);
        managementDashboard1.transferFocusDownCycle();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.LayoutManager layoutManager5 = null;
        managementDashboard1.setLayout(layoutManager5);
        boolean boolean7 = managementDashboard1.getFocusTraversalKeysEnabled();
        managementDashboard1.removeNotify();
        boolean boolean9 = managementDashboard1.isShowing();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        managementDashboard1.setRequestFocusEnabled(true);
        managementDashboard1.addNotify();
        int int24 = managementDashboard1.getX();
        boolean boolean25 = managementDashboard1.isLightweight();
        java.awt.Graphics graphics26 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.paintAll(graphics26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.Graphics.getClip()\" because \"g\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        managementDashboard1.setInheritsPopupMenu(false);
        java.awt.Dimension dimension11 = managementDashboard1.getMaximumSize();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component13 = managementDashboard1.getComponent(4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: No such child: 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(dimension11);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setRequestFocusEnabled(false);
        java.awt.Event event14 = null;
        boolean boolean16 = managementDashboard11.keyUp(event14, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        managementDashboard18.setRequestFocusEnabled(false);
        java.awt.Event event21 = null;
        boolean boolean23 = managementDashboard18.keyUp(event21, (int) (short) 1);
        managementDashboard18.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener27 = null;
        managementDashboard18.removePropertyChangeListener("", propertyChangeListener27);
        java.awt.Dimension dimension29 = managementDashboard18.getPreferredSize();
        managementDashboard11.setSize(dimension29);
        managementDashboard1.setMinimumSize(dimension29);
        managementDashboard1.enable();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(dimension29);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        java.beans.PropertyChangeListener propertyChangeListener21 = null;
        managementDashboard1.removePropertyChangeListener(propertyChangeListener21);
        java.awt.event.ComponentListener componentListener23 = null;
        managementDashboard1.addComponentListener(componentListener23);
        java.util.function.Consumer<java.lang.String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        boolean boolean27 = managementDashboard26.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests28 = managementDashboard26.getInputMethodRequests();
        java.awt.Container container29 = managementDashboard26.getTopLevelAncestor();
        java.awt.Color color30 = null;
        managementDashboard26.setForeground(color30);
        managementDashboard26.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean37 = managementDashboard26.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        managementDashboard39.setRequestFocusEnabled(false);
        java.awt.Event event42 = null;
        boolean boolean44 = managementDashboard39.keyUp(event42, (int) (short) 1);
        managementDashboard39.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener48 = null;
        managementDashboard39.removePropertyChangeListener("", propertyChangeListener48);
        managementDashboard39.doLayout();
        javax.swing.JPopupMenu jPopupMenu51 = managementDashboard39.getComponentPopupMenu();
        java.awt.Component component53 = managementDashboard26.add((java.awt.Component) managementDashboard39, 1);
        java.awt.Rectangle rectangle54 = managementDashboard26.getBounds();
        managementDashboard1.computeVisibleRect(rectangle54);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(inputMethodRequests28);
        org.junit.Assert.assertNull(container29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(jPopupMenu51);
        org.junit.Assert.assertNotNull(component53);
        org.junit.Assert.assertNotNull(rectangle54);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        boolean boolean27 = managementDashboard12.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener29 = null;
        managementDashboard12.addPropertyChangeListener("ToolTipText", propertyChangeListener29);
        java.awt.Component[] componentArray31 = managementDashboard12.getComponents();
        java.util.function.Consumer<java.lang.String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        managementDashboard33.setRequestFocusEnabled(false);
        java.awt.Event event36 = null;
        boolean boolean38 = managementDashboard33.keyUp(event36, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer39 = null;
        ManagementDashboard managementDashboard40 = new ManagementDashboard(strConsumer39);
        managementDashboard40.setRequestFocusEnabled(false);
        java.awt.Event event43 = null;
        boolean boolean45 = managementDashboard40.keyUp(event43, (int) (short) 1);
        managementDashboard40.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener49 = null;
        managementDashboard40.removePropertyChangeListener("", propertyChangeListener49);
        java.awt.Dimension dimension51 = managementDashboard40.getPreferredSize();
        managementDashboard33.setSize(dimension51);
        managementDashboard33.setRequestFocusEnabled(true);
        managementDashboard33.addNotify();
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard12.setComponentZOrder((java.awt.Component) managementDashboard33, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: illegal component position");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(componentArray31);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(dimension51);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener5 = null;
        managementDashboard1.removeContainerListener(containerListener5);
        boolean boolean7 = managementDashboard1.getIgnoreRepaint();
        javax.swing.event.AncestorListener ancestorListener8 = null;
        managementDashboard1.removeAncestorListener(ancestorListener8);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.list();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setRequestFocusEnabled(false);
        java.awt.Event event12 = null;
        boolean boolean14 = managementDashboard9.keyUp(event12, (int) (short) 1);
        managementDashboard9.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener18 = null;
        managementDashboard9.removePropertyChangeListener("", propertyChangeListener18);
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.add((java.awt.Component) managementDashboard9, (java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cannot add to layout: unknown constraint: hi!");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        boolean boolean9 = managementDashboard1.isFocusable();
        java.awt.Event event10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = managementDashboard1.handleEvent(event10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        boolean boolean9 = managementDashboard1.isRequestFocusEnabled();
        javax.swing.InputMap inputMap11 = managementDashboard1.getInputMap((int) (short) 1);
        managementDashboard1.setDebugGraphicsOptions(2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(inputMap11);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        managementDashboard1.setRequestFocusEnabled(true);
        javax.swing.border.Border border23 = null;
        managementDashboard1.setBorder(border23);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setRequestFocusEnabled(false);
        java.awt.Event event14 = null;
        boolean boolean16 = managementDashboard11.keyUp(event14, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        managementDashboard18.setRequestFocusEnabled(false);
        java.awt.Event event21 = null;
        boolean boolean23 = managementDashboard18.keyUp(event21, (int) (short) 1);
        managementDashboard18.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener27 = null;
        managementDashboard18.removePropertyChangeListener("", propertyChangeListener27);
        java.awt.Dimension dimension29 = managementDashboard18.getPreferredSize();
        managementDashboard11.setSize(dimension29);
        managementDashboard1.setMinimumSize(dimension29);
        java.util.function.Consumer<java.lang.String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        managementDashboard33.setRequestFocusEnabled(false);
        java.awt.Event event36 = null;
        boolean boolean38 = managementDashboard33.keyUp(event36, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener39 = null;
        managementDashboard33.addInputMethodListener(inputMethodListener39);
        boolean boolean41 = managementDashboard33.isValidateRoot();
        boolean boolean42 = managementDashboard1.isFocusCycleRoot((java.awt.Container) managementDashboard33);
        boolean boolean43 = managementDashboard1.isForegroundSet();
        managementDashboard1.hide();
        int int47 = managementDashboard1.getBaseline((int) (byte) 10, (int) (short) 0);
        java.util.function.Consumer<java.lang.String> strConsumer48 = null;
        ManagementDashboard managementDashboard49 = new ManagementDashboard(strConsumer48);
        boolean boolean50 = managementDashboard49.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests51 = managementDashboard49.getInputMethodRequests();
        managementDashboard49.move((int) (byte) 1, (int) '#');
        boolean boolean55 = managementDashboard49.isFocusTraversable();
        java.util.function.Consumer<java.lang.String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        managementDashboard57.setRequestFocusEnabled(false);
        managementDashboard57.enable();
        managementDashboard57.list();
        java.awt.Point point62 = managementDashboard57.location();
        boolean boolean63 = managementDashboard49.contains(point62);
        java.awt.Point point64 = managementDashboard1.getLocation(point62);
        java.beans.VetoableChangeListener vetoableChangeListener65 = null;
        managementDashboard1.removeVetoableChangeListener(vetoableChangeListener65);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(dimension29);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(inputMethodRequests51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(point62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(point64);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        managementDashboard1.setRequestFocusEnabled(true);
        managementDashboard1.addNotify();
        managementDashboard1.firePropertyChange("hi!", (byte) -1, (byte) 100);
        managementDashboard1.setRequestFocusEnabled(true);
        boolean boolean30 = managementDashboard1.isLightweight();
        managementDashboard1.setFocusCycleRoot(true);
        java.beans.PropertyChangeListener propertyChangeListener34 = null;
        managementDashboard1.removePropertyChangeListener("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]", propertyChangeListener34);
        boolean boolean36 = managementDashboard1.isFocusOwner();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.awt.event.ContainerListener containerListener10 = null;
        managementDashboard5.addContainerListener(containerListener10);
        managementDashboard5.transferFocusBackward();
        int int13 = managementDashboard5.getDebugGraphicsOptions();
        managementDashboard5.move((int) (short) 10, (int) (byte) 10);
        managementDashboard5.reshape((int) '#', (-1), 10, (int) ' ');
        java.awt.Event event22 = null;
        boolean boolean25 = managementDashboard5.mouseUp(event22, (int) (byte) 0, (int) (short) 10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        boolean boolean27 = managementDashboard12.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener29 = null;
        managementDashboard12.addPropertyChangeListener("ToolTipText", propertyChangeListener29);
        java.awt.Component[] componentArray31 = managementDashboard12.getComponents();
        java.awt.Font font32 = null;
        managementDashboard12.setFont(font32);
        javax.swing.plaf.PanelUI panelUI34 = managementDashboard12.getUI();
        boolean boolean35 = managementDashboard12.isRequestFocusEnabled();
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard12.remove(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Array index out of range: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(componentArray31);
        org.junit.Assert.assertNotNull(panelUI34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        managementDashboard1.move((int) (byte) 1, (int) '#');
        managementDashboard1.layout();
        managementDashboard1.setEnabled(false);
        boolean boolean10 = managementDashboard1.isFontSet();
        java.awt.ImageCapabilities imageCapabilities13 = null;
        java.awt.image.VolatileImage volatileImage14 = managementDashboard1.createVolatileImage((int) (short) -1, (int) (short) -1, imageCapabilities13);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(volatileImage14);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setInheritsPopupMenu(true);
        managementDashboard11.setName("");
        managementDashboard11.doLayout();
        java.awt.event.KeyListener keyListener17 = null;
        managementDashboard11.addKeyListener(keyListener17);
        java.util.function.Consumer<java.lang.String> strConsumer19 = null;
        ManagementDashboard managementDashboard20 = new ManagementDashboard(strConsumer19);
        managementDashboard20.setInheritsPopupMenu(true);
        boolean boolean23 = managementDashboard20.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget24 = null;
        managementDashboard20.setDropTarget(dropTarget24);
        boolean boolean26 = managementDashboard20.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer27 = null;
        ManagementDashboard managementDashboard28 = new ManagementDashboard(strConsumer27);
        managementDashboard28.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy31 = null;
        managementDashboard28.setFocusTraversalPolicy(focusTraversalPolicy31);
        java.lang.Object obj33 = managementDashboard20.getClientProperty((java.lang.Object) managementDashboard28);
        java.util.function.Consumer<java.lang.String> strConsumer34 = null;
        ManagementDashboard managementDashboard35 = new ManagementDashboard(strConsumer34);
        managementDashboard35.setRequestFocusEnabled(false);
        java.awt.Event event38 = null;
        boolean boolean40 = managementDashboard35.keyUp(event38, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener41 = null;
        managementDashboard35.addInputMethodListener(inputMethodListener41);
        java.awt.Dimension dimension43 = managementDashboard35.getMaximumSize();
        int int44 = managementDashboard20.getComponentZOrder((java.awt.Component) managementDashboard35);
        javax.swing.KeyStroke keyStroke45 = null;
        int int46 = managementDashboard20.getConditionForKeyStroke(keyStroke45);
        managementDashboard20.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer48 = null;
        java.awt.Image image49 = managementDashboard20.createImage(imageProducer48);
        java.util.function.Consumer<java.lang.String> strConsumer50 = null;
        ManagementDashboard managementDashboard51 = new ManagementDashboard(strConsumer50);
        managementDashboard51.setRequestFocusEnabled(false);
        java.awt.Event event54 = null;
        boolean boolean56 = managementDashboard51.keyUp(event54, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener57 = null;
        managementDashboard51.addInputMethodListener(inputMethodListener57);
        java.awt.image.VolatileImage volatileImage61 = managementDashboard51.createVolatileImage((int) (short) 0, 1);
        boolean boolean62 = managementDashboard51.isOptimizedDrawingEnabled();
        javax.swing.ActionMap actionMap63 = managementDashboard51.getActionMap();
        int int64 = managementDashboard11.checkImage(image49, (java.awt.image.ImageObserver) managementDashboard51);
        java.util.function.Consumer<java.lang.String> strConsumer65 = null;
        ManagementDashboard managementDashboard66 = new ManagementDashboard(strConsumer65);
        managementDashboard66.setRequestFocusEnabled(false);
        java.awt.Event event69 = null;
        boolean boolean71 = managementDashboard66.keyUp(event69, (int) (short) 1);
        managementDashboard66.list();
        javax.swing.plaf.PanelUI panelUI73 = managementDashboard66.getUI();
        javax.swing.border.Border border74 = null;
        managementDashboard66.setBorder(border74);
        int int76 = jToolTip9.checkImage(image49, (java.awt.image.ImageObserver) managementDashboard66);
        boolean boolean77 = jToolTip9.isFocusCycleRoot();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(dimension43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(image49);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(volatileImage61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(actionMap63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(panelUI73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseDrag(event6, (int) (short) 10, 4);
        managementDashboard1.setEnabled(true);
        java.io.PrintStream printStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream12, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.println(Object)\" because \"out\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        boolean boolean12 = managementDashboard11.isCursorSet();
        java.awt.Event event13 = null;
        boolean boolean15 = managementDashboard11.lostFocus(event13, (java.lang.Object) "");
        java.util.function.Consumer<java.lang.String> strConsumer16 = null;
        ManagementDashboard managementDashboard17 = new ManagementDashboard(strConsumer16);
        managementDashboard17.setRequestFocusEnabled(false);
        java.awt.Event event20 = null;
        boolean boolean22 = managementDashboard17.keyUp(event20, (int) (short) 1);
        managementDashboard17.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray25 = managementDashboard17.getHierarchyListeners();
        jToolTip9.add((java.awt.Component) managementDashboard11, (java.lang.Object) hierarchyListenerArray25);
        boolean boolean27 = jToolTip9.requestDefaultFocus();
        java.awt.Image image30 = jToolTip9.createImage((int) (short) 10, 2);
        boolean boolean31 = jToolTip9.getVerifyInputWhenFocusTarget();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray25);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray25, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(image30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        boolean boolean27 = managementDashboard12.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener29 = null;
        managementDashboard12.addPropertyChangeListener("ToolTipText", propertyChangeListener29);
        java.awt.Component[] componentArray31 = managementDashboard12.getComponents();
        java.awt.Font font32 = null;
        managementDashboard12.setFont(font32);
        javax.swing.plaf.PanelUI panelUI34 = managementDashboard12.getUI();
        boolean boolean35 = managementDashboard12.isRequestFocusEnabled();
        java.awt.event.HierarchyListener hierarchyListener36 = null;
        managementDashboard12.removeHierarchyListener(hierarchyListener36);
        java.io.PrintStream printStream38 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard12.list(printStream38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.println(Object)\" because \"out\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(componentArray31);
        org.junit.Assert.assertNotNull(panelUI34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        boolean boolean27 = managementDashboard12.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener29 = null;
        managementDashboard12.addPropertyChangeListener("ToolTipText", propertyChangeListener29);
        java.awt.Component[] componentArray31 = managementDashboard12.getComponents();
        javax.swing.JToolTip jToolTip32 = managementDashboard12.createToolTip();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(componentArray31);
        org.junit.Assert.assertNotNull(jToolTip32);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        managementDashboard1.move((int) (byte) 1, (int) '#');
        boolean boolean7 = managementDashboard1.isFocusTraversable();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setRequestFocusEnabled(false);
        managementDashboard9.enable();
        managementDashboard9.list();
        java.awt.Point point14 = managementDashboard9.location();
        boolean boolean15 = managementDashboard1.contains(point14);
        java.lang.String str16 = managementDashboard1.getUIClassID();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(point14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PanelUI" + "'", str16, "PanelUI");
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        managementDashboard14.firePropertyChange("ToolTipText", (short) 1, (short) (byte) 100);
        boolean boolean33 = managementDashboard14.isFocusTraversalPolicyProvider();
        javax.swing.KeyStroke keyStroke34 = null;
        int int35 = managementDashboard14.getConditionForKeyStroke(keyStroke34);
        java.awt.Event event36 = null;
        java.util.function.Consumer<java.lang.String> strConsumer37 = null;
        ManagementDashboard managementDashboard38 = new ManagementDashboard(strConsumer37);
        managementDashboard38.setRequestFocusEnabled(false);
        java.awt.Event event41 = null;
        boolean boolean43 = managementDashboard38.keyUp(event41, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer44 = null;
        ManagementDashboard managementDashboard45 = new ManagementDashboard(strConsumer44);
        managementDashboard45.setRequestFocusEnabled(false);
        java.awt.Event event48 = null;
        boolean boolean50 = managementDashboard45.keyUp(event48, (int) (short) 1);
        managementDashboard45.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener54 = null;
        managementDashboard45.removePropertyChangeListener("", propertyChangeListener54);
        java.awt.Dimension dimension56 = managementDashboard45.getPreferredSize();
        managementDashboard38.setSize(dimension56);
        managementDashboard38.setRequestFocusEnabled(true);
        managementDashboard38.addNotify();
        int int61 = managementDashboard38.getX();
        boolean boolean62 = managementDashboard14.action(event36, (java.lang.Object) int61);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(dimension56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseDrag(event6, (int) (short) 10, 4);
        java.awt.event.MouseMotionListener mouseMotionListener10 = null;
        managementDashboard1.removeMouseMotionListener(mouseMotionListener10);
        java.util.function.Consumer<java.lang.String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        boolean boolean14 = managementDashboard13.isCursorSet();
        java.awt.Event event15 = null;
        boolean boolean17 = managementDashboard13.lostFocus(event15, (java.lang.Object) "");
        managementDashboard13.setAutoscrolls(false);
        java.awt.Graphics graphics20 = null;
        managementDashboard13.update(graphics20);
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        managementDashboard23.setInheritsPopupMenu(true);
        boolean boolean26 = managementDashboard23.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget27 = null;
        managementDashboard23.setDropTarget(dropTarget27);
        boolean boolean29 = managementDashboard23.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer30 = null;
        ManagementDashboard managementDashboard31 = new ManagementDashboard(strConsumer30);
        managementDashboard31.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy34 = null;
        managementDashboard31.setFocusTraversalPolicy(focusTraversalPolicy34);
        java.lang.Object obj36 = managementDashboard23.getClientProperty((java.lang.Object) managementDashboard31);
        java.util.function.Consumer<java.lang.String> strConsumer37 = null;
        ManagementDashboard managementDashboard38 = new ManagementDashboard(strConsumer37);
        managementDashboard38.setRequestFocusEnabled(false);
        java.awt.Event event41 = null;
        boolean boolean43 = managementDashboard38.keyUp(event41, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener44 = null;
        managementDashboard38.addInputMethodListener(inputMethodListener44);
        java.awt.Dimension dimension46 = managementDashboard38.getMaximumSize();
        int int47 = managementDashboard23.getComponentZOrder((java.awt.Component) managementDashboard38);
        javax.swing.KeyStroke keyStroke48 = null;
        int int49 = managementDashboard23.getConditionForKeyStroke(keyStroke48);
        managementDashboard23.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer51 = null;
        java.awt.Image image52 = managementDashboard23.createImage(imageProducer51);
        boolean boolean58 = managementDashboard13.imageUpdate(image52, (int) (byte) 10, (int) (short) 10, 4, (int) (short) 0, 2);
        java.util.function.Consumer<java.lang.String> strConsumer61 = null;
        ManagementDashboard managementDashboard62 = new ManagementDashboard(strConsumer61);
        managementDashboard62.setInheritsPopupMenu(true);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean65 = managementDashboard1.prepareImage(image52, (int) (short) 1, (int) 'a', (java.awt.image.ImageObserver) managementDashboard62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.image.ImageProducer.startProduction(java.awt.image.ImageConsumer)\" because the return value of \"sun.awt.image.ToolkitImage.getSource()\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(dimension46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(image52);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        java.awt.image.VolatileImage volatileImage11 = managementDashboard1.createVolatileImage((int) (short) 0, 1);
        managementDashboard1.doLayout();
        java.lang.Object obj13 = managementDashboard1.getTreeLock();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(volatileImage11);
        org.junit.Assert.assertNotNull(obj13);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setRequestFocusEnabled(false);
        java.awt.Event event14 = null;
        boolean boolean16 = managementDashboard11.keyUp(event14, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        managementDashboard18.setRequestFocusEnabled(false);
        java.awt.Event event21 = null;
        boolean boolean23 = managementDashboard18.keyUp(event21, (int) (short) 1);
        managementDashboard18.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener27 = null;
        managementDashboard18.removePropertyChangeListener("", propertyChangeListener27);
        java.awt.Dimension dimension29 = managementDashboard18.getPreferredSize();
        managementDashboard11.setSize(dimension29);
        managementDashboard1.setMinimumSize(dimension29);
        java.awt.Event event32 = null;
        java.util.function.Consumer<java.lang.String> strConsumer33 = null;
        ManagementDashboard managementDashboard34 = new ManagementDashboard(strConsumer33);
        managementDashboard34.setRequestFocusEnabled(false);
        java.awt.Event event37 = null;
        boolean boolean39 = managementDashboard34.keyUp(event37, (int) (short) 1);
        managementDashboard34.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray42 = managementDashboard34.getHierarchyListeners();
        java.awt.event.KeyListener keyListener43 = null;
        managementDashboard34.addKeyListener(keyListener43);
        boolean boolean45 = managementDashboard1.action(event32, (java.lang.Object) managementDashboard34);
        managementDashboard34.show(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(dimension29);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray42);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray42, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener5 = null;
        managementDashboard1.removeContainerListener(containerListener5);
        java.awt.FocusTraversalPolicy focusTraversalPolicy7 = managementDashboard1.getFocusTraversalPolicy();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        boolean boolean12 = managementDashboard9.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget13 = null;
        managementDashboard9.setDropTarget(dropTarget13);
        java.awt.Dimension dimension15 = null;
        managementDashboard9.setPreferredSize(dimension15);
        java.awt.Event event17 = null;
        boolean boolean20 = managementDashboard9.mouseExit(event17, (int) 'a', (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer21 = null;
        ManagementDashboard managementDashboard22 = new ManagementDashboard(strConsumer21);
        boolean boolean23 = managementDashboard22.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests24 = managementDashboard22.getInputMethodRequests();
        java.awt.Container container25 = managementDashboard22.getTopLevelAncestor();
        java.awt.Color color26 = null;
        managementDashboard22.setForeground(color26);
        javax.swing.KeyStroke keyStroke28 = null;
        java.awt.event.ActionListener actionListener29 = managementDashboard22.getActionForKeyStroke(keyStroke28);
        javax.swing.JToolTip jToolTip30 = managementDashboard22.createToolTip();
        java.awt.Event event31 = null;
        java.util.function.Consumer<java.lang.String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        managementDashboard33.setInheritsPopupMenu(true);
        boolean boolean36 = managementDashboard33.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget37 = null;
        managementDashboard33.setDropTarget(dropTarget37);
        java.awt.Dimension dimension39 = null;
        managementDashboard33.setPreferredSize(dimension39);
        javax.swing.event.AncestorListener ancestorListener41 = null;
        managementDashboard33.removeAncestorListener(ancestorListener41);
        java.awt.Dimension dimension43 = managementDashboard33.getPreferredSize();
        java.awt.Dimension dimension44 = managementDashboard33.getPreferredSize();
        managementDashboard33.setDebugGraphicsOptions(10);
        boolean boolean47 = jToolTip30.lostFocus(event31, (java.lang.Object) managementDashboard33);
        java.awt.Rectangle rectangle48 = jToolTip30.bounds();
        managementDashboard9.computeVisibleRect(rectangle48);
        java.awt.Rectangle rectangle50 = managementDashboard1.getBounds(rectangle48);
        boolean boolean51 = managementDashboard1.isMinimumSizeSet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(focusTraversalPolicy7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(inputMethodRequests24);
        org.junit.Assert.assertNull(container25);
        org.junit.Assert.assertNull(actionListener29);
        org.junit.Assert.assertNotNull(jToolTip30);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(dimension43);
        org.junit.Assert.assertNotNull(dimension44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(rectangle48);
        org.junit.Assert.assertNotNull(rectangle50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        java.lang.Object obj14 = managementDashboard1.getClientProperty((java.lang.Object) managementDashboard9);
        java.util.function.Consumer<java.lang.String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        managementDashboard16.setRequestFocusEnabled(false);
        java.awt.Event event19 = null;
        boolean boolean21 = managementDashboard16.keyUp(event19, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener22 = null;
        managementDashboard16.addInputMethodListener(inputMethodListener22);
        java.awt.Dimension dimension24 = managementDashboard16.getMaximumSize();
        int int25 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard16);
        managementDashboard1.transferFocusBackward();
        java.awt.event.ComponentListener componentListener27 = null;
        managementDashboard1.addComponentListener(componentListener27);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        PaymentStrategy paymentStrategy0 = null;
        PaymentProcessor paymentProcessor1 = new PaymentProcessor(paymentStrategy0);
        CreditCardPayment creditCardPayment2 = new CreditCardPayment();
        paymentProcessor1.setPaymentStrategy((PaymentStrategy) creditCardPayment2);
        PaymentProcessor paymentProcessor4 = new PaymentProcessor((PaymentStrategy) creditCardPayment2);
        creditCardPayment2.pay((double) 0L);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        javax.swing.event.AncestorListener ancestorListener9 = null;
        managementDashboard1.removeAncestorListener(ancestorListener9);
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy15 = null;
        managementDashboard12.setFocusTraversalPolicy(focusTraversalPolicy15);
        java.awt.Event event17 = null;
        boolean boolean20 = managementDashboard12.mouseDrag(event17, (int) (short) 10, 4);
        managementDashboard12.setEnabled(true);
        java.awt.Component component23 = managementDashboard1.add((java.awt.Component) managementDashboard12);
        boolean boolean24 = component23.isCursorSet();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(component23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.LayoutManager layoutManager5 = null;
        managementDashboard1.setLayout(layoutManager5);
        boolean boolean7 = managementDashboard1.getFocusTraversalKeysEnabled();
        java.awt.Event event8 = null;
        boolean boolean11 = managementDashboard1.mouseEnter(event8, (int) (byte) 0, 0);
        java.awt.event.MouseEvent mouseEvent12 = null;
        java.awt.Point point13 = managementDashboard1.getPopupLocation(mouseEvent12);
        java.util.function.Consumer<java.lang.String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        managementDashboard15.setInheritsPopupMenu(true);
        boolean boolean18 = managementDashboard15.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget19 = null;
        managementDashboard15.setDropTarget(dropTarget19);
        boolean boolean21 = managementDashboard15.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        managementDashboard23.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy26 = null;
        managementDashboard23.setFocusTraversalPolicy(focusTraversalPolicy26);
        java.lang.Object obj28 = managementDashboard15.getClientProperty((java.lang.Object) managementDashboard23);
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        managementDashboard30.setRequestFocusEnabled(false);
        java.awt.Event event33 = null;
        boolean boolean35 = managementDashboard30.keyUp(event33, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener36 = null;
        managementDashboard30.addInputMethodListener(inputMethodListener36);
        java.awt.Dimension dimension38 = managementDashboard30.getMaximumSize();
        int int39 = managementDashboard15.getComponentZOrder((java.awt.Component) managementDashboard30);
        java.awt.Component component40 = managementDashboard15.getNextFocusableComponent();
        java.awt.Insets insets41 = managementDashboard15.insets();
        java.awt.Insets insets42 = managementDashboard1.getInsets(insets41);
        managementDashboard1.setFocusTraversalPolicyProvider(true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(point13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(dimension38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(component40);
        org.junit.Assert.assertNotNull(insets41);
        org.junit.Assert.assertNotNull(insets42);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.Event event3 = null;
        boolean boolean5 = managementDashboard1.lostFocus(event3, (java.lang.Object) "");
        managementDashboard1.setAutoscrolls(false);
        java.awt.Graphics graphics8 = null;
        managementDashboard1.update(graphics8);
        managementDashboard1.setFocusCycleRoot(false);
        managementDashboard1.repaint((long) (byte) 0);
        boolean boolean14 = managementDashboard1.isValidateRoot();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        java.util.function.Consumer<java.lang.String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        boolean boolean11 = managementDashboard10.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests12 = managementDashboard10.getInputMethodRequests();
        java.awt.Container container13 = managementDashboard10.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener14 = null;
        managementDashboard10.removeContainerListener(containerListener14);
        int int16 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard10);
        float float17 = managementDashboard10.getAlignmentY();
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        boolean boolean20 = managementDashboard19.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests21 = managementDashboard19.getInputMethodRequests();
        java.awt.Container container22 = managementDashboard19.getTopLevelAncestor();
        java.awt.Color color23 = null;
        managementDashboard19.setForeground(color23);
        managementDashboard19.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean30 = managementDashboard19.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        managementDashboard32.setRequestFocusEnabled(false);
        java.awt.Event event35 = null;
        boolean boolean37 = managementDashboard32.keyUp(event35, (int) (short) 1);
        managementDashboard32.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener41 = null;
        managementDashboard32.removePropertyChangeListener("", propertyChangeListener41);
        managementDashboard32.doLayout();
        javax.swing.JPopupMenu jPopupMenu44 = managementDashboard32.getComponentPopupMenu();
        java.awt.Component component46 = managementDashboard19.add((java.awt.Component) managementDashboard32, 1);
        java.util.function.Consumer<java.lang.String> strConsumer47 = null;
        ManagementDashboard managementDashboard48 = new ManagementDashboard(strConsumer47);
        managementDashboard48.setRequestFocusEnabled(false);
        java.awt.Event event51 = null;
        boolean boolean53 = managementDashboard48.keyUp(event51, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener54 = null;
        managementDashboard48.addInputMethodListener(inputMethodListener54);
        java.awt.Dimension dimension56 = managementDashboard48.getMaximumSize();
        managementDashboard32.setPreferredSize(dimension56);
        managementDashboard32.firePropertyChange("data/managerData.csv", ' ', ' ');
        java.awt.ComponentOrientation componentOrientation62 = managementDashboard32.getComponentOrientation();
        managementDashboard10.setComponentOrientation(componentOrientation62);
        java.util.function.Consumer<java.lang.String> strConsumer64 = null;
        ManagementDashboard managementDashboard65 = new ManagementDashboard(strConsumer64);
        boolean boolean66 = managementDashboard65.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests67 = managementDashboard65.getInputMethodRequests();
        java.awt.Container container68 = managementDashboard65.getTopLevelAncestor();
        java.awt.Color color69 = null;
        managementDashboard65.setForeground(color69);
        javax.swing.KeyStroke keyStroke71 = null;
        java.awt.event.ActionListener actionListener72 = managementDashboard65.getActionForKeyStroke(keyStroke71);
        javax.swing.JToolTip jToolTip73 = managementDashboard65.createToolTip();
        java.awt.Event event74 = null;
        java.util.function.Consumer<java.lang.String> strConsumer75 = null;
        ManagementDashboard managementDashboard76 = new ManagementDashboard(strConsumer75);
        managementDashboard76.setInheritsPopupMenu(true);
        boolean boolean79 = managementDashboard76.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget80 = null;
        managementDashboard76.setDropTarget(dropTarget80);
        java.awt.Dimension dimension82 = null;
        managementDashboard76.setPreferredSize(dimension82);
        javax.swing.event.AncestorListener ancestorListener84 = null;
        managementDashboard76.removeAncestorListener(ancestorListener84);
        java.awt.Dimension dimension86 = managementDashboard76.getPreferredSize();
        java.awt.Dimension dimension87 = managementDashboard76.getPreferredSize();
        managementDashboard76.setDebugGraphicsOptions(10);
        boolean boolean90 = jToolTip73.lostFocus(event74, (java.lang.Object) managementDashboard76);
        jToolTip73.layout();
        java.awt.Image image94 = jToolTip73.createImage((-1), (int) '4');
        boolean boolean95 = managementDashboard10.isAncestorOf((java.awt.Component) jToolTip73);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(inputMethodRequests12);
        org.junit.Assert.assertNull(container13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 0.5f + "'", float17 == 0.5f);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(inputMethodRequests21);
        org.junit.Assert.assertNull(container22);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(jPopupMenu44);
        org.junit.Assert.assertNotNull(component46);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(dimension56);
        org.junit.Assert.assertNotNull(componentOrientation62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(inputMethodRequests67);
        org.junit.Assert.assertNull(container68);
        org.junit.Assert.assertNull(actionListener72);
        org.junit.Assert.assertNotNull(jToolTip73);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(dimension86);
        org.junit.Assert.assertNotNull(dimension87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(image94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        managementDashboard1.enable();
        managementDashboard1.list();
        java.awt.Point point6 = managementDashboard1.location();
        java.awt.Event event7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = managementDashboard1.handleEvent(event7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(point6);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        boolean boolean27 = managementDashboard12.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener29 = null;
        managementDashboard12.addPropertyChangeListener("ToolTipText", propertyChangeListener29);
        java.awt.Component[] componentArray31 = managementDashboard12.getComponents();
        java.awt.Font font32 = null;
        managementDashboard12.setFont(font32);
        javax.swing.plaf.PanelUI panelUI34 = managementDashboard12.getUI();
        boolean boolean35 = managementDashboard12.isRequestFocusEnabled();
        java.util.function.Consumer<java.lang.String> strConsumer37 = null;
        ManagementDashboard managementDashboard38 = new ManagementDashboard(strConsumer37);
        managementDashboard38.setRequestFocusEnabled(false);
        java.awt.Event event41 = null;
        boolean boolean43 = managementDashboard38.keyUp(event41, (int) (short) 1);
        managementDashboard38.setAutoscrolls(true);
        boolean boolean46 = managementDashboard38.isRequestFocusEnabled();
        javax.swing.InputMap inputMap48 = managementDashboard38.getInputMap((int) (short) 1);
        managementDashboard12.setInputMap(1, inputMap48);
        java.awt.event.ActionListener actionListener50 = null;
        javax.swing.KeyStroke keyStroke52 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard12.registerKeyboardAction(actionListener50, "data/managerData.csv", keyStroke52, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(componentArray31);
        org.junit.Assert.assertNotNull(panelUI34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(inputMap48);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.beans.PropertyChangeListener propertyChangeListener14 = null;
        managementDashboard1.removePropertyChangeListener("ToolTipText", propertyChangeListener14);
        java.awt.event.ContainerListener[] containerListenerArray16 = managementDashboard1.getContainerListeners();
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener17 = null;
        managementDashboard1.removeHierarchyBoundsListener(hierarchyBoundsListener17);
        java.util.function.Consumer<java.lang.String> strConsumer19 = null;
        ManagementDashboard managementDashboard20 = new ManagementDashboard(strConsumer19);
        boolean boolean21 = managementDashboard20.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests22 = managementDashboard20.getInputMethodRequests();
        java.awt.Container container23 = managementDashboard20.getTopLevelAncestor();
        java.awt.Color color24 = null;
        managementDashboard20.setForeground(color24);
        javax.swing.KeyStroke keyStroke26 = null;
        java.awt.event.ActionListener actionListener27 = managementDashboard20.getActionForKeyStroke(keyStroke26);
        javax.swing.JToolTip jToolTip28 = managementDashboard20.createToolTip();
        java.awt.Event event29 = null;
        java.util.function.Consumer<java.lang.String> strConsumer30 = null;
        ManagementDashboard managementDashboard31 = new ManagementDashboard(strConsumer30);
        managementDashboard31.setInheritsPopupMenu(true);
        boolean boolean34 = managementDashboard31.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget35 = null;
        managementDashboard31.setDropTarget(dropTarget35);
        java.awt.Dimension dimension37 = null;
        managementDashboard31.setPreferredSize(dimension37);
        javax.swing.event.AncestorListener ancestorListener39 = null;
        managementDashboard31.removeAncestorListener(ancestorListener39);
        java.awt.Dimension dimension41 = managementDashboard31.getPreferredSize();
        java.awt.Dimension dimension42 = managementDashboard31.getPreferredSize();
        managementDashboard31.setDebugGraphicsOptions(10);
        boolean boolean45 = jToolTip28.lostFocus(event29, (java.lang.Object) managementDashboard31);
        boolean boolean46 = managementDashboard31.isOpaque();
        java.util.function.Consumer<java.lang.String> strConsumer47 = null;
        ManagementDashboard managementDashboard48 = new ManagementDashboard(strConsumer47);
        managementDashboard48.setInheritsPopupMenu(true);
        managementDashboard48.setName("");
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.add((java.awt.Component) managementDashboard31, (java.lang.Object) "", (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: illegal component position");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(containerListenerArray16);
        org.junit.Assert.assertArrayEquals(containerListenerArray16, new java.awt.event.ContainerListener[] {});
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(inputMethodRequests22);
        org.junit.Assert.assertNull(container23);
        org.junit.Assert.assertNull(actionListener27);
        org.junit.Assert.assertNotNull(jToolTip28);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(dimension41);
        org.junit.Assert.assertNotNull(dimension42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        javax.swing.event.AncestorListener ancestorListener9 = null;
        managementDashboard1.removeAncestorListener(ancestorListener9);
        java.awt.Dimension dimension11 = managementDashboard1.getPreferredSize();
        java.awt.Dimension dimension12 = managementDashboard1.getPreferredSize();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests16 = managementDashboard14.getInputMethodRequests();
        java.awt.Container container17 = managementDashboard14.getTopLevelAncestor();
        java.awt.Color color18 = null;
        managementDashboard14.setForeground(color18);
        managementDashboard14.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean25 = managementDashboard14.requestFocusInWindow();
        java.beans.PropertyChangeListener propertyChangeListener27 = null;
        managementDashboard14.removePropertyChangeListener("ToolTipText", propertyChangeListener27);
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.add((java.awt.Component) managementDashboard14, (java.lang.Object) 2, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: illegal component position");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(dimension11);
        org.junit.Assert.assertNotNull(dimension12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(inputMethodRequests16);
        org.junit.Assert.assertNull(container17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        java.lang.Object obj14 = managementDashboard1.getClientProperty((java.lang.Object) managementDashboard9);
        java.util.function.Consumer<java.lang.String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        managementDashboard16.setRequestFocusEnabled(false);
        java.awt.Event event19 = null;
        boolean boolean21 = managementDashboard16.keyUp(event19, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener22 = null;
        managementDashboard16.addInputMethodListener(inputMethodListener22);
        java.awt.Dimension dimension24 = managementDashboard16.getMaximumSize();
        int int25 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard16);
        java.awt.Component component26 = managementDashboard1.getNextFocusableComponent();
        java.awt.Insets insets27 = managementDashboard1.insets();
        java.util.function.Consumer<java.lang.String> strConsumer28 = null;
        ManagementDashboard managementDashboard29 = new ManagementDashboard(strConsumer28);
        managementDashboard29.setInheritsPopupMenu(true);
        java.awt.LayoutManager layoutManager32 = null;
        managementDashboard29.setLayout(layoutManager32);
        managementDashboard29.setFocusTraversalPolicyProvider(true);
        java.awt.Dimension dimension36 = managementDashboard29.getMaximumSize();
        java.awt.Dimension dimension37 = managementDashboard1.getSize(dimension36);
        java.awt.event.FocusEvent.Cause cause38 = null;
        boolean boolean39 = managementDashboard1.requestFocusInWindow(cause38);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(component26);
        org.junit.Assert.assertNotNull(insets27);
        org.junit.Assert.assertNotNull(dimension36);
        org.junit.Assert.assertNotNull(dimension37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        boolean boolean7 = managementDashboard1.isCursorSet();
        java.awt.event.KeyListener keyListener8 = null;
        managementDashboard1.removeKeyListener(keyListener8);
        managementDashboard1.resetKeyboardActions();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.Event event3 = null;
        boolean boolean5 = managementDashboard1.lostFocus(event3, (java.lang.Object) "");
        managementDashboard1.setAutoscrolls(false);
        java.awt.Graphics graphics8 = null;
        managementDashboard1.update(graphics8);
        java.beans.PropertyChangeListener[] propertyChangeListenerArray10 = managementDashboard1.getPropertyChangeListeners();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(propertyChangeListenerArray10);
        org.junit.Assert.assertArrayEquals(propertyChangeListenerArray10, new java.beans.PropertyChangeListener[] {});
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseDrag(event6, (int) (short) 10, 4);
        javax.swing.KeyStroke[] keyStrokeArray10 = managementDashboard1.getRegisteredKeyStrokes();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(keyStrokeArray10);
        org.junit.Assert.assertArrayEquals(keyStrokeArray10, new javax.swing.KeyStroke[] {});
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        java.lang.Object obj14 = managementDashboard1.getClientProperty((java.lang.Object) managementDashboard9);
        java.util.function.Consumer<java.lang.String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        managementDashboard16.setRequestFocusEnabled(false);
        java.awt.Event event19 = null;
        boolean boolean21 = managementDashboard16.keyUp(event19, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener22 = null;
        managementDashboard16.addInputMethodListener(inputMethodListener22);
        java.awt.Dimension dimension24 = managementDashboard16.getMaximumSize();
        int int25 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard16);
        managementDashboard16.setAlignmentX(0.0f);
        java.awt.Event event28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = managementDashboard16.postEvent(event28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        managementDashboard1.setFocusable(false);
        java.util.function.Consumer<java.lang.String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        boolean boolean11 = managementDashboard10.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests12 = managementDashboard10.getInputMethodRequests();
        managementDashboard10.move((int) (byte) 1, (int) '#');
        boolean boolean16 = managementDashboard10.isFocusTraversable();
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        managementDashboard18.setRequestFocusEnabled(false);
        managementDashboard18.enable();
        managementDashboard18.list();
        java.awt.Point point23 = managementDashboard18.location();
        boolean boolean24 = managementDashboard10.contains(point23);
        boolean boolean25 = managementDashboard1.contains(point23);
        javax.swing.KeyStroke keyStroke26 = null;
        managementDashboard1.unregisterKeyboardAction(keyStroke26);
        java.util.function.Consumer<java.lang.String> strConsumer28 = null;
        ManagementDashboard managementDashboard29 = new ManagementDashboard(strConsumer28);
        managementDashboard29.setInheritsPopupMenu(true);
        boolean boolean32 = managementDashboard29.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget33 = null;
        managementDashboard29.setDropTarget(dropTarget33);
        java.awt.Dimension dimension35 = null;
        managementDashboard29.setPreferredSize(dimension35);
        javax.swing.event.AncestorListener ancestorListener37 = null;
        managementDashboard29.removeAncestorListener(ancestorListener37);
        java.awt.Dimension dimension39 = managementDashboard29.getPreferredSize();
        java.util.function.Consumer<java.lang.String> strConsumer40 = null;
        ManagementDashboard managementDashboard41 = new ManagementDashboard(strConsumer40);
        managementDashboard41.setInheritsPopupMenu(true);
        boolean boolean44 = managementDashboard41.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget45 = null;
        managementDashboard41.setDropTarget(dropTarget45);
        java.awt.Dimension dimension47 = null;
        managementDashboard41.setPreferredSize(dimension47);
        java.awt.Event event49 = null;
        boolean boolean52 = managementDashboard41.mouseExit(event49, (int) 'a', (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer53 = null;
        ManagementDashboard managementDashboard54 = new ManagementDashboard(strConsumer53);
        boolean boolean55 = managementDashboard54.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests56 = managementDashboard54.getInputMethodRequests();
        java.awt.Container container57 = managementDashboard54.getTopLevelAncestor();
        java.awt.Color color58 = null;
        managementDashboard54.setForeground(color58);
        javax.swing.KeyStroke keyStroke60 = null;
        java.awt.event.ActionListener actionListener61 = managementDashboard54.getActionForKeyStroke(keyStroke60);
        javax.swing.JToolTip jToolTip62 = managementDashboard54.createToolTip();
        java.awt.Event event63 = null;
        java.util.function.Consumer<java.lang.String> strConsumer64 = null;
        ManagementDashboard managementDashboard65 = new ManagementDashboard(strConsumer64);
        managementDashboard65.setInheritsPopupMenu(true);
        boolean boolean68 = managementDashboard65.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget69 = null;
        managementDashboard65.setDropTarget(dropTarget69);
        java.awt.Dimension dimension71 = null;
        managementDashboard65.setPreferredSize(dimension71);
        javax.swing.event.AncestorListener ancestorListener73 = null;
        managementDashboard65.removeAncestorListener(ancestorListener73);
        java.awt.Dimension dimension75 = managementDashboard65.getPreferredSize();
        java.awt.Dimension dimension76 = managementDashboard65.getPreferredSize();
        managementDashboard65.setDebugGraphicsOptions(10);
        boolean boolean79 = jToolTip62.lostFocus(event63, (java.lang.Object) managementDashboard65);
        java.awt.Rectangle rectangle80 = jToolTip62.bounds();
        managementDashboard41.computeVisibleRect(rectangle80);
        managementDashboard29.computeVisibleRect(rectangle80);
        managementDashboard1.setBounds(rectangle80);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(inputMethodRequests12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(point23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(dimension39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(inputMethodRequests56);
        org.junit.Assert.assertNull(container57);
        org.junit.Assert.assertNull(actionListener61);
        org.junit.Assert.assertNotNull(jToolTip62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(dimension75);
        org.junit.Assert.assertNotNull(dimension76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(rectangle80);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        boolean boolean27 = jToolTip9.isRequestFocusEnabled();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.lang.String str7 = managementDashboard1.toString();
        managementDashboard1.show();
        java.awt.event.MouseListener mouseListener9 = null;
        managementDashboard1.removeMouseListener(mouseListener9);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]" + "'", str7, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]");
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        boolean boolean12 = managementDashboard11.isCursorSet();
        java.awt.Event event13 = null;
        boolean boolean15 = managementDashboard11.lostFocus(event13, (java.lang.Object) "");
        java.util.function.Consumer<java.lang.String> strConsumer16 = null;
        ManagementDashboard managementDashboard17 = new ManagementDashboard(strConsumer16);
        managementDashboard17.setRequestFocusEnabled(false);
        java.awt.Event event20 = null;
        boolean boolean22 = managementDashboard17.keyUp(event20, (int) (short) 1);
        managementDashboard17.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray25 = managementDashboard17.getHierarchyListeners();
        jToolTip9.add((java.awt.Component) managementDashboard11, (java.lang.Object) hierarchyListenerArray25);
        boolean boolean27 = jToolTip9.requestDefaultFocus();
        java.awt.Image image30 = jToolTip9.createImage((int) (short) 10, 2);
        jToolTip9.firePropertyChange("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]", (long) 32, (long) 2);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = jToolTip9.areFocusTraversalKeysSet((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid focus traversal key identifier");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray25);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray25, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(image30);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        managementDashboard1.firePropertyChange("data/lotData.csv", ' ', '4');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.event.MouseMotionListener mouseMotionListener2 = null;
        managementDashboard1.addMouseMotionListener(mouseMotionListener2);
        java.awt.Component component5 = managementDashboard1.getComponent(0);
        component5.firePropertyChange("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]", (float) 4, (float) ' ');
        java.awt.dnd.DropTarget dropTarget10 = component5.getDropTarget();
        org.junit.Assert.assertNotNull(component5);
        org.junit.Assert.assertNull(dropTarget10);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        managementDashboard1.addNotify();
        managementDashboard1.setIgnoreRepaint(true);
        boolean boolean12 = managementDashboard1.isOpaque();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        java.lang.Object obj14 = managementDashboard1.getClientProperty((java.lang.Object) managementDashboard9);
        java.util.function.Consumer<java.lang.String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        managementDashboard16.setRequestFocusEnabled(false);
        java.awt.Event event19 = null;
        boolean boolean21 = managementDashboard16.keyUp(event19, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener22 = null;
        managementDashboard16.addInputMethodListener(inputMethodListener22);
        java.awt.Dimension dimension24 = managementDashboard16.getMaximumSize();
        int int25 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard16);
        java.awt.Component component27 = managementDashboard1.getComponent(1);
        java.awt.event.KeyListener keyListener28 = null;
        managementDashboard1.removeKeyListener(keyListener28);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(component27);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        managementDashboard1.move((int) (byte) 0, 8);
        java.awt.Event event12 = null;
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests16 = managementDashboard14.getInputMethodRequests();
        java.awt.Container container17 = managementDashboard14.getTopLevelAncestor();
        boolean boolean18 = managementDashboard1.gotFocus(event12, (java.lang.Object) container17);
        managementDashboard1.hide();
        java.awt.event.InputMethodListener[] inputMethodListenerArray20 = managementDashboard1.getInputMethodListeners();
        java.awt.Event event21 = null;
        boolean boolean24 = managementDashboard1.mouseUp(event21, 100, (int) (byte) 100);
        java.awt.event.HierarchyListener[] hierarchyListenerArray25 = managementDashboard1.getHierarchyListeners();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(inputMethodRequests16);
        org.junit.Assert.assertNull(container17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(inputMethodListenerArray20);
        org.junit.Assert.assertArrayEquals(inputMethodListenerArray20, new java.awt.event.InputMethodListener[] {});
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray25);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray25, new java.awt.event.HierarchyListener[] {});
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener5 = null;
        managementDashboard1.removeContainerListener(containerListener5);
        java.awt.FocusTraversalPolicy focusTraversalPolicy7 = managementDashboard1.getFocusTraversalPolicy();
        java.awt.Event event8 = null;
        boolean boolean11 = managementDashboard1.mouseDrag(event8, (int) '4', 128);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Point point12 = managementDashboard1.getLocationOnScreen();
            org.junit.Assert.fail("Expected exception of type java.awt.IllegalComponentStateException; message: component must be showing on the screen to determine its location");
        } catch (java.awt.IllegalComponentStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(focusTraversalPolicy7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        int int0 = java.awt.image.ImageObserver.HEIGHT;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 2 + "'", int0 == 2);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.LayoutManager layoutManager4 = null;
        managementDashboard1.setLayout(layoutManager4);
        managementDashboard1.setFocusTraversalPolicyProvider(true);
        managementDashboard1.reshape(128, (int) (short) -1, (int) '4', (int) (byte) 100);
        javax.swing.border.Border border13 = managementDashboard1.getBorder();
        java.util.function.Consumer<java.lang.String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        managementDashboard15.setRequestFocusEnabled(false);
        java.awt.Event event18 = null;
        boolean boolean20 = managementDashboard15.keyUp(event18, (int) (short) 1);
        boolean boolean21 = managementDashboard15.isCursorSet();
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard15.addPropertyChangeListener("data/userData.csv", propertyChangeListener23);
        java.awt.Dimension dimension25 = managementDashboard15.getMinimumSize();
        managementDashboard1.resize(dimension25);
        org.junit.Assert.assertNull(border13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(dimension25);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        CreditCardPayment creditCardPayment0 = new CreditCardPayment();
        creditCardPayment0.pay((double) ' ');
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseDrag(event6, (int) (short) 10, 4);
        javax.swing.JPopupMenu jPopupMenu10 = managementDashboard1.getComponentPopupMenu();
        java.awt.Graphics graphics11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jPopupMenu10.printComponents(graphics11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(jPopupMenu10);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.Event event3 = null;
        boolean boolean5 = managementDashboard1.lostFocus(event3, (java.lang.Object) "");
        managementDashboard1.setAutoscrolls(false);
        managementDashboard1.transferFocus();
        managementDashboard1.setBounds((-1), 100, (int) (short) 100, (int) (short) -1);
        java.awt.LayoutManager layoutManager14 = managementDashboard1.getLayout();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(layoutManager14);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        java.awt.Dimension dimension9 = managementDashboard1.getMaximumSize();
        java.awt.event.MouseEvent mouseEvent10 = null;
        java.awt.Point point11 = managementDashboard1.getToolTipLocation(mouseEvent10);
        java.util.function.Consumer<java.lang.String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        managementDashboard13.setInheritsPopupMenu(true);
        boolean boolean16 = managementDashboard13.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget17 = null;
        managementDashboard13.setDropTarget(dropTarget17);
        managementDashboard13.setFocusable(false);
        java.util.function.Consumer<java.lang.String> strConsumer21 = null;
        ManagementDashboard managementDashboard22 = new ManagementDashboard(strConsumer21);
        boolean boolean23 = managementDashboard22.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests24 = managementDashboard22.getInputMethodRequests();
        managementDashboard22.move((int) (byte) 1, (int) '#');
        boolean boolean28 = managementDashboard22.isFocusTraversable();
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        managementDashboard30.setRequestFocusEnabled(false);
        managementDashboard30.enable();
        managementDashboard30.list();
        java.awt.Point point35 = managementDashboard30.location();
        boolean boolean36 = managementDashboard22.contains(point35);
        boolean boolean37 = managementDashboard13.contains(point35);
        java.awt.Component component39 = managementDashboard1.add((java.awt.Component) managementDashboard13, (int) (short) 0);
        java.awt.Rectangle rectangle40 = component39.bounds();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(dimension9);
        org.junit.Assert.assertNull(point11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(inputMethodRequests24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(point35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(component39);
        org.junit.Assert.assertNotNull(rectangle40);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        boolean boolean27 = managementDashboard12.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener29 = null;
        managementDashboard12.addPropertyChangeListener("ToolTipText", propertyChangeListener29);
        java.awt.Component[] componentArray31 = managementDashboard12.getComponents();
        java.awt.Font font32 = null;
        managementDashboard12.setFont(font32);
        javax.swing.plaf.PanelUI panelUI34 = managementDashboard12.getUI();
        java.awt.event.InputMethodListener[] inputMethodListenerArray35 = managementDashboard12.getInputMethodListeners();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.awt.AWTKeyStroke> aWTKeyStrokeSet37 = managementDashboard12.getFocusTraversalKeys((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid focus traversal key identifier");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(componentArray31);
        org.junit.Assert.assertNotNull(panelUI34);
        org.junit.Assert.assertNotNull(inputMethodListenerArray35);
        org.junit.Assert.assertArrayEquals(inputMethodListenerArray35, new java.awt.event.InputMethodListener[] {});
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        managementDashboard1.enable();
        managementDashboard1.list();
        java.awt.Point point6 = managementDashboard1.location();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = managementDashboard1.areFocusTraversalKeysSet((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid focus traversal key identifier");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(point6);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        jToolTip9.setFocusTraversalPolicyProvider(true);
        javax.swing.JPopupMenu jPopupMenu29 = jToolTip9.getComponentPopupMenu();
        java.awt.event.MouseListener mouseListener30 = null;
        // The following exception was thrown during execution in test generation
        try {
            jPopupMenu29.addMouseListener(mouseListener30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(jPopupMenu29);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Component component4 = managementDashboard1.getNextFocusableComponent();
        managementDashboard1.setAlignmentY((float) 32);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(component4);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setInheritsPopupMenu(true);
        managementDashboard11.setName("");
        managementDashboard11.doLayout();
        java.awt.event.KeyListener keyListener17 = null;
        managementDashboard11.addKeyListener(keyListener17);
        java.util.function.Consumer<java.lang.String> strConsumer19 = null;
        ManagementDashboard managementDashboard20 = new ManagementDashboard(strConsumer19);
        managementDashboard20.setInheritsPopupMenu(true);
        boolean boolean23 = managementDashboard20.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget24 = null;
        managementDashboard20.setDropTarget(dropTarget24);
        boolean boolean26 = managementDashboard20.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer27 = null;
        ManagementDashboard managementDashboard28 = new ManagementDashboard(strConsumer27);
        managementDashboard28.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy31 = null;
        managementDashboard28.setFocusTraversalPolicy(focusTraversalPolicy31);
        java.lang.Object obj33 = managementDashboard20.getClientProperty((java.lang.Object) managementDashboard28);
        java.util.function.Consumer<java.lang.String> strConsumer34 = null;
        ManagementDashboard managementDashboard35 = new ManagementDashboard(strConsumer34);
        managementDashboard35.setRequestFocusEnabled(false);
        java.awt.Event event38 = null;
        boolean boolean40 = managementDashboard35.keyUp(event38, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener41 = null;
        managementDashboard35.addInputMethodListener(inputMethodListener41);
        java.awt.Dimension dimension43 = managementDashboard35.getMaximumSize();
        int int44 = managementDashboard20.getComponentZOrder((java.awt.Component) managementDashboard35);
        javax.swing.KeyStroke keyStroke45 = null;
        int int46 = managementDashboard20.getConditionForKeyStroke(keyStroke45);
        managementDashboard20.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer48 = null;
        java.awt.Image image49 = managementDashboard20.createImage(imageProducer48);
        java.util.function.Consumer<java.lang.String> strConsumer50 = null;
        ManagementDashboard managementDashboard51 = new ManagementDashboard(strConsumer50);
        managementDashboard51.setRequestFocusEnabled(false);
        java.awt.Event event54 = null;
        boolean boolean56 = managementDashboard51.keyUp(event54, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener57 = null;
        managementDashboard51.addInputMethodListener(inputMethodListener57);
        java.awt.image.VolatileImage volatileImage61 = managementDashboard51.createVolatileImage((int) (short) 0, 1);
        boolean boolean62 = managementDashboard51.isOptimizedDrawingEnabled();
        javax.swing.ActionMap actionMap63 = managementDashboard51.getActionMap();
        int int64 = managementDashboard11.checkImage(image49, (java.awt.image.ImageObserver) managementDashboard51);
        java.util.function.Consumer<java.lang.String> strConsumer65 = null;
        ManagementDashboard managementDashboard66 = new ManagementDashboard(strConsumer65);
        managementDashboard66.setRequestFocusEnabled(false);
        java.awt.Event event69 = null;
        boolean boolean71 = managementDashboard66.keyUp(event69, (int) (short) 1);
        managementDashboard66.list();
        javax.swing.plaf.PanelUI panelUI73 = managementDashboard66.getUI();
        javax.swing.border.Border border74 = null;
        managementDashboard66.setBorder(border74);
        int int76 = jToolTip9.checkImage(image49, (java.awt.image.ImageObserver) managementDashboard66);
        boolean boolean77 = jToolTip9.isPaintingForPrint();
        boolean boolean80 = jToolTip9.contains((int) (short) 0, (int) (short) 10);
        java.awt.dnd.DropTarget dropTarget81 = null;
        jToolTip9.setDropTarget(dropTarget81);
        jToolTip9.repaint((int) (byte) 1, 64, 10, (-1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(dimension43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(image49);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(volatileImage61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(actionMap63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(panelUI73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        managementDashboard5.requestFocus();
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setRequestFocusEnabled(false);
        java.awt.Event event15 = null;
        boolean boolean17 = managementDashboard12.keyUp(event15, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener18 = null;
        managementDashboard12.addInputMethodListener(inputMethodListener18);
        managementDashboard12.move((int) (byte) 0, 8);
        java.awt.Event event23 = null;
        java.util.function.Consumer<java.lang.String> strConsumer24 = null;
        ManagementDashboard managementDashboard25 = new ManagementDashboard(strConsumer24);
        boolean boolean26 = managementDashboard25.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests27 = managementDashboard25.getInputMethodRequests();
        java.awt.Container container28 = managementDashboard25.getTopLevelAncestor();
        boolean boolean29 = managementDashboard12.gotFocus(event23, (java.lang.Object) container28);
        managementDashboard12.hide();
        java.awt.Component component31 = managementDashboard5.add((java.awt.Component) managementDashboard12);
        managementDashboard5.firePropertyChange("data/userData.csv", (float) 1, (float) ' ');
        java.awt.event.MouseWheelListener[] mouseWheelListenerArray36 = managementDashboard5.getMouseWheelListeners();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(inputMethodRequests27);
        org.junit.Assert.assertNull(container28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(component31);
        org.junit.Assert.assertNotNull(mouseWheelListenerArray36);
        org.junit.Assert.assertArrayEquals(mouseWheelListenerArray36, new java.awt.event.MouseWheelListener[] {});
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        managementDashboard1.invalidate();
        managementDashboard1.setFocusable(true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        managementDashboard5.requestFocus();
        boolean boolean11 = managementDashboard5.isDisplayable();
        javax.swing.InputVerifier inputVerifier12 = null;
        managementDashboard5.setInputVerifier(inputVerifier12);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        java.awt.Dimension dimension9 = managementDashboard1.getMaximumSize();
        java.awt.event.MouseEvent mouseEvent10 = null;
        java.awt.Point point11 = managementDashboard1.getToolTipLocation(mouseEvent10);
        java.util.function.Consumer<java.lang.String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        managementDashboard13.setInheritsPopupMenu(true);
        boolean boolean16 = managementDashboard13.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget17 = null;
        managementDashboard13.setDropTarget(dropTarget17);
        managementDashboard13.setFocusable(false);
        java.util.function.Consumer<java.lang.String> strConsumer21 = null;
        ManagementDashboard managementDashboard22 = new ManagementDashboard(strConsumer21);
        boolean boolean23 = managementDashboard22.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests24 = managementDashboard22.getInputMethodRequests();
        managementDashboard22.move((int) (byte) 1, (int) '#');
        boolean boolean28 = managementDashboard22.isFocusTraversable();
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        managementDashboard30.setRequestFocusEnabled(false);
        managementDashboard30.enable();
        managementDashboard30.list();
        java.awt.Point point35 = managementDashboard30.location();
        boolean boolean36 = managementDashboard22.contains(point35);
        boolean boolean37 = managementDashboard13.contains(point35);
        java.awt.Component component39 = managementDashboard1.add((java.awt.Component) managementDashboard13, (int) (short) 0);
        java.awt.event.ContainerListener containerListener40 = null;
        managementDashboard1.removeContainerListener(containerListener40);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(dimension9);
        org.junit.Assert.assertNull(point11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(inputMethodRequests24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(point35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(component39);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.awt.Event event8 = null;
        boolean boolean10 = managementDashboard1.keyUp(event8, (int) (short) 10);
        java.awt.Event event11 = null;
        boolean boolean14 = managementDashboard1.mouseMove(event11, 2, 64);
        java.beans.VetoableChangeListener vetoableChangeListener15 = null;
        managementDashboard1.removeVetoableChangeListener(vetoableChangeListener15);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.LayoutManager layoutManager5 = null;
        managementDashboard1.setLayout(layoutManager5);
        boolean boolean7 = managementDashboard1.getFocusTraversalKeysEnabled();
        java.awt.Event event8 = null;
        boolean boolean11 = managementDashboard1.mouseEnter(event8, (int) (byte) 0, 0);
        managementDashboard1.setEnabled(false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        managementDashboard1.setRequestFocusEnabled(true);
        managementDashboard1.addNotify();
        int int24 = managementDashboard1.getX();
        boolean boolean25 = managementDashboard1.isLightweight();
        java.awt.event.MouseWheelListener mouseWheelListener26 = null;
        managementDashboard1.addMouseWheelListener(mouseWheelListener26);
        managementDashboard1.setAlignmentY(0.0f);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests16 = managementDashboard14.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        managementDashboard18.setInheritsPopupMenu(true);
        boolean boolean21 = managementDashboard18.isValidateRoot();
        int int22 = managementDashboard14.getComponentZOrder((java.awt.Component) managementDashboard18);
        java.beans.PropertyChangeListener propertyChangeListener24 = null;
        managementDashboard18.addPropertyChangeListener("hi!", propertyChangeListener24);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component26 = managementDashboard1.add("data/managerData.csv", (java.awt.Component) managementDashboard18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cannot add to layout: unknown constraint: data/managerData.csv");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(inputMethodRequests16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.awt.Dimension dimension10 = managementDashboard1.size();
        java.util.function.Consumer<java.lang.String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        managementDashboard13.setRequestFocusEnabled(false);
        java.awt.Event event16 = null;
        boolean boolean18 = managementDashboard13.keyUp(event16, (int) (short) 1);
        managementDashboard13.list();
        javax.swing.plaf.PanelUI panelUI20 = managementDashboard13.getUI();
        java.awt.event.ContainerListener[] containerListenerArray21 = managementDashboard13.getContainerListeners();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component22 = managementDashboard1.add("data/managerData.csv", (java.awt.Component) managementDashboard13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cannot add to layout: unknown constraint: data/managerData.csv");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(dimension10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(panelUI20);
        org.junit.Assert.assertNotNull(containerListenerArray21);
        org.junit.Assert.assertArrayEquals(containerListenerArray21, new java.awt.event.ContainerListener[] {});
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        boolean boolean7 = managementDashboard1.isCursorSet();
        java.beans.VetoableChangeListener vetoableChangeListener8 = null;
        managementDashboard1.removeVetoableChangeListener(vetoableChangeListener8);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.Event event3 = null;
        boolean boolean5 = managementDashboard1.lostFocus(event3, (java.lang.Object) "");
        managementDashboard1.setAutoscrolls(false);
        java.awt.Graphics graphics8 = null;
        managementDashboard1.update(graphics8);
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setInheritsPopupMenu(true);
        boolean boolean14 = managementDashboard11.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget15 = null;
        managementDashboard11.setDropTarget(dropTarget15);
        boolean boolean17 = managementDashboard11.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        managementDashboard19.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy22 = null;
        managementDashboard19.setFocusTraversalPolicy(focusTraversalPolicy22);
        java.lang.Object obj24 = managementDashboard11.getClientProperty((java.lang.Object) managementDashboard19);
        java.util.function.Consumer<java.lang.String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        managementDashboard26.setRequestFocusEnabled(false);
        java.awt.Event event29 = null;
        boolean boolean31 = managementDashboard26.keyUp(event29, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener32 = null;
        managementDashboard26.addInputMethodListener(inputMethodListener32);
        java.awt.Dimension dimension34 = managementDashboard26.getMaximumSize();
        int int35 = managementDashboard11.getComponentZOrder((java.awt.Component) managementDashboard26);
        javax.swing.KeyStroke keyStroke36 = null;
        int int37 = managementDashboard11.getConditionForKeyStroke(keyStroke36);
        managementDashboard11.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer39 = null;
        java.awt.Image image40 = managementDashboard11.createImage(imageProducer39);
        boolean boolean46 = managementDashboard1.imageUpdate(image40, (int) (byte) 10, (int) (short) 10, 4, (int) (short) 0, 2);
        managementDashboard1.enableInputMethods(false);
        managementDashboard1.setDebugGraphicsOptions(0);
        javax.swing.border.Border border51 = null;
        managementDashboard1.setBorder(border51);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(dimension34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(image40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        managementDashboard1.setName("");
        managementDashboard1.doLayout();
        java.awt.event.KeyListener keyListener7 = null;
        managementDashboard1.addKeyListener(keyListener7);
        java.util.function.Consumer<java.lang.String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        managementDashboard10.setInheritsPopupMenu(true);
        boolean boolean13 = managementDashboard10.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget14 = null;
        managementDashboard10.setDropTarget(dropTarget14);
        boolean boolean16 = managementDashboard10.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        managementDashboard18.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy21 = null;
        managementDashboard18.setFocusTraversalPolicy(focusTraversalPolicy21);
        java.lang.Object obj23 = managementDashboard10.getClientProperty((java.lang.Object) managementDashboard18);
        java.util.function.Consumer<java.lang.String> strConsumer24 = null;
        ManagementDashboard managementDashboard25 = new ManagementDashboard(strConsumer24);
        managementDashboard25.setRequestFocusEnabled(false);
        java.awt.Event event28 = null;
        boolean boolean30 = managementDashboard25.keyUp(event28, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener31 = null;
        managementDashboard25.addInputMethodListener(inputMethodListener31);
        java.awt.Dimension dimension33 = managementDashboard25.getMaximumSize();
        int int34 = managementDashboard10.getComponentZOrder((java.awt.Component) managementDashboard25);
        javax.swing.KeyStroke keyStroke35 = null;
        int int36 = managementDashboard10.getConditionForKeyStroke(keyStroke35);
        managementDashboard10.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer38 = null;
        java.awt.Image image39 = managementDashboard10.createImage(imageProducer38);
        java.util.function.Consumer<java.lang.String> strConsumer40 = null;
        ManagementDashboard managementDashboard41 = new ManagementDashboard(strConsumer40);
        managementDashboard41.setRequestFocusEnabled(false);
        java.awt.Event event44 = null;
        boolean boolean46 = managementDashboard41.keyUp(event44, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener47 = null;
        managementDashboard41.addInputMethodListener(inputMethodListener47);
        java.awt.image.VolatileImage volatileImage51 = managementDashboard41.createVolatileImage((int) (short) 0, 1);
        boolean boolean52 = managementDashboard41.isOptimizedDrawingEnabled();
        javax.swing.ActionMap actionMap53 = managementDashboard41.getActionMap();
        int int54 = managementDashboard1.checkImage(image39, (java.awt.image.ImageObserver) managementDashboard41);
        java.awt.Graphics graphics55 = null;
        managementDashboard1.print(graphics55);
        java.awt.Container container57 = managementDashboard1.getParent();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(dimension33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(image39);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(volatileImage51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(actionMap53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(container57);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        float float0 = java.awt.Component.BOTTOM_ALIGNMENT;
        org.junit.Assert.assertTrue("'" + float0 + "' != '" + 1.0f + "'", float0 == 1.0f);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener5 = null;
        managementDashboard1.removeContainerListener(containerListener5);
        javax.swing.JPopupMenu jPopupMenu7 = null;
        managementDashboard1.setComponentPopupMenu(jPopupMenu7);
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener9 = null;
        managementDashboard1.addHierarchyBoundsListener(hierarchyBoundsListener9);
        java.awt.Cursor cursor11 = managementDashboard1.getCursor();
        managementDashboard1.setVisible(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNotNull(cursor11);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        javax.swing.event.AncestorListener ancestorListener7 = null;
        managementDashboard1.addAncestorListener(ancestorListener7);
        java.awt.event.FocusListener focusListener9 = null;
        managementDashboard1.removeFocusListener(focusListener9);
        java.beans.PropertyChangeListener propertyChangeListener12 = null;
        managementDashboard1.addPropertyChangeListener("", propertyChangeListener12);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        boolean boolean5 = managementDashboard1.isBackgroundSet();
        managementDashboard1.setRequestFocusEnabled(false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseDrag(event6, (int) (short) 10, 4);
        java.beans.PropertyChangeListener propertyChangeListener11 = null;
        managementDashboard1.removePropertyChangeListener("hi!", propertyChangeListener11);
        java.lang.String str13 = managementDashboard1.getName();
        java.io.PrintStream printStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream14, 8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.print(String)\" because \"out\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        java.util.ArrayList<Manager> managerList0 = MainSystem.managers;
        MainSystem.managers = managerList0;
        org.junit.Assert.assertNotNull(managerList0);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        javax.swing.JPopupMenu jPopupMenu27 = null;
        managementDashboard12.setComponentPopupMenu(jPopupMenu27);
        java.awt.Insets insets29 = managementDashboard12.insets();
        java.util.function.Consumer<java.lang.String> strConsumer30 = null;
        ManagementDashboard managementDashboard31 = new ManagementDashboard(strConsumer30);
        boolean boolean32 = managementDashboard31.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests33 = managementDashboard31.getInputMethodRequests();
        java.awt.Container container34 = managementDashboard31.getTopLevelAncestor();
        java.awt.Color color35 = null;
        managementDashboard31.setForeground(color35);
        managementDashboard31.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean42 = managementDashboard31.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer43 = null;
        ManagementDashboard managementDashboard44 = new ManagementDashboard(strConsumer43);
        managementDashboard44.setRequestFocusEnabled(false);
        java.awt.Event event47 = null;
        boolean boolean49 = managementDashboard44.keyUp(event47, (int) (short) 1);
        managementDashboard44.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener53 = null;
        managementDashboard44.removePropertyChangeListener("", propertyChangeListener53);
        managementDashboard44.doLayout();
        javax.swing.JPopupMenu jPopupMenu56 = managementDashboard44.getComponentPopupMenu();
        java.awt.Component component58 = managementDashboard31.add((java.awt.Component) managementDashboard44, 1);
        java.util.function.Consumer<java.lang.String> strConsumer59 = null;
        ManagementDashboard managementDashboard60 = new ManagementDashboard(strConsumer59);
        managementDashboard60.setRequestFocusEnabled(false);
        java.awt.Event event63 = null;
        boolean boolean65 = managementDashboard60.keyUp(event63, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener66 = null;
        managementDashboard60.addInputMethodListener(inputMethodListener66);
        java.awt.Dimension dimension68 = managementDashboard60.getMaximumSize();
        managementDashboard44.setPreferredSize(dimension68);
        managementDashboard44.firePropertyChange("data/managerData.csv", ' ', ' ');
        java.util.function.Consumer<java.lang.String> strConsumer74 = null;
        ManagementDashboard managementDashboard75 = new ManagementDashboard(strConsumer74);
        managementDashboard75.setRequestFocusEnabled(false);
        java.awt.Event event78 = null;
        boolean boolean80 = managementDashboard75.keyUp(event78, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener81 = null;
        managementDashboard75.addInputMethodListener(inputMethodListener81);
        java.awt.image.VolatileImage volatileImage85 = managementDashboard75.createVolatileImage((int) (short) 0, 1);
        boolean boolean86 = managementDashboard75.isOptimizedDrawingEnabled();
        javax.swing.ActionMap actionMap87 = managementDashboard75.getActionMap();
        managementDashboard44.setActionMap(actionMap87);
        managementDashboard12.remove((java.awt.Component) managementDashboard44);
        java.util.Locale locale90 = managementDashboard12.getLocale();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(insets29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(inputMethodRequests33);
        org.junit.Assert.assertNull(container34);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(jPopupMenu56);
        org.junit.Assert.assertNotNull(component58);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(dimension68);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(volatileImage85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(actionMap87);
        org.junit.Assert.assertNotNull(locale90);
        org.junit.Assert.assertEquals(locale90.toString(), "en_CA");
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        java.lang.String str0 = MainSystem.parkingSpaceFilePath;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "data/parkingSpaceData.csv" + "'", str0, "data/parkingSpaceData.csv");
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        managementDashboard1.setRequestFocusEnabled(true);
        managementDashboard1.addNotify();
        managementDashboard1.firePropertyChange("hi!", (byte) -1, (byte) 100);
        managementDashboard1.setRequestFocusEnabled(true);
        boolean boolean30 = managementDashboard1.isLightweight();
        managementDashboard1.setFocusCycleRoot(true);
        java.beans.PropertyChangeListener propertyChangeListener34 = null;
        managementDashboard1.removePropertyChangeListener("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]", propertyChangeListener34);
        java.awt.Graphics graphics36 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.update(graphics36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.Graphics.setColor(java.awt.Color)\" because \"componentGraphics\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseDrag(event6, (int) (short) 10, 4);
        java.awt.Graphics graphics10 = null;
        managementDashboard1.update(graphics10);
        java.io.PrintStream printStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.println(Object)\" because \"out\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard1.removePropertyChangeListener("", propertyChangeListener10);
        managementDashboard1.doLayout();
        javax.swing.JPopupMenu jPopupMenu13 = managementDashboard1.getComponentPopupMenu();
        java.lang.String str14 = managementDashboard1.getUIClassID();
        java.awt.Insets insets15 = managementDashboard1.insets();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = managementDashboard1.areFocusTraversalKeysSet((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid focus traversal key identifier");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(jPopupMenu13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PanelUI" + "'", str14, "PanelUI");
        org.junit.Assert.assertNotNull(insets15);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        java.beans.PropertyChangeListener propertyChangeListener21 = null;
        managementDashboard1.removePropertyChangeListener(propertyChangeListener21);
        java.awt.event.ComponentListener componentListener23 = null;
        managementDashboard1.addComponentListener(componentListener23);
        java.awt.event.FocusListener focusListener25 = null;
        managementDashboard1.removeFocusListener(focusListener25);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        java.awt.Event event29 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = managementDashboard1.handleEvent(event29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseDrag(event6, (int) (short) 10, 4);
        managementDashboard1.removeNotify();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        managementDashboard14.firePropertyChange("ToolTipText", (short) 1, (short) (byte) 100);
        boolean boolean33 = managementDashboard14.isFocusTraversalPolicyProvider();
        managementDashboard14.setEnabled(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseDrag(event6, (int) (short) 10, 4);
        java.beans.PropertyChangeListener propertyChangeListener11 = null;
        managementDashboard1.removePropertyChangeListener("hi!", propertyChangeListener11);
        boolean boolean13 = managementDashboard1.isMaximumSizeSet();
        java.util.function.Consumer<java.lang.String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        managementDashboard15.setInheritsPopupMenu(true);
        boolean boolean18 = managementDashboard15.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget19 = null;
        managementDashboard15.setDropTarget(dropTarget19);
        java.awt.Dimension dimension21 = null;
        managementDashboard15.setPreferredSize(dimension21);
        javax.swing.event.AncestorListener ancestorListener23 = null;
        managementDashboard15.removeAncestorListener(ancestorListener23);
        java.awt.Dimension dimension25 = managementDashboard15.getPreferredSize();
        java.awt.Dimension dimension26 = managementDashboard15.getPreferredSize();
        managementDashboard1.setPreferredSize(dimension26);
        boolean boolean28 = managementDashboard1.getInheritsPopupMenu();
        managementDashboard1.requestFocus();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(dimension25);
        org.junit.Assert.assertNotNull(dimension26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        int int0 = java.awt.image.ImageObserver.FRAMEBITS;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 16 + "'", int0 == 16);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        javax.swing.event.AncestorListener ancestorListener9 = null;
        managementDashboard1.removeAncestorListener(ancestorListener9);
        java.awt.Dimension dimension11 = managementDashboard1.getPreferredSize();
        java.awt.Dimension dimension12 = managementDashboard1.getPreferredSize();
        managementDashboard1.setDebugGraphicsOptions(10);
        java.awt.event.MouseListener mouseListener15 = null;
        managementDashboard1.removeMouseListener(mouseListener15);
        boolean boolean17 = managementDashboard1.isValidateRoot();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(dimension11);
        org.junit.Assert.assertNotNull(dimension12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy9 = managementDashboard1.getFocusTraversalPolicy();
        javax.swing.KeyStroke keyStroke10 = null;
        managementDashboard1.unregisterKeyboardAction(keyStroke10);
        java.util.function.Consumer<java.lang.String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        boolean boolean14 = managementDashboard13.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests15 = managementDashboard13.getInputMethodRequests();
        java.awt.Container container16 = managementDashboard13.getTopLevelAncestor();
        java.awt.Color color17 = null;
        managementDashboard13.setForeground(color17);
        managementDashboard13.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean24 = managementDashboard13.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        managementDashboard26.setRequestFocusEnabled(false);
        java.awt.Event event29 = null;
        boolean boolean31 = managementDashboard26.keyUp(event29, (int) (short) 1);
        managementDashboard26.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener35 = null;
        managementDashboard26.removePropertyChangeListener("", propertyChangeListener35);
        managementDashboard26.doLayout();
        javax.swing.JPopupMenu jPopupMenu38 = managementDashboard26.getComponentPopupMenu();
        java.awt.Component component40 = managementDashboard13.add((java.awt.Component) managementDashboard26, 1);
        java.awt.Rectangle rectangle41 = managementDashboard13.getBounds();
        java.util.function.Consumer<java.lang.String> strConsumer42 = null;
        ManagementDashboard managementDashboard43 = new ManagementDashboard(strConsumer42);
        managementDashboard43.setInheritsPopupMenu(true);
        boolean boolean46 = managementDashboard43.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget47 = null;
        managementDashboard43.setDropTarget(dropTarget47);
        java.awt.Dimension dimension49 = null;
        managementDashboard43.setPreferredSize(dimension49);
        javax.swing.event.AncestorListener ancestorListener51 = null;
        managementDashboard43.removeAncestorListener(ancestorListener51);
        java.awt.Dimension dimension53 = managementDashboard43.getPreferredSize();
        java.util.function.Consumer<java.lang.String> strConsumer54 = null;
        ManagementDashboard managementDashboard55 = new ManagementDashboard(strConsumer54);
        managementDashboard55.setInheritsPopupMenu(true);
        boolean boolean58 = managementDashboard55.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget59 = null;
        managementDashboard55.setDropTarget(dropTarget59);
        java.awt.Dimension dimension61 = null;
        managementDashboard55.setPreferredSize(dimension61);
        java.awt.Event event63 = null;
        boolean boolean66 = managementDashboard55.mouseExit(event63, (int) 'a', (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer67 = null;
        ManagementDashboard managementDashboard68 = new ManagementDashboard(strConsumer67);
        boolean boolean69 = managementDashboard68.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests70 = managementDashboard68.getInputMethodRequests();
        java.awt.Container container71 = managementDashboard68.getTopLevelAncestor();
        java.awt.Color color72 = null;
        managementDashboard68.setForeground(color72);
        javax.swing.KeyStroke keyStroke74 = null;
        java.awt.event.ActionListener actionListener75 = managementDashboard68.getActionForKeyStroke(keyStroke74);
        javax.swing.JToolTip jToolTip76 = managementDashboard68.createToolTip();
        java.awt.Event event77 = null;
        java.util.function.Consumer<java.lang.String> strConsumer78 = null;
        ManagementDashboard managementDashboard79 = new ManagementDashboard(strConsumer78);
        managementDashboard79.setInheritsPopupMenu(true);
        boolean boolean82 = managementDashboard79.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget83 = null;
        managementDashboard79.setDropTarget(dropTarget83);
        java.awt.Dimension dimension85 = null;
        managementDashboard79.setPreferredSize(dimension85);
        javax.swing.event.AncestorListener ancestorListener87 = null;
        managementDashboard79.removeAncestorListener(ancestorListener87);
        java.awt.Dimension dimension89 = managementDashboard79.getPreferredSize();
        java.awt.Dimension dimension90 = managementDashboard79.getPreferredSize();
        managementDashboard79.setDebugGraphicsOptions(10);
        boolean boolean93 = jToolTip76.lostFocus(event77, (java.lang.Object) managementDashboard79);
        java.awt.Rectangle rectangle94 = jToolTip76.bounds();
        managementDashboard55.computeVisibleRect(rectangle94);
        managementDashboard43.computeVisibleRect(rectangle94);
        managementDashboard13.computeVisibleRect(rectangle94);
        managementDashboard1.scrollRectToVisible(rectangle94);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(focusTraversalPolicy9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(inputMethodRequests15);
        org.junit.Assert.assertNull(container16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(jPopupMenu38);
        org.junit.Assert.assertNotNull(component40);
        org.junit.Assert.assertNotNull(rectangle41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(dimension53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(inputMethodRequests70);
        org.junit.Assert.assertNull(container71);
        org.junit.Assert.assertNull(actionListener75);
        org.junit.Assert.assertNotNull(jToolTip76);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(dimension89);
        org.junit.Assert.assertNotNull(dimension90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(rectangle94);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        managementDashboard1.enable();
        javax.swing.event.AncestorListener ancestorListener5 = null;
        managementDashboard1.addAncestorListener(ancestorListener5);
        managementDashboard1.validate();
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        java.lang.Object obj14 = managementDashboard1.getClientProperty((java.lang.Object) managementDashboard9);
        java.util.function.Consumer<java.lang.String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        managementDashboard16.setRequestFocusEnabled(false);
        java.awt.Event event19 = null;
        boolean boolean21 = managementDashboard16.keyUp(event19, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener22 = null;
        managementDashboard16.addInputMethodListener(inputMethodListener22);
        java.awt.Dimension dimension24 = managementDashboard16.getMaximumSize();
        int int25 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard16);
        java.awt.Component component26 = managementDashboard1.getNextFocusableComponent();
        java.awt.Insets insets27 = managementDashboard1.insets();
        java.beans.PropertyChangeListener[] propertyChangeListenerArray29 = managementDashboard1.getPropertyChangeListeners("data/lotData.csv");
        java.awt.AWTEvent aWTEvent30 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.dispatchEvent(aWTEvent30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.AWTEvent.getID()\" because \"e\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(component26);
        org.junit.Assert.assertNotNull(insets27);
        org.junit.Assert.assertNotNull(propertyChangeListenerArray29);
        org.junit.Assert.assertArrayEquals(propertyChangeListenerArray29, new java.beans.PropertyChangeListener[] {});
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener5 = null;
        managementDashboard1.removeContainerListener(containerListener5);
        java.awt.FocusTraversalPolicy focusTraversalPolicy7 = managementDashboard1.getFocusTraversalPolicy();
        java.beans.VetoableChangeListener vetoableChangeListener8 = null;
        managementDashboard1.removeVetoableChangeListener(vetoableChangeListener8);
        boolean boolean10 = managementDashboard1.isPaintingTile();
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        boolean boolean13 = managementDashboard12.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests14 = managementDashboard12.getInputMethodRequests();
        java.awt.Container container15 = managementDashboard12.getTopLevelAncestor();
        java.awt.Color color16 = null;
        managementDashboard12.setForeground(color16);
        managementDashboard12.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean23 = managementDashboard12.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer24 = null;
        ManagementDashboard managementDashboard25 = new ManagementDashboard(strConsumer24);
        managementDashboard25.setRequestFocusEnabled(false);
        java.awt.Event event28 = null;
        boolean boolean30 = managementDashboard25.keyUp(event28, (int) (short) 1);
        managementDashboard25.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener34 = null;
        managementDashboard25.removePropertyChangeListener("", propertyChangeListener34);
        managementDashboard25.doLayout();
        javax.swing.JPopupMenu jPopupMenu37 = managementDashboard25.getComponentPopupMenu();
        java.awt.Component component39 = managementDashboard12.add((java.awt.Component) managementDashboard25, 1);
        managementDashboard25.firePropertyChange("ToolTipText", (short) 1, (short) (byte) 100);
        boolean boolean44 = managementDashboard25.isFocusTraversalPolicyProvider();
        managementDashboard25.setAlignmentY((float) 64);
        managementDashboard1.remove((java.awt.Component) managementDashboard25);
        java.awt.Component component48 = managementDashboard25.getNextFocusableComponent();
        int int49 = managementDashboard25.countComponents();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(focusTraversalPolicy7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inputMethodRequests14);
        org.junit.Assert.assertNull(container15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(jPopupMenu37);
        org.junit.Assert.assertNotNull(component39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(component48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.lang.String str7 = managementDashboard1.toString();
        boolean boolean8 = managementDashboard1.isFocusTraversable();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]" + "'", str7, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.list();
        javax.swing.TransferHandler transferHandler8 = managementDashboard1.getTransferHandler();
        java.awt.event.KeyListener keyListener9 = null;
        managementDashboard1.addKeyListener(keyListener9);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(transferHandler8);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Font font5 = null;
        managementDashboard1.setFont(font5);
        // The following exception was thrown during execution in test generation
        try {
            javax.swing.InputMap inputMap8 = managementDashboard1.getInputMap((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener5 = null;
        managementDashboard1.removeContainerListener(containerListener5);
        java.awt.FocusTraversalPolicy focusTraversalPolicy7 = managementDashboard1.getFocusTraversalPolicy();
        java.beans.VetoableChangeListener vetoableChangeListener8 = null;
        managementDashboard1.removeVetoableChangeListener(vetoableChangeListener8);
        javax.accessibility.AccessibleContext accessibleContext10 = managementDashboard1.getAccessibleContext();
        boolean boolean11 = managementDashboard1.isManagingFocus();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(focusTraversalPolicy7);
        org.junit.Assert.assertNotNull(accessibleContext10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.LayoutManager layoutManager5 = null;
        managementDashboard1.setLayout(layoutManager5);
        boolean boolean7 = managementDashboard1.isOptimizedDrawingEnabled();
        managementDashboard1.updateUI();
        boolean boolean9 = managementDashboard1.getFocusTraversalKeysEnabled();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        int int9 = managementDashboard1.getDebugGraphicsOptions();
        java.beans.VetoableChangeListener vetoableChangeListener10 = null;
        managementDashboard1.addVetoableChangeListener(vetoableChangeListener10);
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests16 = managementDashboard14.getInputMethodRequests();
        java.awt.Container container17 = managementDashboard14.getTopLevelAncestor();
        java.awt.Color color18 = null;
        managementDashboard14.setForeground(color18);
        javax.swing.KeyStroke keyStroke20 = null;
        java.awt.event.ActionListener actionListener21 = managementDashboard14.getActionForKeyStroke(keyStroke20);
        javax.swing.JToolTip jToolTip22 = managementDashboard14.createToolTip();
        java.awt.Event event23 = null;
        java.util.function.Consumer<java.lang.String> strConsumer24 = null;
        ManagementDashboard managementDashboard25 = new ManagementDashboard(strConsumer24);
        managementDashboard25.setInheritsPopupMenu(true);
        boolean boolean28 = managementDashboard25.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget29 = null;
        managementDashboard25.setDropTarget(dropTarget29);
        java.awt.Dimension dimension31 = null;
        managementDashboard25.setPreferredSize(dimension31);
        javax.swing.event.AncestorListener ancestorListener33 = null;
        managementDashboard25.removeAncestorListener(ancestorListener33);
        java.awt.Dimension dimension35 = managementDashboard25.getPreferredSize();
        java.awt.Dimension dimension36 = managementDashboard25.getPreferredSize();
        managementDashboard25.setDebugGraphicsOptions(10);
        boolean boolean39 = jToolTip22.lostFocus(event23, (java.lang.Object) managementDashboard25);
        boolean boolean40 = managementDashboard25.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener42 = null;
        managementDashboard25.addPropertyChangeListener("ToolTipText", propertyChangeListener42);
        java.awt.Component[] componentArray44 = managementDashboard25.getComponents();
        java.awt.Font font45 = null;
        managementDashboard25.setFont(font45);
        javax.swing.plaf.PanelUI panelUI47 = managementDashboard25.getUI();
        boolean boolean48 = managementDashboard25.isRequestFocusEnabled();
        java.util.function.Consumer<java.lang.String> strConsumer50 = null;
        ManagementDashboard managementDashboard51 = new ManagementDashboard(strConsumer50);
        managementDashboard51.setRequestFocusEnabled(false);
        java.awt.Event event54 = null;
        boolean boolean56 = managementDashboard51.keyUp(event54, (int) (short) 1);
        managementDashboard51.setAutoscrolls(true);
        boolean boolean59 = managementDashboard51.isRequestFocusEnabled();
        javax.swing.InputMap inputMap61 = managementDashboard51.getInputMap((int) (short) 1);
        managementDashboard25.setInputMap(1, inputMap61);
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.setInputMap((int) (short) 100, inputMap61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(inputMethodRequests16);
        org.junit.Assert.assertNull(container17);
        org.junit.Assert.assertNull(actionListener21);
        org.junit.Assert.assertNotNull(jToolTip22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(dimension35);
        org.junit.Assert.assertNotNull(dimension36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(componentArray44);
        org.junit.Assert.assertNotNull(panelUI47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(inputMap61);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        java.lang.Object obj14 = managementDashboard1.getClientProperty((java.lang.Object) managementDashboard9);
        java.util.function.Consumer<java.lang.String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        managementDashboard16.setRequestFocusEnabled(false);
        java.awt.Event event19 = null;
        boolean boolean21 = managementDashboard16.keyUp(event19, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener22 = null;
        managementDashboard16.addInputMethodListener(inputMethodListener22);
        java.awt.Dimension dimension24 = managementDashboard16.getMaximumSize();
        int int25 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard16);
        java.awt.Component component27 = managementDashboard1.getComponent(1);
        java.awt.image.VolatileImage volatileImage30 = component27.createVolatileImage(8, (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(component27);
        org.junit.Assert.assertNull(volatileImage30);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        java.awt.Dimension dimension9 = managementDashboard1.getMaximumSize();
        managementDashboard1.setDebugGraphicsOptions(10);
        boolean boolean12 = managementDashboard1.getInheritsPopupMenu();
        boolean boolean13 = managementDashboard1.isFontSet();
        java.awt.Container container14 = managementDashboard1.getParent();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(dimension9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(container14);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        managementDashboard1.resetKeyboardActions();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setRequestFocusEnabled(false);
        java.awt.Event event14 = null;
        boolean boolean16 = managementDashboard11.keyUp(event14, (int) (short) 1);
        managementDashboard11.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener20 = null;
        managementDashboard11.removePropertyChangeListener("", propertyChangeListener20);
        managementDashboard11.doLayout();
        javax.swing.JPopupMenu jPopupMenu23 = managementDashboard11.getComponentPopupMenu();
        java.awt.event.HierarchyListener hierarchyListener24 = null;
        managementDashboard11.removeHierarchyListener(hierarchyListener24);
        javax.swing.event.AncestorListener[] ancestorListenerArray26 = managementDashboard11.getAncestorListeners();
        java.util.function.Consumer<java.lang.String> strConsumer27 = null;
        ManagementDashboard managementDashboard28 = new ManagementDashboard(strConsumer27);
        boolean boolean29 = managementDashboard28.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests30 = managementDashboard28.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        managementDashboard32.setInheritsPopupMenu(true);
        boolean boolean35 = managementDashboard32.isValidateRoot();
        int int36 = managementDashboard28.getComponentZOrder((java.awt.Component) managementDashboard32);
        java.beans.PropertyChangeListener propertyChangeListener38 = null;
        managementDashboard32.addPropertyChangeListener("hi!", propertyChangeListener38);
        boolean boolean40 = managementDashboard32.isPreferredSizeSet();
        managementDashboard32.setToolTipText("");
        java.beans.PropertyChangeListener propertyChangeListener44 = null;
        managementDashboard32.addPropertyChangeListener("hi!", propertyChangeListener44);
        java.util.function.Consumer<java.lang.String> strConsumer46 = null;
        ManagementDashboard managementDashboard47 = new ManagementDashboard(strConsumer46);
        boolean boolean48 = managementDashboard47.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests49 = managementDashboard47.getInputMethodRequests();
        java.awt.Container container50 = managementDashboard47.getTopLevelAncestor();
        java.awt.Color color51 = null;
        managementDashboard47.setForeground(color51);
        managementDashboard47.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean58 = managementDashboard47.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer59 = null;
        ManagementDashboard managementDashboard60 = new ManagementDashboard(strConsumer59);
        managementDashboard60.setRequestFocusEnabled(false);
        java.awt.Event event63 = null;
        boolean boolean65 = managementDashboard60.keyUp(event63, (int) (short) 1);
        managementDashboard60.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener69 = null;
        managementDashboard60.removePropertyChangeListener("", propertyChangeListener69);
        managementDashboard60.doLayout();
        javax.swing.JPopupMenu jPopupMenu72 = managementDashboard60.getComponentPopupMenu();
        java.awt.Component component74 = managementDashboard47.add((java.awt.Component) managementDashboard60, 1);
        java.util.function.Consumer<java.lang.String> strConsumer75 = null;
        ManagementDashboard managementDashboard76 = new ManagementDashboard(strConsumer75);
        managementDashboard76.setRequestFocusEnabled(false);
        java.awt.Event event79 = null;
        boolean boolean81 = managementDashboard76.keyUp(event79, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener82 = null;
        managementDashboard76.addInputMethodListener(inputMethodListener82);
        java.awt.Dimension dimension84 = managementDashboard76.getMaximumSize();
        managementDashboard60.setPreferredSize(dimension84);
        managementDashboard60.firePropertyChange("data/managerData.csv", ' ', ' ');
        java.awt.ComponentOrientation componentOrientation90 = managementDashboard60.getComponentOrientation();
        managementDashboard32.setComponentOrientation(componentOrientation90);
        managementDashboard11.setComponentOrientation(componentOrientation90);
        managementDashboard1.applyComponentOrientation(componentOrientation90);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(jPopupMenu23);
        org.junit.Assert.assertNotNull(ancestorListenerArray26);
        org.junit.Assert.assertArrayEquals(ancestorListenerArray26, new javax.swing.event.AncestorListener[] {});
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(inputMethodRequests30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(inputMethodRequests49);
        org.junit.Assert.assertNull(container50);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(jPopupMenu72);
        org.junit.Assert.assertNotNull(component74);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(dimension84);
        org.junit.Assert.assertNotNull(componentOrientation90);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        java.lang.Object obj14 = managementDashboard1.getClientProperty((java.lang.Object) managementDashboard9);
        java.awt.LayoutManager layoutManager15 = managementDashboard9.getLayout();
        java.awt.im.InputMethodRequests inputMethodRequests16 = managementDashboard9.getInputMethodRequests();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(layoutManager15);
        org.junit.Assert.assertNull(inputMethodRequests16);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.beans.PropertyChangeListener propertyChangeListener11 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener11);
        boolean boolean13 = managementDashboard5.isPreferredSizeSet();
        managementDashboard5.setToolTipText("");
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener17);
        float float19 = managementDashboard5.getAlignmentX();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 0.5f + "'", float19 == 0.5f);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Component component4 = managementDashboard1.getNextFocusableComponent();
        javax.swing.TransferHandler transferHandler5 = managementDashboard1.getTransferHandler();
        managementDashboard1.setSize(64, (int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.awt.AWTKeyStroke> aWTKeyStrokeSet10 = managementDashboard1.getFocusTraversalKeys((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid focus traversal key identifier");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(component4);
        org.junit.Assert.assertNull(transferHandler5);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.lang.String str7 = managementDashboard1.toString();
        managementDashboard1.show();
        java.lang.Class<?> wildcardClass9 = managementDashboard1.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]" + "'", str7, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.event.HierarchyListener[] hierarchyListenerArray4 = managementDashboard1.getHierarchyListeners();
        int int7 = managementDashboard1.getBaseline(32, 32);
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        boolean boolean10 = managementDashboard9.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests11 = managementDashboard9.getInputMethodRequests();
        java.awt.Container container12 = managementDashboard9.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener13 = null;
        managementDashboard9.removeContainerListener(containerListener13);
        java.awt.FocusTraversalPolicy focusTraversalPolicy15 = managementDashboard9.getFocusTraversalPolicy();
        java.util.function.Consumer<java.lang.String> strConsumer16 = null;
        ManagementDashboard managementDashboard17 = new ManagementDashboard(strConsumer16);
        managementDashboard17.setInheritsPopupMenu(true);
        boolean boolean20 = managementDashboard17.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget21 = null;
        managementDashboard17.setDropTarget(dropTarget21);
        java.awt.Dimension dimension23 = null;
        managementDashboard17.setPreferredSize(dimension23);
        java.awt.Event event25 = null;
        boolean boolean28 = managementDashboard17.mouseExit(event25, (int) 'a', (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        boolean boolean31 = managementDashboard30.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests32 = managementDashboard30.getInputMethodRequests();
        java.awt.Container container33 = managementDashboard30.getTopLevelAncestor();
        java.awt.Color color34 = null;
        managementDashboard30.setForeground(color34);
        javax.swing.KeyStroke keyStroke36 = null;
        java.awt.event.ActionListener actionListener37 = managementDashboard30.getActionForKeyStroke(keyStroke36);
        javax.swing.JToolTip jToolTip38 = managementDashboard30.createToolTip();
        java.awt.Event event39 = null;
        java.util.function.Consumer<java.lang.String> strConsumer40 = null;
        ManagementDashboard managementDashboard41 = new ManagementDashboard(strConsumer40);
        managementDashboard41.setInheritsPopupMenu(true);
        boolean boolean44 = managementDashboard41.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget45 = null;
        managementDashboard41.setDropTarget(dropTarget45);
        java.awt.Dimension dimension47 = null;
        managementDashboard41.setPreferredSize(dimension47);
        javax.swing.event.AncestorListener ancestorListener49 = null;
        managementDashboard41.removeAncestorListener(ancestorListener49);
        java.awt.Dimension dimension51 = managementDashboard41.getPreferredSize();
        java.awt.Dimension dimension52 = managementDashboard41.getPreferredSize();
        managementDashboard41.setDebugGraphicsOptions(10);
        boolean boolean55 = jToolTip38.lostFocus(event39, (java.lang.Object) managementDashboard41);
        java.awt.Rectangle rectangle56 = jToolTip38.bounds();
        managementDashboard17.computeVisibleRect(rectangle56);
        java.awt.Rectangle rectangle58 = managementDashboard9.getBounds(rectangle56);
        managementDashboard1.setBounds(rectangle56);
        org.junit.Assert.assertNotNull(hierarchyListenerArray4);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray4, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(inputMethodRequests11);
        org.junit.Assert.assertNull(container12);
        org.junit.Assert.assertNull(focusTraversalPolicy15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(inputMethodRequests32);
        org.junit.Assert.assertNull(container33);
        org.junit.Assert.assertNull(actionListener37);
        org.junit.Assert.assertNotNull(jToolTip38);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(dimension51);
        org.junit.Assert.assertNotNull(dimension52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(rectangle56);
        org.junit.Assert.assertNotNull(rectangle58);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener[] inputMethodListenerArray7 = managementDashboard1.getInputMethodListeners();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.awt.AWTKeyStroke> aWTKeyStrokeSet9 = managementDashboard1.getFocusTraversalKeys((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid focus traversal key identifier");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(inputMethodListenerArray7);
        org.junit.Assert.assertArrayEquals(inputMethodListenerArray7, new java.awt.event.InputMethodListener[] {});
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        PaymentStrategy paymentStrategy0 = null;
        PaymentProcessor paymentProcessor1 = new PaymentProcessor(paymentStrategy0);
        CreditCardPayment creditCardPayment2 = new CreditCardPayment();
        paymentProcessor1.setPaymentStrategy((PaymentStrategy) creditCardPayment2);
        PaymentStrategy paymentStrategy4 = null;
        PaymentProcessor paymentProcessor5 = new PaymentProcessor(paymentStrategy4);
        CreditCardPayment creditCardPayment6 = new CreditCardPayment();
        paymentProcessor5.setPaymentStrategy((PaymentStrategy) creditCardPayment6);
        paymentProcessor1.setPaymentStrategy((PaymentStrategy) creditCardPayment6);
        PaymentStrategy paymentStrategy9 = null;
        PaymentProcessor paymentProcessor10 = new PaymentProcessor(paymentStrategy9);
        CreditCardPayment creditCardPayment11 = new CreditCardPayment();
        paymentProcessor10.setPaymentStrategy((PaymentStrategy) creditCardPayment11);
        PaymentStrategy paymentStrategy13 = null;
        PaymentProcessor paymentProcessor14 = new PaymentProcessor(paymentStrategy13);
        CreditCardPayment creditCardPayment15 = new CreditCardPayment();
        paymentProcessor14.setPaymentStrategy((PaymentStrategy) creditCardPayment15);
        paymentProcessor10.setPaymentStrategy((PaymentStrategy) creditCardPayment15);
        paymentProcessor1.setPaymentStrategy((PaymentStrategy) creditCardPayment15);
        PaymentProcessor paymentProcessor19 = new PaymentProcessor((PaymentStrategy) creditCardPayment15);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        SuperManager superManager0 = new SuperManager();
        MainSystem.currentManager = superManager0;
        java.lang.String str2 = superManager0.getPassword();
        MainSystem.currentManager = superManager0;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "123456789" + "'", str2, "123456789");
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard1.removePropertyChangeListener("", propertyChangeListener10);
        managementDashboard1.doLayout();
        javax.swing.JPopupMenu jPopupMenu13 = managementDashboard1.getComponentPopupMenu();
        java.awt.event.HierarchyListener hierarchyListener14 = null;
        managementDashboard1.removeHierarchyListener(hierarchyListener14);
        javax.swing.event.AncestorListener[] ancestorListenerArray16 = managementDashboard1.getAncestorListeners();
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        boolean boolean19 = managementDashboard18.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests20 = managementDashboard18.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer21 = null;
        ManagementDashboard managementDashboard22 = new ManagementDashboard(strConsumer21);
        managementDashboard22.setInheritsPopupMenu(true);
        boolean boolean25 = managementDashboard22.isValidateRoot();
        int int26 = managementDashboard18.getComponentZOrder((java.awt.Component) managementDashboard22);
        java.beans.PropertyChangeListener propertyChangeListener28 = null;
        managementDashboard22.addPropertyChangeListener("hi!", propertyChangeListener28);
        boolean boolean30 = managementDashboard22.isPreferredSizeSet();
        managementDashboard22.setToolTipText("");
        java.beans.PropertyChangeListener propertyChangeListener34 = null;
        managementDashboard22.addPropertyChangeListener("hi!", propertyChangeListener34);
        java.util.function.Consumer<java.lang.String> strConsumer36 = null;
        ManagementDashboard managementDashboard37 = new ManagementDashboard(strConsumer36);
        boolean boolean38 = managementDashboard37.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests39 = managementDashboard37.getInputMethodRequests();
        java.awt.Container container40 = managementDashboard37.getTopLevelAncestor();
        java.awt.Color color41 = null;
        managementDashboard37.setForeground(color41);
        managementDashboard37.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean48 = managementDashboard37.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer49 = null;
        ManagementDashboard managementDashboard50 = new ManagementDashboard(strConsumer49);
        managementDashboard50.setRequestFocusEnabled(false);
        java.awt.Event event53 = null;
        boolean boolean55 = managementDashboard50.keyUp(event53, (int) (short) 1);
        managementDashboard50.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener59 = null;
        managementDashboard50.removePropertyChangeListener("", propertyChangeListener59);
        managementDashboard50.doLayout();
        javax.swing.JPopupMenu jPopupMenu62 = managementDashboard50.getComponentPopupMenu();
        java.awt.Component component64 = managementDashboard37.add((java.awt.Component) managementDashboard50, 1);
        java.util.function.Consumer<java.lang.String> strConsumer65 = null;
        ManagementDashboard managementDashboard66 = new ManagementDashboard(strConsumer65);
        managementDashboard66.setRequestFocusEnabled(false);
        java.awt.Event event69 = null;
        boolean boolean71 = managementDashboard66.keyUp(event69, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener72 = null;
        managementDashboard66.addInputMethodListener(inputMethodListener72);
        java.awt.Dimension dimension74 = managementDashboard66.getMaximumSize();
        managementDashboard50.setPreferredSize(dimension74);
        managementDashboard50.firePropertyChange("data/managerData.csv", ' ', ' ');
        java.awt.ComponentOrientation componentOrientation80 = managementDashboard50.getComponentOrientation();
        managementDashboard22.setComponentOrientation(componentOrientation80);
        managementDashboard1.setComponentOrientation(componentOrientation80);
        managementDashboard1.setOpaque(false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(jPopupMenu13);
        org.junit.Assert.assertNotNull(ancestorListenerArray16);
        org.junit.Assert.assertArrayEquals(ancestorListenerArray16, new javax.swing.event.AncestorListener[] {});
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(inputMethodRequests20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(inputMethodRequests39);
        org.junit.Assert.assertNull(container40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(jPopupMenu62);
        org.junit.Assert.assertNotNull(component64);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(dimension74);
        org.junit.Assert.assertNotNull(componentOrientation80);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.LayoutManager layoutManager4 = null;
        managementDashboard1.setLayout(layoutManager4);
        managementDashboard1.setFocusTraversalPolicyProvider(true);
        managementDashboard1.reshape(128, (int) (short) -1, (int) '4', (int) (byte) 100);
        int int13 = managementDashboard1.getY();
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        managementDashboard5.requestFocus();
        boolean boolean11 = managementDashboard5.isDisplayable();
        managementDashboard5.setVerifyInputWhenFocusTarget(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener5 = null;
        managementDashboard1.removeContainerListener(containerListener5);
        java.awt.FocusTraversalPolicy focusTraversalPolicy7 = managementDashboard1.getFocusTraversalPolicy();
        java.awt.ImageCapabilities imageCapabilities10 = null;
        java.awt.image.VolatileImage volatileImage11 = managementDashboard1.createVolatileImage((int) (short) 1, 32, imageCapabilities10);
        float float12 = managementDashboard1.getAlignmentY();
        managementDashboard1.setOpaque(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(focusTraversalPolicy7);
        org.junit.Assert.assertNull(volatileImage11);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 0.5f + "'", float12 == 0.5f);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        managementDashboard1.move((int) (byte) 0, 8);
        java.awt.Event event12 = null;
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests16 = managementDashboard14.getInputMethodRequests();
        java.awt.Container container17 = managementDashboard14.getTopLevelAncestor();
        boolean boolean18 = managementDashboard1.gotFocus(event12, (java.lang.Object) container17);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = container17.isFocusCycleRoot();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(inputMethodRequests16);
        org.junit.Assert.assertNull(container17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        javax.swing.JToolTip jToolTip6 = managementDashboard1.createToolTip();
        boolean boolean7 = managementDashboard1.isManagingFocus();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component9 = managementDashboard1.getComponent(16);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: No such child: 16");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(jToolTip6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        java.awt.image.VolatileImage volatileImage11 = managementDashboard1.createVolatileImage((int) (short) 0, 1);
        managementDashboard1.doLayout();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setInheritsPopupMenu(true);
        boolean boolean17 = managementDashboard14.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget18 = null;
        managementDashboard14.setDropTarget(dropTarget18);
        java.awt.Dimension dimension20 = null;
        managementDashboard14.setPreferredSize(dimension20);
        managementDashboard14.addNotify();
        javax.swing.JPopupMenu jPopupMenu23 = null;
        managementDashboard14.setComponentPopupMenu(jPopupMenu23);
        java.awt.Event event25 = null;
        boolean boolean28 = managementDashboard14.mouseEnter(event25, (int) (short) 100, 64);
        java.awt.Component component29 = managementDashboard1.add((java.awt.Component) managementDashboard14);
        java.util.function.Consumer<java.lang.String> strConsumer30 = null;
        ManagementDashboard managementDashboard31 = new ManagementDashboard(strConsumer30);
        boolean boolean32 = managementDashboard31.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests33 = managementDashboard31.getInputMethodRequests();
        java.awt.Container container34 = managementDashboard31.getTopLevelAncestor();
        java.awt.Color color35 = null;
        managementDashboard31.setForeground(color35);
        managementDashboard31.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean42 = managementDashboard31.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer43 = null;
        ManagementDashboard managementDashboard44 = new ManagementDashboard(strConsumer43);
        managementDashboard44.setRequestFocusEnabled(false);
        java.awt.Event event47 = null;
        boolean boolean49 = managementDashboard44.keyUp(event47, (int) (short) 1);
        managementDashboard44.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener53 = null;
        managementDashboard44.removePropertyChangeListener("", propertyChangeListener53);
        managementDashboard44.doLayout();
        javax.swing.JPopupMenu jPopupMenu56 = managementDashboard44.getComponentPopupMenu();
        java.awt.Component component58 = managementDashboard31.add((java.awt.Component) managementDashboard44, 1);
        java.util.function.Consumer<java.lang.String> strConsumer59 = null;
        ManagementDashboard managementDashboard60 = new ManagementDashboard(strConsumer59);
        managementDashboard60.setRequestFocusEnabled(false);
        java.awt.Event event63 = null;
        boolean boolean65 = managementDashboard60.keyUp(event63, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener66 = null;
        managementDashboard60.addInputMethodListener(inputMethodListener66);
        java.awt.Dimension dimension68 = managementDashboard60.getMaximumSize();
        managementDashboard44.setPreferredSize(dimension68);
        managementDashboard44.firePropertyChange("data/managerData.csv", ' ', ' ');
        java.util.function.Consumer<java.lang.String> strConsumer74 = null;
        ManagementDashboard managementDashboard75 = new ManagementDashboard(strConsumer74);
        managementDashboard75.setRequestFocusEnabled(false);
        java.awt.Event event78 = null;
        boolean boolean80 = managementDashboard75.keyUp(event78, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener81 = null;
        managementDashboard75.addInputMethodListener(inputMethodListener81);
        java.awt.image.VolatileImage volatileImage85 = managementDashboard75.createVolatileImage((int) (short) 0, 1);
        boolean boolean86 = managementDashboard75.isOptimizedDrawingEnabled();
        javax.swing.ActionMap actionMap87 = managementDashboard75.getActionMap();
        managementDashboard44.setActionMap(actionMap87);
        managementDashboard14.setActionMap(actionMap87);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(volatileImage11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(component29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(inputMethodRequests33);
        org.junit.Assert.assertNull(container34);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(jPopupMenu56);
        org.junit.Assert.assertNotNull(component58);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(dimension68);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(volatileImage85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(actionMap87);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        java.awt.image.VolatileImage volatileImage11 = managementDashboard1.createVolatileImage((int) (short) 0, 1);
        boolean boolean12 = managementDashboard1.isOptimizedDrawingEnabled();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setInheritsPopupMenu(true);
        boolean boolean17 = managementDashboard14.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget18 = null;
        managementDashboard14.setDropTarget(dropTarget18);
        java.awt.Dimension dimension20 = null;
        managementDashboard14.setPreferredSize(dimension20);
        javax.swing.event.AncestorListener ancestorListener22 = null;
        managementDashboard14.removeAncestorListener(ancestorListener22);
        java.awt.Dimension dimension24 = managementDashboard14.getPreferredSize();
        managementDashboard14.repaint((long) 1);
        boolean boolean27 = managementDashboard14.isMinimumSizeSet();
        javax.accessibility.AccessibleContext accessibleContext28 = managementDashboard14.getAccessibleContext();
        java.lang.Object obj29 = managementDashboard1.getClientProperty((java.lang.Object) managementDashboard14);
        boolean boolean30 = managementDashboard1.isPaintingForPrint();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(volatileImage11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(accessibleContext28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        managementDashboard1.setRequestFocusEnabled(true);
        managementDashboard1.addNotify();
        managementDashboard1.firePropertyChange("hi!", (byte) -1, (byte) 100);
        managementDashboard1.setRequestFocusEnabled(true);
        boolean boolean30 = managementDashboard1.isLightweight();
        managementDashboard1.setFocusCycleRoot(true);
        boolean boolean33 = managementDashboard1.isMinimumSizeSet();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.Event event3 = null;
        boolean boolean5 = managementDashboard1.lostFocus(event3, (java.lang.Object) "");
        java.awt.Component[] componentArray6 = managementDashboard1.getComponents();
        java.awt.Dimension dimension7 = managementDashboard1.getMinimumSize();
        java.awt.dnd.DropTarget dropTarget8 = managementDashboard1.getDropTarget();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(componentArray6);
        org.junit.Assert.assertNotNull(dimension7);
        org.junit.Assert.assertNull(dropTarget8);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        java.lang.Object obj14 = managementDashboard1.getClientProperty((java.lang.Object) managementDashboard9);
        java.util.function.Consumer<java.lang.String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        managementDashboard16.setRequestFocusEnabled(false);
        java.awt.Event event19 = null;
        boolean boolean21 = managementDashboard16.keyUp(event19, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener22 = null;
        managementDashboard16.addInputMethodListener(inputMethodListener22);
        java.awt.Dimension dimension24 = managementDashboard16.getMaximumSize();
        int int25 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard16);
        java.awt.Component component26 = managementDashboard1.getNextFocusableComponent();
        java.util.function.Consumer<java.lang.String> strConsumer27 = null;
        ManagementDashboard managementDashboard28 = new ManagementDashboard(strConsumer27);
        boolean boolean29 = managementDashboard28.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests30 = managementDashboard28.getInputMethodRequests();
        java.awt.Container container31 = managementDashboard28.getTopLevelAncestor();
        java.awt.Color color32 = null;
        managementDashboard28.setForeground(color32);
        javax.swing.KeyStroke keyStroke34 = null;
        java.awt.event.ActionListener actionListener35 = managementDashboard28.getActionForKeyStroke(keyStroke34);
        java.util.function.Consumer<java.lang.String> strConsumer36 = null;
        ManagementDashboard managementDashboard37 = new ManagementDashboard(strConsumer36);
        boolean boolean38 = managementDashboard37.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests39 = managementDashboard37.getInputMethodRequests();
        java.awt.Container container40 = managementDashboard37.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener41 = null;
        managementDashboard37.removeContainerListener(containerListener41);
        int int43 = managementDashboard28.getComponentZOrder((java.awt.Component) managementDashboard37);
        float float44 = managementDashboard37.getAlignmentY();
        java.util.function.Consumer<java.lang.String> strConsumer45 = null;
        ManagementDashboard managementDashboard46 = new ManagementDashboard(strConsumer45);
        boolean boolean47 = managementDashboard46.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests48 = managementDashboard46.getInputMethodRequests();
        java.awt.Container container49 = managementDashboard46.getTopLevelAncestor();
        java.awt.Color color50 = null;
        managementDashboard46.setForeground(color50);
        managementDashboard46.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean57 = managementDashboard46.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer58 = null;
        ManagementDashboard managementDashboard59 = new ManagementDashboard(strConsumer58);
        managementDashboard59.setRequestFocusEnabled(false);
        java.awt.Event event62 = null;
        boolean boolean64 = managementDashboard59.keyUp(event62, (int) (short) 1);
        managementDashboard59.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener68 = null;
        managementDashboard59.removePropertyChangeListener("", propertyChangeListener68);
        managementDashboard59.doLayout();
        javax.swing.JPopupMenu jPopupMenu71 = managementDashboard59.getComponentPopupMenu();
        java.awt.Component component73 = managementDashboard46.add((java.awt.Component) managementDashboard59, 1);
        java.util.function.Consumer<java.lang.String> strConsumer74 = null;
        ManagementDashboard managementDashboard75 = new ManagementDashboard(strConsumer74);
        managementDashboard75.setRequestFocusEnabled(false);
        java.awt.Event event78 = null;
        boolean boolean80 = managementDashboard75.keyUp(event78, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener81 = null;
        managementDashboard75.addInputMethodListener(inputMethodListener81);
        java.awt.Dimension dimension83 = managementDashboard75.getMaximumSize();
        managementDashboard59.setPreferredSize(dimension83);
        managementDashboard59.firePropertyChange("data/managerData.csv", ' ', ' ');
        java.awt.ComponentOrientation componentOrientation89 = managementDashboard59.getComponentOrientation();
        managementDashboard37.setComponentOrientation(componentOrientation89);
        managementDashboard1.applyComponentOrientation(componentOrientation89);
        java.awt.event.ComponentListener componentListener92 = null;
        managementDashboard1.removeComponentListener(componentListener92);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(component26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(inputMethodRequests30);
        org.junit.Assert.assertNull(container31);
        org.junit.Assert.assertNull(actionListener35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(inputMethodRequests39);
        org.junit.Assert.assertNull(container40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 0.5f + "'", float44 == 0.5f);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(inputMethodRequests48);
        org.junit.Assert.assertNull(container49);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(jPopupMenu71);
        org.junit.Assert.assertNotNull(component73);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(dimension83);
        org.junit.Assert.assertNotNull(componentOrientation89);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        managementDashboard14.firePropertyChange("ToolTipText", (short) 1, (short) (byte) 100);
        boolean boolean33 = managementDashboard14.isFocusTraversalPolicyProvider();
        java.awt.Rectangle rectangle34 = managementDashboard14.getVisibleRect();
        managementDashboard14.reshape((int) ' ', (int) (short) -1, 16, (int) (short) 10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(rectangle34);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener5 = null;
        managementDashboard1.removeContainerListener(containerListener5);
        javax.swing.JPopupMenu jPopupMenu7 = null;
        managementDashboard1.setComponentPopupMenu(jPopupMenu7);
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener9 = null;
        managementDashboard1.addHierarchyBoundsListener(hierarchyBoundsListener9);
        java.awt.event.KeyListener[] keyListenerArray11 = managementDashboard1.getKeyListeners();
        java.awt.Dimension dimension12 = managementDashboard1.getPreferredSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNotNull(keyListenerArray11);
        org.junit.Assert.assertArrayEquals(keyListenerArray11, new java.awt.event.KeyListener[] {});
        org.junit.Assert.assertNotNull(dimension12);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        managementDashboard30.setRequestFocusEnabled(false);
        java.awt.Event event33 = null;
        boolean boolean35 = managementDashboard30.keyUp(event33, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener36 = null;
        managementDashboard30.addInputMethodListener(inputMethodListener36);
        java.awt.Dimension dimension38 = managementDashboard30.getMaximumSize();
        managementDashboard14.setPreferredSize(dimension38);
        java.util.function.Consumer<java.lang.String> strConsumer40 = null;
        ManagementDashboard managementDashboard41 = new ManagementDashboard(strConsumer40);
        managementDashboard41.setInheritsPopupMenu(true);
        boolean boolean44 = managementDashboard41.isValidateRoot();
        java.awt.Color color45 = managementDashboard41.getBackground();
        managementDashboard14.setBackground(color45);
        boolean boolean47 = managementDashboard14.getVerifyInputWhenFocusTarget();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(dimension38);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(color45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.Event event3 = null;
        boolean boolean5 = managementDashboard1.lostFocus(event3, (java.lang.Object) "");
        managementDashboard1.setAutoscrolls(false);
        java.awt.Graphics graphics8 = null;
        managementDashboard1.update(graphics8);
        java.awt.Dimension dimension10 = managementDashboard1.getPreferredSize();
        java.awt.Graphics graphics11 = null;
        managementDashboard1.paintComponents(graphics11);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(dimension10);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.LayoutManager layoutManager4 = null;
        managementDashboard1.setLayout(layoutManager4);
        managementDashboard1.setFocusTraversalPolicyProvider(true);
        java.awt.Dimension dimension8 = managementDashboard1.getMaximumSize();
        java.util.function.Consumer<java.lang.String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        managementDashboard10.setRequestFocusEnabled(false);
        java.awt.Event event13 = null;
        boolean boolean15 = managementDashboard10.keyUp(event13, (int) (short) 1);
        managementDashboard10.list();
        javax.swing.plaf.PanelUI panelUI17 = managementDashboard10.getUI();
        managementDashboard1.setUI(panelUI17);
        java.awt.FocusTraversalPolicy focusTraversalPolicy19 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy19);
        org.junit.Assert.assertNotNull(dimension8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(panelUI17);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        java.awt.Container container7 = managementDashboard1.getFocusCycleRootAncestor();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Point point8 = container7.getMousePosition();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(container7);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        managementDashboard1.addNotify();
        javax.swing.JPopupMenu jPopupMenu10 = null;
        managementDashboard1.setComponentPopupMenu(jPopupMenu10);
        java.awt.Event event12 = null;
        boolean boolean15 = managementDashboard1.mouseEnter(event12, (int) (short) 100, 64);
        boolean boolean16 = managementDashboard1.isShowing();
        java.awt.Graphics graphics17 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.paintComponents(graphics17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.Graphics.getClip()\" because \"g\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        managementDashboard1.enable();
        managementDashboard1.list();
        java.awt.Point point6 = managementDashboard1.location();
        managementDashboard1.removeAll();
        managementDashboard1.setDoubleBuffered(false);
        org.junit.Assert.assertNotNull(point6);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.list();
        javax.swing.plaf.PanelUI panelUI8 = managementDashboard1.getUI();
        javax.swing.border.Border border9 = null;
        managementDashboard1.setBorder(border9);
        java.util.Locale locale11 = managementDashboard1.getLocale();
        javax.swing.JPopupMenu jPopupMenu12 = managementDashboard1.getComponentPopupMenu();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(panelUI8);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_CA");
        org.junit.Assert.assertNull(jPopupMenu12);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        boolean boolean12 = managementDashboard11.isCursorSet();
        java.awt.Event event13 = null;
        boolean boolean15 = managementDashboard11.lostFocus(event13, (java.lang.Object) "");
        java.util.function.Consumer<java.lang.String> strConsumer16 = null;
        ManagementDashboard managementDashboard17 = new ManagementDashboard(strConsumer16);
        managementDashboard17.setRequestFocusEnabled(false);
        java.awt.Event event20 = null;
        boolean boolean22 = managementDashboard17.keyUp(event20, (int) (short) 1);
        managementDashboard17.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray25 = managementDashboard17.getHierarchyListeners();
        jToolTip9.add((java.awt.Component) managementDashboard11, (java.lang.Object) hierarchyListenerArray25);
        boolean boolean27 = jToolTip9.requestDefaultFocus();
        java.awt.Image image30 = jToolTip9.createImage((int) (short) 10, 2);
        jToolTip9.firePropertyChange("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]", (long) 32, (long) 2);
        java.awt.Insets insets35 = jToolTip9.getInsets();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray25);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray25, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(image30);
        org.junit.Assert.assertNotNull(insets35);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        java.util.function.Consumer<java.lang.String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        boolean boolean11 = managementDashboard10.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests12 = managementDashboard10.getInputMethodRequests();
        java.awt.Container container13 = managementDashboard10.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener14 = null;
        managementDashboard10.removeContainerListener(containerListener14);
        int int16 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard10);
        java.awt.Component component17 = null;
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        boolean boolean20 = managementDashboard19.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests21 = managementDashboard19.getInputMethodRequests();
        java.awt.Container container22 = managementDashboard19.getTopLevelAncestor();
        java.awt.Color color23 = null;
        managementDashboard19.setForeground(color23);
        javax.swing.KeyStroke keyStroke25 = null;
        java.awt.event.ActionListener actionListener26 = managementDashboard19.getActionForKeyStroke(keyStroke25);
        javax.swing.JToolTip jToolTip27 = managementDashboard19.createToolTip();
        java.awt.Event event28 = null;
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        managementDashboard30.setInheritsPopupMenu(true);
        boolean boolean33 = managementDashboard30.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget34 = null;
        managementDashboard30.setDropTarget(dropTarget34);
        java.awt.Dimension dimension36 = null;
        managementDashboard30.setPreferredSize(dimension36);
        javax.swing.event.AncestorListener ancestorListener38 = null;
        managementDashboard30.removeAncestorListener(ancestorListener38);
        java.awt.Dimension dimension40 = managementDashboard30.getPreferredSize();
        java.awt.Dimension dimension41 = managementDashboard30.getPreferredSize();
        managementDashboard30.setDebugGraphicsOptions(10);
        boolean boolean44 = jToolTip27.lostFocus(event28, (java.lang.Object) managementDashboard30);
        boolean boolean45 = managementDashboard30.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener47 = null;
        managementDashboard30.addPropertyChangeListener("ToolTipText", propertyChangeListener47);
        java.awt.Component[] componentArray49 = managementDashboard30.getComponents();
        java.awt.Font font50 = null;
        managementDashboard30.setFont(font50);
        javax.swing.plaf.PanelUI panelUI52 = managementDashboard30.getUI();
        java.awt.event.InputMethodListener[] inputMethodListenerArray53 = managementDashboard30.getInputMethodListeners();
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard10.add(component17, (java.lang.Object) inputMethodListenerArray53, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"parent\" because \"comp\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(inputMethodRequests12);
        org.junit.Assert.assertNull(container13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(inputMethodRequests21);
        org.junit.Assert.assertNull(container22);
        org.junit.Assert.assertNull(actionListener26);
        org.junit.Assert.assertNotNull(jToolTip27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(dimension40);
        org.junit.Assert.assertNotNull(dimension41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(componentArray49);
        org.junit.Assert.assertNotNull(panelUI52);
        org.junit.Assert.assertNotNull(inputMethodListenerArray53);
        org.junit.Assert.assertArrayEquals(inputMethodListenerArray53, new java.awt.event.InputMethodListener[] {});
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        SuperManager superManager0 = new SuperManager();
        java.lang.String str1 = superManager0.getPassword();
        java.lang.String str2 = superManager0.getPassword();
        java.lang.String str3 = superManager0.getUsername();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "123456789" + "'", str1, "123456789");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "123456789" + "'", str2, "123456789");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "SUPERMAN" + "'", str3, "SUPERMAN");
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        javax.swing.JToolTip jToolTip6 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        managementDashboard8.enable();
        boolean boolean12 = managementDashboard8.hasFocus();
        java.awt.Component component14 = managementDashboard1.add((java.awt.Component) managementDashboard8, (-1));
        org.junit.Assert.assertNotNull(jToolTip6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(component14);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        java.awt.Graphics graphics21 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.print(graphics21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.awt.Graphics.setColor(java.awt.Color)\" because \"componentGraphics\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        javax.swing.event.AncestorListener ancestorListener9 = null;
        managementDashboard1.removeAncestorListener(ancestorListener9);
        java.awt.Dimension dimension11 = managementDashboard1.getPreferredSize();
        java.awt.Dimension dimension12 = managementDashboard1.getPreferredSize();
        java.awt.Point point14 = managementDashboard1.getMousePosition(true);
        java.awt.Color color15 = managementDashboard1.getForeground();
        java.lang.Class<?> wildcardClass16 = managementDashboard1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(dimension11);
        org.junit.Assert.assertNotNull(dimension12);
        org.junit.Assert.assertNull(point14);
        org.junit.Assert.assertNotNull(color15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard1.removePropertyChangeListener("", propertyChangeListener10);
        managementDashboard1.doLayout();
        javax.swing.JPopupMenu jPopupMenu13 = managementDashboard1.getComponentPopupMenu();
        java.awt.event.HierarchyListener hierarchyListener14 = null;
        managementDashboard1.removeHierarchyListener(hierarchyListener14);
        javax.swing.event.AncestorListener[] ancestorListenerArray16 = managementDashboard1.getAncestorListeners();
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        boolean boolean19 = managementDashboard18.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests20 = managementDashboard18.getInputMethodRequests();
        java.awt.Container container21 = managementDashboard18.getTopLevelAncestor();
        java.awt.Color color22 = null;
        managementDashboard18.setForeground(color22);
        javax.swing.KeyStroke keyStroke24 = null;
        java.awt.event.ActionListener actionListener25 = managementDashboard18.getActionForKeyStroke(keyStroke24);
        javax.swing.JToolTip jToolTip26 = managementDashboard18.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer27 = null;
        ManagementDashboard managementDashboard28 = new ManagementDashboard(strConsumer27);
        managementDashboard28.setRequestFocusEnabled(false);
        java.awt.Event event31 = null;
        boolean boolean33 = managementDashboard28.keyUp(event31, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer34 = null;
        ManagementDashboard managementDashboard35 = new ManagementDashboard(strConsumer34);
        managementDashboard35.setRequestFocusEnabled(false);
        java.awt.Event event38 = null;
        boolean boolean40 = managementDashboard35.keyUp(event38, (int) (short) 1);
        managementDashboard35.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener44 = null;
        managementDashboard35.removePropertyChangeListener("", propertyChangeListener44);
        java.awt.Dimension dimension46 = managementDashboard35.getPreferredSize();
        managementDashboard28.setSize(dimension46);
        managementDashboard18.setMinimumSize(dimension46);
        java.util.function.Consumer<java.lang.String> strConsumer49 = null;
        ManagementDashboard managementDashboard50 = new ManagementDashboard(strConsumer49);
        managementDashboard50.setRequestFocusEnabled(false);
        java.awt.Event event53 = null;
        boolean boolean55 = managementDashboard50.keyUp(event53, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener56 = null;
        managementDashboard50.addInputMethodListener(inputMethodListener56);
        boolean boolean58 = managementDashboard50.isValidateRoot();
        boolean boolean59 = managementDashboard18.isFocusCycleRoot((java.awt.Container) managementDashboard50);
        java.awt.Container container60 = managementDashboard18.getTopLevelAncestor();
        java.util.function.Consumer<java.lang.String> strConsumer61 = null;
        ManagementDashboard managementDashboard62 = new ManagementDashboard(strConsumer61);
        boolean boolean63 = managementDashboard62.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests64 = managementDashboard62.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer65 = null;
        ManagementDashboard managementDashboard66 = new ManagementDashboard(strConsumer65);
        managementDashboard66.setInheritsPopupMenu(true);
        boolean boolean69 = managementDashboard66.isValidateRoot();
        int int70 = managementDashboard62.getComponentZOrder((java.awt.Component) managementDashboard66);
        java.beans.PropertyChangeListener propertyChangeListener72 = null;
        managementDashboard66.addPropertyChangeListener("hi!", propertyChangeListener72);
        boolean boolean74 = managementDashboard66.isPreferredSizeSet();
        managementDashboard66.setToolTipText("");
        java.awt.event.InputMethodListener inputMethodListener77 = null;
        managementDashboard66.removeInputMethodListener(inputMethodListener77);
        java.util.function.Consumer<java.lang.String> strConsumer79 = null;
        ManagementDashboard managementDashboard80 = new ManagementDashboard(strConsumer79);
        managementDashboard80.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy83 = null;
        managementDashboard80.setFocusTraversalPolicy(focusTraversalPolicy83);
        java.awt.Event event85 = null;
        boolean boolean88 = managementDashboard80.mouseDrag(event85, (int) (short) 10, 4);
        java.beans.PropertyChangeListener propertyChangeListener90 = null;
        managementDashboard80.removePropertyChangeListener("hi!", propertyChangeListener90);
        boolean boolean92 = managementDashboard80.isMaximumSizeSet();
        java.awt.Font font93 = managementDashboard80.getFont();
        java.awt.FontMetrics fontMetrics94 = managementDashboard66.getFontMetrics(font93);
        java.awt.FontMetrics fontMetrics95 = managementDashboard18.getFontMetrics(font93);
        managementDashboard1.setFont(font93);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(jPopupMenu13);
        org.junit.Assert.assertNotNull(ancestorListenerArray16);
        org.junit.Assert.assertArrayEquals(ancestorListenerArray16, new javax.swing.event.AncestorListener[] {});
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(inputMethodRequests20);
        org.junit.Assert.assertNull(container21);
        org.junit.Assert.assertNull(actionListener25);
        org.junit.Assert.assertNotNull(jToolTip26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(dimension46);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(container60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(inputMethodRequests64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(font93);
        org.junit.Assert.assertNotNull(fontMetrics94);
        org.junit.Assert.assertNotNull(fontMetrics95);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        boolean boolean27 = managementDashboard12.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener29 = null;
        managementDashboard12.addPropertyChangeListener("ToolTipText", propertyChangeListener29);
        java.awt.Component[] componentArray31 = managementDashboard12.getComponents();
        java.awt.Font font32 = null;
        managementDashboard12.setFont(font32);
        java.awt.event.MouseEvent mouseEvent34 = null;
        java.lang.String str35 = managementDashboard12.getToolTipText(mouseEvent34);
        java.awt.Rectangle rectangle36 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard12.setBounds(rectangle36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"x\" because \"r\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(componentArray31);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        ParkingLot parkingLot1 = new ParkingLot("data/userData.csv");
        ParkingSpace parkingSpace3 = parkingLot1.getSpace(10);
        int int4 = parkingSpace3.getIndex();
        parkingSpace3.setMaintenance();
        org.junit.Assert.assertNotNull(parkingSpace3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        managementDashboard1.move((int) (byte) 0, 8);
        java.awt.Event event12 = null;
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests16 = managementDashboard14.getInputMethodRequests();
        java.awt.Container container17 = managementDashboard14.getTopLevelAncestor();
        boolean boolean18 = managementDashboard1.gotFocus(event12, (java.lang.Object) container17);
        managementDashboard1.hide();
        java.awt.event.InputMethodListener[] inputMethodListenerArray20 = managementDashboard1.getInputMethodListeners();
        java.awt.Event event21 = null;
        boolean boolean24 = managementDashboard1.mouseUp(event21, 100, (int) (byte) 100);
        java.awt.event.MouseEvent mouseEvent25 = null;
        java.awt.Point point26 = managementDashboard1.getPopupLocation(mouseEvent25);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(inputMethodRequests16);
        org.junit.Assert.assertNull(container17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(inputMethodListenerArray20);
        org.junit.Assert.assertArrayEquals(inputMethodListenerArray20, new java.awt.event.InputMethodListener[] {});
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(point26);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        managementDashboard1.enable();
        javax.swing.event.AncestorListener ancestorListener5 = null;
        managementDashboard1.addAncestorListener(ancestorListener5);
        java.beans.PropertyChangeListener[] propertyChangeListenerArray8 = managementDashboard1.getPropertyChangeListeners("hi!");
        org.junit.Assert.assertNotNull(propertyChangeListenerArray8);
        org.junit.Assert.assertArrayEquals(propertyChangeListenerArray8, new java.beans.PropertyChangeListener[] {});
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.Event event3 = null;
        boolean boolean5 = managementDashboard1.lostFocus(event3, (java.lang.Object) "");
        java.util.function.Consumer<java.lang.String> strConsumer6 = null;
        ManagementDashboard managementDashboard7 = new ManagementDashboard(strConsumer6);
        boolean boolean8 = managementDashboard7.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests9 = managementDashboard7.getInputMethodRequests();
        java.awt.Container container10 = managementDashboard7.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener11 = null;
        managementDashboard7.removeContainerListener(containerListener11);
        java.awt.FocusTraversalPolicy focusTraversalPolicy13 = managementDashboard7.getFocusTraversalPolicy();
        java.util.function.Consumer<java.lang.String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        managementDashboard15.setInheritsPopupMenu(true);
        boolean boolean18 = managementDashboard15.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget19 = null;
        managementDashboard15.setDropTarget(dropTarget19);
        java.awt.Dimension dimension21 = null;
        managementDashboard15.setPreferredSize(dimension21);
        java.awt.Event event23 = null;
        boolean boolean26 = managementDashboard15.mouseExit(event23, (int) 'a', (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer27 = null;
        ManagementDashboard managementDashboard28 = new ManagementDashboard(strConsumer27);
        boolean boolean29 = managementDashboard28.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests30 = managementDashboard28.getInputMethodRequests();
        java.awt.Container container31 = managementDashboard28.getTopLevelAncestor();
        java.awt.Color color32 = null;
        managementDashboard28.setForeground(color32);
        javax.swing.KeyStroke keyStroke34 = null;
        java.awt.event.ActionListener actionListener35 = managementDashboard28.getActionForKeyStroke(keyStroke34);
        javax.swing.JToolTip jToolTip36 = managementDashboard28.createToolTip();
        java.awt.Event event37 = null;
        java.util.function.Consumer<java.lang.String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        managementDashboard39.setInheritsPopupMenu(true);
        boolean boolean42 = managementDashboard39.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget43 = null;
        managementDashboard39.setDropTarget(dropTarget43);
        java.awt.Dimension dimension45 = null;
        managementDashboard39.setPreferredSize(dimension45);
        javax.swing.event.AncestorListener ancestorListener47 = null;
        managementDashboard39.removeAncestorListener(ancestorListener47);
        java.awt.Dimension dimension49 = managementDashboard39.getPreferredSize();
        java.awt.Dimension dimension50 = managementDashboard39.getPreferredSize();
        managementDashboard39.setDebugGraphicsOptions(10);
        boolean boolean53 = jToolTip36.lostFocus(event37, (java.lang.Object) managementDashboard39);
        java.awt.Rectangle rectangle54 = jToolTip36.bounds();
        managementDashboard15.computeVisibleRect(rectangle54);
        java.awt.Rectangle rectangle56 = managementDashboard7.getBounds(rectangle54);
        int int57 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard7);
        boolean boolean58 = managementDashboard1.isLightweight();
        managementDashboard1.setName("123456789");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(inputMethodRequests9);
        org.junit.Assert.assertNull(container10);
        org.junit.Assert.assertNull(focusTraversalPolicy13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(inputMethodRequests30);
        org.junit.Assert.assertNull(container31);
        org.junit.Assert.assertNull(actionListener35);
        org.junit.Assert.assertNotNull(jToolTip36);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(dimension49);
        org.junit.Assert.assertNotNull(dimension50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(rectangle54);
        org.junit.Assert.assertNotNull(rectangle56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        PaymentStrategy paymentStrategy0 = null;
        PaymentProcessor paymentProcessor1 = new PaymentProcessor(paymentStrategy0);
        CreditCardPayment creditCardPayment2 = new CreditCardPayment();
        paymentProcessor1.setPaymentStrategy((PaymentStrategy) creditCardPayment2);
        creditCardPayment2.pay((double) (byte) 0);
        creditCardPayment2.pay(0.0d);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        java.awt.Event event9 = null;
        boolean boolean12 = managementDashboard1.mouseExit(event9, (int) 'a', (int) (short) 1);
        managementDashboard1.setFocusable(true);
        javax.swing.JRootPane jRootPane15 = managementDashboard1.getRootPane();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(jRootPane15);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy9 = managementDashboard1.getFocusTraversalPolicy();
        javax.swing.KeyStroke keyStroke10 = null;
        managementDashboard1.unregisterKeyboardAction(keyStroke10);
        managementDashboard1.setLocation((int) (short) 1, 100);
        javax.swing.KeyStroke[] keyStrokeArray15 = managementDashboard1.getRegisteredKeyStrokes();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(focusTraversalPolicy9);
        org.junit.Assert.assertNotNull(keyStrokeArray15);
        org.junit.Assert.assertArrayEquals(keyStrokeArray15, new javax.swing.KeyStroke[] {});
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        ParkingSpace parkingSpace4 = new ParkingSpace((int) (byte) 10, "data/managerData.csv", "", "ToolTipText");
        java.lang.String str5 = parkingSpace4.getCurrentUser();
        int int6 = parkingSpace4.getIndex();
        int int7 = parkingSpace4.getIndex();
        java.lang.String str8 = parkingSpace4.getCurrentCar();
        java.lang.String str9 = parkingSpace4.getCurrentCar();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ToolTipText" + "'", str8, "ToolTipText");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ToolTipText" + "'", str9, "ToolTipText");
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        managementDashboard1.addNotify();
        javax.swing.JPopupMenu jPopupMenu10 = null;
        managementDashboard1.setComponentPopupMenu(jPopupMenu10);
        java.awt.Event event12 = null;
        boolean boolean15 = managementDashboard1.mouseEnter(event12, (int) (short) 100, 64);
        java.awt.event.MouseWheelListener mouseWheelListener16 = null;
        managementDashboard1.addMouseWheelListener(mouseWheelListener16);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        managementDashboard1.move((int) (byte) 0, 8);
        java.awt.Event event12 = null;
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests16 = managementDashboard14.getInputMethodRequests();
        java.awt.Container container17 = managementDashboard14.getTopLevelAncestor();
        boolean boolean18 = managementDashboard1.gotFocus(event12, (java.lang.Object) container17);
        managementDashboard1.hide();
        boolean boolean20 = managementDashboard1.isFocusTraversable();
        java.awt.event.KeyListener keyListener21 = null;
        managementDashboard1.addKeyListener(keyListener21);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(inputMethodRequests16);
        org.junit.Assert.assertNull(container17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        managementDashboard30.setRequestFocusEnabled(false);
        java.awt.Event event33 = null;
        boolean boolean35 = managementDashboard30.keyUp(event33, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener36 = null;
        managementDashboard30.addInputMethodListener(inputMethodListener36);
        java.awt.Dimension dimension38 = managementDashboard30.getMaximumSize();
        managementDashboard14.setPreferredSize(dimension38);
        managementDashboard14.show(false);
        java.awt.event.ComponentListener[] componentListenerArray42 = managementDashboard14.getComponentListeners();
        boolean boolean43 = managementDashboard14.isDisplayable();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(dimension38);
        org.junit.Assert.assertNotNull(componentListenerArray42);
        org.junit.Assert.assertArrayEquals(componentListenerArray42, new java.awt.event.ComponentListener[] {});
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.beans.PropertyChangeListener propertyChangeListener11 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener11);
        boolean boolean13 = managementDashboard5.isPreferredSizeSet();
        managementDashboard5.setToolTipText("");
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener17);
        java.util.function.Consumer<java.lang.String> strConsumer19 = null;
        ManagementDashboard managementDashboard20 = new ManagementDashboard(strConsumer19);
        boolean boolean21 = managementDashboard20.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests22 = managementDashboard20.getInputMethodRequests();
        java.awt.Container container23 = managementDashboard20.getTopLevelAncestor();
        java.awt.Color color24 = null;
        managementDashboard20.setForeground(color24);
        managementDashboard20.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean31 = managementDashboard20.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        managementDashboard33.setRequestFocusEnabled(false);
        java.awt.Event event36 = null;
        boolean boolean38 = managementDashboard33.keyUp(event36, (int) (short) 1);
        managementDashboard33.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener42 = null;
        managementDashboard33.removePropertyChangeListener("", propertyChangeListener42);
        managementDashboard33.doLayout();
        javax.swing.JPopupMenu jPopupMenu45 = managementDashboard33.getComponentPopupMenu();
        java.awt.Component component47 = managementDashboard20.add((java.awt.Component) managementDashboard33, 1);
        java.util.function.Consumer<java.lang.String> strConsumer48 = null;
        ManagementDashboard managementDashboard49 = new ManagementDashboard(strConsumer48);
        managementDashboard49.setRequestFocusEnabled(false);
        java.awt.Event event52 = null;
        boolean boolean54 = managementDashboard49.keyUp(event52, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener55 = null;
        managementDashboard49.addInputMethodListener(inputMethodListener55);
        java.awt.Dimension dimension57 = managementDashboard49.getMaximumSize();
        managementDashboard33.setPreferredSize(dimension57);
        managementDashboard33.firePropertyChange("data/managerData.csv", ' ', ' ');
        java.awt.ComponentOrientation componentOrientation63 = managementDashboard33.getComponentOrientation();
        managementDashboard5.setComponentOrientation(componentOrientation63);
        java.beans.PropertyChangeListener propertyChangeListener65 = null;
        managementDashboard5.removePropertyChangeListener(propertyChangeListener65);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(inputMethodRequests22);
        org.junit.Assert.assertNull(container23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(jPopupMenu45);
        org.junit.Assert.assertNotNull(component47);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(dimension57);
        org.junit.Assert.assertNotNull(componentOrientation63);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        java.lang.Object obj14 = managementDashboard1.getClientProperty((java.lang.Object) managementDashboard9);
        java.awt.Graphics graphics15 = null;
        managementDashboard1.printComponents(graphics15);
        managementDashboard1.addNotify();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        int int9 = managementDashboard1.getDebugGraphicsOptions();
        boolean boolean10 = managementDashboard1.isMaximumSizeSet();
        managementDashboard1.nextFocus();
        java.util.function.Consumer<java.lang.String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        managementDashboard13.setRequestFocusEnabled(false);
        managementDashboard13.enable();
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        managementDashboard18.setInheritsPopupMenu(true);
        boolean boolean21 = managementDashboard18.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget22 = null;
        managementDashboard18.setDropTarget(dropTarget22);
        boolean boolean24 = managementDashboard18.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        managementDashboard26.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy29 = null;
        managementDashboard26.setFocusTraversalPolicy(focusTraversalPolicy29);
        java.lang.Object obj31 = managementDashboard18.getClientProperty((java.lang.Object) managementDashboard26);
        java.awt.LayoutManager layoutManager32 = managementDashboard26.getLayout();
        managementDashboard26.setAlignmentX((float) 0);
        managementDashboard1.putClientProperty((java.lang.Object) managementDashboard13, (java.lang.Object) 0);
        int int36 = managementDashboard13.countComponents();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(layoutManager32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        java.lang.Object obj14 = managementDashboard1.getClientProperty((java.lang.Object) managementDashboard9);
        java.util.function.Consumer<java.lang.String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        managementDashboard16.setRequestFocusEnabled(false);
        java.awt.Event event19 = null;
        boolean boolean21 = managementDashboard16.keyUp(event19, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener22 = null;
        managementDashboard16.addInputMethodListener(inputMethodListener22);
        java.awt.Dimension dimension24 = managementDashboard16.getMaximumSize();
        int int25 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard16);
        javax.swing.KeyStroke keyStroke26 = null;
        int int27 = managementDashboard1.getConditionForKeyStroke(keyStroke26);
        java.awt.Dimension dimension28 = managementDashboard1.minimumSize();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(dimension28);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.list();
        javax.swing.plaf.PanelUI panelUI8 = managementDashboard1.getUI();
        java.awt.image.ColorModel colorModel9 = managementDashboard1.getColorModel();
        boolean boolean10 = managementDashboard1.hasFocus();
        managementDashboard1.setAlignmentY((float) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(panelUI8);
        org.junit.Assert.assertNotNull(colorModel9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.awt.Event event8 = null;
        boolean boolean10 = managementDashboard1.keyUp(event8, (int) (short) 10);
        java.awt.Event event11 = null;
        boolean boolean14 = managementDashboard1.mouseMove(event11, 2, 64);
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener15 = null;
        managementDashboard1.removeHierarchyBoundsListener(hierarchyBoundsListener15);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        javax.swing.event.AncestorListener ancestorListener9 = null;
        managementDashboard1.removeAncestorListener(ancestorListener9);
        java.awt.Dimension dimension11 = managementDashboard1.getPreferredSize();
        java.awt.Dimension dimension12 = managementDashboard1.getPreferredSize();
        java.awt.Point point14 = managementDashboard1.getMousePosition(true);
        java.awt.event.ActionListener actionListener15 = null;
        javax.swing.KeyStroke keyStroke17 = null;
        managementDashboard1.registerKeyboardAction(actionListener15, "", keyStroke17, (int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(dimension11);
        org.junit.Assert.assertNotNull(dimension12);
        org.junit.Assert.assertNull(point14);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        java.awt.Event event9 = null;
        boolean boolean12 = managementDashboard1.mouseExit(event9, (int) 'a', (int) (short) 1);
        managementDashboard1.setFocusable(true);
        managementDashboard1.nextFocus();
        managementDashboard1.resize((int) (short) -1, (int) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        boolean boolean3 = managementDashboard1.getAutoscrolls();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        java.awt.Event event9 = null;
        boolean boolean12 = managementDashboard1.mouseExit(event9, (int) 'a', (int) (short) 1);
        managementDashboard1.setFocusable(true);
        managementDashboard1.nextFocus();
        boolean boolean16 = managementDashboard1.isShowing();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        managementDashboard1.addNotify();
        javax.swing.JPopupMenu jPopupMenu10 = null;
        managementDashboard1.setComponentPopupMenu(jPopupMenu10);
        java.util.function.Consumer<java.lang.String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        boolean boolean14 = managementDashboard13.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests15 = managementDashboard13.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer16 = null;
        ManagementDashboard managementDashboard17 = new ManagementDashboard(strConsumer16);
        managementDashboard17.setInheritsPopupMenu(true);
        boolean boolean20 = managementDashboard17.isValidateRoot();
        int int21 = managementDashboard13.getComponentZOrder((java.awt.Component) managementDashboard17);
        managementDashboard17.requestFocus();
        java.util.function.Consumer<java.lang.String> strConsumer23 = null;
        ManagementDashboard managementDashboard24 = new ManagementDashboard(strConsumer23);
        managementDashboard24.setRequestFocusEnabled(false);
        java.awt.Event event27 = null;
        boolean boolean29 = managementDashboard24.keyUp(event27, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener30 = null;
        managementDashboard24.addInputMethodListener(inputMethodListener30);
        managementDashboard24.move((int) (byte) 0, 8);
        java.awt.Event event35 = null;
        java.util.function.Consumer<java.lang.String> strConsumer36 = null;
        ManagementDashboard managementDashboard37 = new ManagementDashboard(strConsumer36);
        boolean boolean38 = managementDashboard37.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests39 = managementDashboard37.getInputMethodRequests();
        java.awt.Container container40 = managementDashboard37.getTopLevelAncestor();
        boolean boolean41 = managementDashboard24.gotFocus(event35, (java.lang.Object) container40);
        managementDashboard24.hide();
        java.awt.Component component43 = managementDashboard17.add((java.awt.Component) managementDashboard24);
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.setComponentZOrder((java.awt.Component) managementDashboard17, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: illegal component position");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(inputMethodRequests15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(inputMethodRequests39);
        org.junit.Assert.assertNull(container40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(component43);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        managementDashboard1.setRequestFocusEnabled(true);
        managementDashboard1.addNotify();
        managementDashboard1.firePropertyChange("hi!", (byte) -1, (byte) 100);
        boolean boolean28 = managementDashboard1.isShowing();
        managementDashboard1.show(true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.Event event3 = null;
        boolean boolean5 = managementDashboard1.lostFocus(event3, (java.lang.Object) "");
        managementDashboard1.setAutoscrolls(false);
        java.awt.Graphics graphics8 = null;
        managementDashboard1.update(graphics8);
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setInheritsPopupMenu(true);
        boolean boolean14 = managementDashboard11.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget15 = null;
        managementDashboard11.setDropTarget(dropTarget15);
        boolean boolean17 = managementDashboard11.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        managementDashboard19.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy22 = null;
        managementDashboard19.setFocusTraversalPolicy(focusTraversalPolicy22);
        java.lang.Object obj24 = managementDashboard11.getClientProperty((java.lang.Object) managementDashboard19);
        java.util.function.Consumer<java.lang.String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        managementDashboard26.setRequestFocusEnabled(false);
        java.awt.Event event29 = null;
        boolean boolean31 = managementDashboard26.keyUp(event29, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener32 = null;
        managementDashboard26.addInputMethodListener(inputMethodListener32);
        java.awt.Dimension dimension34 = managementDashboard26.getMaximumSize();
        int int35 = managementDashboard11.getComponentZOrder((java.awt.Component) managementDashboard26);
        javax.swing.KeyStroke keyStroke36 = null;
        int int37 = managementDashboard11.getConditionForKeyStroke(keyStroke36);
        managementDashboard11.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer39 = null;
        java.awt.Image image40 = managementDashboard11.createImage(imageProducer39);
        boolean boolean46 = managementDashboard1.imageUpdate(image40, (int) (byte) 10, (int) (short) 10, 4, (int) (short) 0, 2);
        managementDashboard1.enableInputMethods(false);
        java.awt.event.KeyListener keyListener49 = null;
        managementDashboard1.addKeyListener(keyListener49);
        java.awt.Insets insets51 = managementDashboard1.getInsets();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(dimension34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(image40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(insets51);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        java.util.function.Consumer<java.lang.String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        boolean boolean11 = managementDashboard10.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests12 = managementDashboard10.getInputMethodRequests();
        java.awt.Container container13 = managementDashboard10.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener14 = null;
        managementDashboard10.removeContainerListener(containerListener14);
        int int16 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard10);
        float float17 = managementDashboard10.getAlignmentY();
        java.awt.Point point18 = managementDashboard10.getLocation();
        java.util.function.Consumer<java.lang.String> strConsumer19 = null;
        ManagementDashboard managementDashboard20 = new ManagementDashboard(strConsumer19);
        managementDashboard20.setInheritsPopupMenu(true);
        boolean boolean23 = managementDashboard20.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget24 = null;
        managementDashboard20.setDropTarget(dropTarget24);
        java.awt.Dimension dimension26 = null;
        managementDashboard20.setPreferredSize(dimension26);
        java.awt.Event event28 = null;
        boolean boolean31 = managementDashboard20.mouseExit(event28, (int) 'a', (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        boolean boolean34 = managementDashboard33.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests35 = managementDashboard33.getInputMethodRequests();
        java.awt.Container container36 = managementDashboard33.getTopLevelAncestor();
        java.awt.Color color37 = null;
        managementDashboard33.setForeground(color37);
        javax.swing.KeyStroke keyStroke39 = null;
        java.awt.event.ActionListener actionListener40 = managementDashboard33.getActionForKeyStroke(keyStroke39);
        javax.swing.JToolTip jToolTip41 = managementDashboard33.createToolTip();
        java.awt.Event event42 = null;
        java.util.function.Consumer<java.lang.String> strConsumer43 = null;
        ManagementDashboard managementDashboard44 = new ManagementDashboard(strConsumer43);
        managementDashboard44.setInheritsPopupMenu(true);
        boolean boolean47 = managementDashboard44.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget48 = null;
        managementDashboard44.setDropTarget(dropTarget48);
        java.awt.Dimension dimension50 = null;
        managementDashboard44.setPreferredSize(dimension50);
        javax.swing.event.AncestorListener ancestorListener52 = null;
        managementDashboard44.removeAncestorListener(ancestorListener52);
        java.awt.Dimension dimension54 = managementDashboard44.getPreferredSize();
        java.awt.Dimension dimension55 = managementDashboard44.getPreferredSize();
        managementDashboard44.setDebugGraphicsOptions(10);
        boolean boolean58 = jToolTip41.lostFocus(event42, (java.lang.Object) managementDashboard44);
        java.awt.Rectangle rectangle59 = jToolTip41.bounds();
        managementDashboard20.computeVisibleRect(rectangle59);
        javax.swing.TransferHandler transferHandler61 = managementDashboard20.getTransferHandler();
        managementDashboard20.setRequestFocusEnabled(false);
        java.util.function.Consumer<java.lang.String> strConsumer64 = null;
        ManagementDashboard managementDashboard65 = new ManagementDashboard(strConsumer64);
        boolean boolean66 = managementDashboard65.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests67 = managementDashboard65.getInputMethodRequests();
        java.awt.Container container68 = managementDashboard65.getTopLevelAncestor();
        java.awt.Color color69 = null;
        managementDashboard65.setForeground(color69);
        javax.swing.KeyStroke keyStroke71 = null;
        java.awt.event.ActionListener actionListener72 = managementDashboard65.getActionForKeyStroke(keyStroke71);
        javax.swing.JToolTip jToolTip73 = managementDashboard65.createToolTip();
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard10.add((java.awt.Component) managementDashboard20, (java.lang.Object) jToolTip73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cannot add to layout: constraint must be a string (or null)");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(inputMethodRequests12);
        org.junit.Assert.assertNull(container13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 0.5f + "'", float17 == 0.5f);
        org.junit.Assert.assertNotNull(point18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(inputMethodRequests35);
        org.junit.Assert.assertNull(container36);
        org.junit.Assert.assertNull(actionListener40);
        org.junit.Assert.assertNotNull(jToolTip41);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(dimension54);
        org.junit.Assert.assertNotNull(dimension55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(rectangle59);
        org.junit.Assert.assertNull(transferHandler61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(inputMethodRequests67);
        org.junit.Assert.assertNull(container68);
        org.junit.Assert.assertNull(actionListener72);
        org.junit.Assert.assertNotNull(jToolTip73);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseDrag(event6, (int) (short) 10, 4);
        java.awt.Graphics graphics10 = null;
        managementDashboard1.update(graphics10);
        managementDashboard1.setAutoscrolls(false);
        javax.swing.event.AncestorListener[] ancestorListenerArray14 = managementDashboard1.getAncestorListeners();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(ancestorListenerArray14);
        org.junit.Assert.assertArrayEquals(ancestorListenerArray14, new javax.swing.event.AncestorListener[] {});
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.event.HierarchyListener[] hierarchyListenerArray4 = managementDashboard1.getHierarchyListeners();
        int int5 = managementDashboard1.getWidth();
        org.junit.Assert.assertNotNull(hierarchyListenerArray4);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray4, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.beans.PropertyChangeListener propertyChangeListener11 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener11);
        boolean boolean13 = managementDashboard5.isPreferredSizeSet();
        managementDashboard5.setToolTipText("");
        java.awt.event.MouseMotionListener mouseMotionListener16 = null;
        managementDashboard5.removeMouseMotionListener(mouseMotionListener16);
        boolean boolean18 = managementDashboard5.isFocusTraversalPolicyProvider();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        java.awt.image.VolatileImage volatileImage11 = managementDashboard1.createVolatileImage((int) (short) 0, 1);
        boolean boolean12 = managementDashboard1.isOptimizedDrawingEnabled();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setInheritsPopupMenu(true);
        boolean boolean17 = managementDashboard14.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget18 = null;
        managementDashboard14.setDropTarget(dropTarget18);
        java.awt.Dimension dimension20 = null;
        managementDashboard14.setPreferredSize(dimension20);
        javax.swing.event.AncestorListener ancestorListener22 = null;
        managementDashboard14.removeAncestorListener(ancestorListener22);
        java.awt.Dimension dimension24 = managementDashboard14.getPreferredSize();
        managementDashboard14.repaint((long) 1);
        boolean boolean27 = managementDashboard14.isMinimumSizeSet();
        javax.accessibility.AccessibleContext accessibleContext28 = managementDashboard14.getAccessibleContext();
        java.lang.Object obj29 = managementDashboard1.getClientProperty((java.lang.Object) managementDashboard14);
        java.lang.String str30 = managementDashboard1.toString();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(volatileImage11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(accessibleContext28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]" + "'", str30, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]");
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        java.awt.event.HierarchyListener hierarchyListener7 = null;
        managementDashboard1.addHierarchyListener(hierarchyListener7);
        java.awt.Cursor cursor9 = null;
        managementDashboard1.setCursor(cursor9);
        java.awt.Point point12 = managementDashboard1.getMousePosition(false);
        managementDashboard1.resize(100, 64);
        java.io.PrintStream printStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.println(Object)\" because \"out\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(point12);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        boolean boolean12 = managementDashboard11.isCursorSet();
        java.awt.Event event13 = null;
        boolean boolean15 = managementDashboard11.lostFocus(event13, (java.lang.Object) "");
        java.util.function.Consumer<java.lang.String> strConsumer16 = null;
        ManagementDashboard managementDashboard17 = new ManagementDashboard(strConsumer16);
        managementDashboard17.setRequestFocusEnabled(false);
        java.awt.Event event20 = null;
        boolean boolean22 = managementDashboard17.keyUp(event20, (int) (short) 1);
        managementDashboard17.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray25 = managementDashboard17.getHierarchyListeners();
        jToolTip9.add((java.awt.Component) managementDashboard11, (java.lang.Object) hierarchyListenerArray25);
        managementDashboard11.firePropertyChange("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]", (byte) 10, (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray25);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray25, new java.awt.event.HierarchyListener[] {});
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener5 = null;
        managementDashboard1.removeContainerListener(containerListener5);
        boolean boolean7 = managementDashboard1.getIgnoreRepaint();
        boolean boolean8 = managementDashboard1.isManagingFocus();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray9 = managementDashboard1.getHierarchyListeners();
        java.awt.event.KeyListener keyListener10 = null;
        managementDashboard1.addKeyListener(keyListener10);
        javax.swing.TransferHandler transferHandler12 = null;
        managementDashboard1.setTransferHandler(transferHandler12);
        managementDashboard1.setAlignmentX((float) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray9);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray9, new java.awt.event.HierarchyListener[] {});
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        java.awt.event.HierarchyListener hierarchyListener7 = null;
        managementDashboard1.addHierarchyListener(hierarchyListener7);
        java.awt.Cursor cursor9 = null;
        managementDashboard1.setCursor(cursor9);
        java.awt.Point point12 = managementDashboard1.getMousePosition(false);
        java.awt.event.ContainerListener containerListener13 = null;
        managementDashboard1.removeContainerListener(containerListener13);
        java.beans.PropertyChangeListener propertyChangeListener15 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener15);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(point12);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        boolean boolean9 = managementDashboard1.isValidateRoot();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        boolean boolean12 = managementDashboard11.isCursorSet();
        java.awt.Dimension dimension13 = managementDashboard11.size();
        managementDashboard1.setPreferredSize(dimension13);
        managementDashboard1.setAlignmentY((float) 128);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(dimension13);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        javax.swing.event.AncestorListener ancestorListener9 = null;
        managementDashboard1.removeAncestorListener(ancestorListener9);
        java.awt.Dimension dimension11 = managementDashboard1.getPreferredSize();
        java.awt.Dimension dimension12 = managementDashboard1.getPreferredSize();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer20 = null;
        ManagementDashboard managementDashboard21 = new ManagementDashboard(strConsumer20);
        managementDashboard21.setRequestFocusEnabled(false);
        java.awt.Event event24 = null;
        boolean boolean26 = managementDashboard21.keyUp(event24, (int) (short) 1);
        managementDashboard21.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener30 = null;
        managementDashboard21.removePropertyChangeListener("", propertyChangeListener30);
        java.awt.Dimension dimension32 = managementDashboard21.getPreferredSize();
        managementDashboard14.setSize(dimension32);
        java.awt.Dimension dimension34 = managementDashboard1.getSize(dimension32);
        java.awt.event.MouseWheelListener[] mouseWheelListenerArray35 = managementDashboard1.getMouseWheelListeners();
        boolean boolean36 = managementDashboard1.isFocusTraversable();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(dimension11);
        org.junit.Assert.assertNotNull(dimension12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(dimension32);
        org.junit.Assert.assertNotNull(dimension34);
        org.junit.Assert.assertNotNull(mouseWheelListenerArray35);
        org.junit.Assert.assertArrayEquals(mouseWheelListenerArray35, new java.awt.event.MouseWheelListener[] {});
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        boolean boolean10 = managementDashboard9.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests11 = managementDashboard9.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        managementDashboard13.setInheritsPopupMenu(true);
        boolean boolean16 = managementDashboard13.isValidateRoot();
        int int17 = managementDashboard9.getComponentZOrder((java.awt.Component) managementDashboard13);
        java.beans.PropertyChangeListener propertyChangeListener19 = null;
        managementDashboard13.addPropertyChangeListener("hi!", propertyChangeListener19);
        boolean boolean21 = managementDashboard13.isManagingFocus();
        int int22 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard13);
        boolean boolean23 = javax.swing.JComponent.isLightweightComponent((java.awt.Component) managementDashboard1);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component25 = managementDashboard1.getComponent((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: No such child: 52");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(inputMethodRequests11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        managementDashboard1.addNotify();
        javax.swing.JPopupMenu jPopupMenu10 = null;
        managementDashboard1.setComponentPopupMenu(jPopupMenu10);
        java.awt.Event event12 = null;
        boolean boolean15 = managementDashboard1.mouseEnter(event12, (int) (short) 100, 64);
        managementDashboard1.repaint((int) 'a', 32, (int) (byte) 10, 1);
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener21 = null;
        managementDashboard1.addHierarchyBoundsListener(hierarchyBoundsListener21);
        boolean boolean23 = managementDashboard1.isRequestFocusEnabled();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.event.MouseMotionListener mouseMotionListener2 = null;
        managementDashboard1.addMouseMotionListener(mouseMotionListener2);
        java.awt.Component component5 = managementDashboard1.getComponent(0);
        java.awt.event.FocusListener focusListener6 = null;
        managementDashboard1.addFocusListener(focusListener6);
        boolean boolean8 = managementDashboard1.isManagingFocus();
        java.beans.PropertyChangeListener[] propertyChangeListenerArray10 = managementDashboard1.getPropertyChangeListeners("hi!");
        org.junit.Assert.assertNotNull(component5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(propertyChangeListenerArray10);
        org.junit.Assert.assertArrayEquals(propertyChangeListenerArray10, new java.beans.PropertyChangeListener[] {});
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        managementDashboard1.setName("");
        managementDashboard1.doLayout();
        java.awt.event.KeyListener keyListener7 = null;
        managementDashboard1.addKeyListener(keyListener7);
        boolean boolean9 = managementDashboard1.isBackgroundSet();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseDrag(event6, (int) (short) 10, 4);
        java.awt.event.MouseMotionListener mouseMotionListener10 = null;
        managementDashboard1.removeMouseMotionListener(mouseMotionListener10);
        managementDashboard1.resize((-1), (int) 'a');
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseDrag(event6, (int) (short) 10, 4);
        java.awt.Cursor cursor10 = null;
        managementDashboard1.setCursor(cursor10);
        java.awt.event.ComponentListener[] componentListenerArray12 = managementDashboard1.getComponentListeners();
        java.awt.Event event13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = managementDashboard1.postEvent(event13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(componentListenerArray12);
        org.junit.Assert.assertArrayEquals(componentListenerArray12, new java.awt.event.ComponentListener[] {});
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        managementDashboard1.move((int) (byte) 1, (int) '#');
        boolean boolean7 = managementDashboard1.isFocusTraversable();
        java.awt.event.FocusListener focusListener8 = null;
        managementDashboard1.removeFocusListener(focusListener8);
        java.awt.event.KeyListener[] keyListenerArray10 = managementDashboard1.getKeyListeners();
        boolean boolean12 = managementDashboard1.requestFocus(true);
        javax.swing.event.AncestorListener ancestorListener13 = null;
        managementDashboard1.removeAncestorListener(ancestorListener13);
        boolean boolean15 = managementDashboard1.isFocusOwner();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(keyListenerArray10);
        org.junit.Assert.assertArrayEquals(keyListenerArray10, new java.awt.event.KeyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        managementDashboard1.move((int) (byte) 1, (int) '#');
        managementDashboard1.layout();
        boolean boolean8 = managementDashboard1.isManagingFocus();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        boolean boolean12 = managementDashboard11.isCursorSet();
        java.awt.Event event13 = null;
        boolean boolean15 = managementDashboard11.lostFocus(event13, (java.lang.Object) "");
        java.util.function.Consumer<java.lang.String> strConsumer16 = null;
        ManagementDashboard managementDashboard17 = new ManagementDashboard(strConsumer16);
        managementDashboard17.setRequestFocusEnabled(false);
        java.awt.Event event20 = null;
        boolean boolean22 = managementDashboard17.keyUp(event20, (int) (short) 1);
        managementDashboard17.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray25 = managementDashboard17.getHierarchyListeners();
        jToolTip9.add((java.awt.Component) managementDashboard11, (java.lang.Object) hierarchyListenerArray25);
        java.util.function.Consumer<java.lang.String> strConsumer27 = null;
        ManagementDashboard managementDashboard28 = new ManagementDashboard(strConsumer27);
        managementDashboard28.setInheritsPopupMenu(true);
        boolean boolean31 = managementDashboard28.isValidateRoot();
        boolean boolean32 = managementDashboard11.isFocusCycleRoot((java.awt.Container) managementDashboard28);
        java.awt.event.MouseWheelListener[] mouseWheelListenerArray33 = managementDashboard28.getMouseWheelListeners();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray25);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray25, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(mouseWheelListenerArray33);
        org.junit.Assert.assertArrayEquals(mouseWheelListenerArray33, new java.awt.event.MouseWheelListener[] {});
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.awt.event.KeyListener[] keyListenerArray8 = managementDashboard1.getKeyListeners();
        managementDashboard1.move((int) ' ', 32);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(keyListenerArray8);
        org.junit.Assert.assertArrayEquals(keyListenerArray8, new java.awt.event.KeyListener[] {});
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        javax.swing.border.Border border29 = null;
        managementDashboard1.setBorder(border29);
        java.awt.Dimension dimension31 = managementDashboard1.getPreferredSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertNotNull(dimension31);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        java.awt.event.MouseMotionListener mouseMotionListener2 = null;
        managementDashboard1.addMouseMotionListener(mouseMotionListener2);
        java.awt.Component component5 = managementDashboard1.getComponent(0);
        java.awt.event.FocusListener focusListener6 = null;
        managementDashboard1.addFocusListener(focusListener6);
        javax.swing.KeyStroke[] keyStrokeArray8 = managementDashboard1.getRegisteredKeyStrokes();
        org.junit.Assert.assertNotNull(component5);
        org.junit.Assert.assertNotNull(keyStrokeArray8);
        org.junit.Assert.assertArrayEquals(keyStrokeArray8, new javax.swing.KeyStroke[] {});
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.awt.event.KeyListener[] keyListenerArray8 = managementDashboard1.getKeyListeners();
        managementDashboard1.firePropertyChange("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]", (byte) 0, (byte) -1);
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer20 = null;
        ManagementDashboard managementDashboard21 = new ManagementDashboard(strConsumer20);
        managementDashboard21.setRequestFocusEnabled(false);
        java.awt.Event event24 = null;
        boolean boolean26 = managementDashboard21.keyUp(event24, (int) (short) 1);
        managementDashboard21.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener30 = null;
        managementDashboard21.removePropertyChangeListener("", propertyChangeListener30);
        java.awt.Dimension dimension32 = managementDashboard21.getPreferredSize();
        managementDashboard14.setSize(dimension32);
        managementDashboard1.setSize(dimension32);
        java.awt.Point point35 = managementDashboard1.getMousePosition();
        java.awt.Dimension dimension36 = managementDashboard1.getMaximumSize();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(keyListenerArray8);
        org.junit.Assert.assertArrayEquals(keyListenerArray8, new java.awt.event.KeyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(dimension32);
        org.junit.Assert.assertNull(point35);
        org.junit.Assert.assertNotNull(dimension36);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.beans.PropertyChangeListener propertyChangeListener11 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener11);
        boolean boolean13 = managementDashboard5.isPreferredSizeSet();
        managementDashboard5.setToolTipText("");
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener17);
        java.awt.event.HierarchyListener hierarchyListener19 = null;
        managementDashboard5.removeHierarchyListener(hierarchyListener19);
        java.awt.event.HierarchyListener[] hierarchyListenerArray21 = managementDashboard5.getHierarchyListeners();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray21);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray21, new java.awt.event.HierarchyListener[] {});
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        java.util.function.Consumer<java.lang.String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        boolean boolean11 = managementDashboard10.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests12 = managementDashboard10.getInputMethodRequests();
        java.awt.Container container13 = managementDashboard10.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener14 = null;
        managementDashboard10.removeContainerListener(containerListener14);
        int int16 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard10);
        float float17 = managementDashboard10.getAlignmentY();
        java.awt.Point point18 = managementDashboard10.getLocation();
        managementDashboard10.paintImmediately(128, (int) 'a', (int) (byte) -1, (int) (short) 0);
        java.util.function.Consumer<java.lang.String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        boolean boolean27 = managementDashboard26.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests28 = managementDashboard26.getInputMethodRequests();
        java.awt.Container container29 = managementDashboard26.getTopLevelAncestor();
        java.awt.Color color30 = null;
        managementDashboard26.setForeground(color30);
        javax.swing.KeyStroke keyStroke32 = null;
        java.awt.event.ActionListener actionListener33 = managementDashboard26.getActionForKeyStroke(keyStroke32);
        javax.swing.JToolTip jToolTip34 = managementDashboard26.createToolTip();
        java.awt.Event event35 = null;
        java.util.function.Consumer<java.lang.String> strConsumer36 = null;
        ManagementDashboard managementDashboard37 = new ManagementDashboard(strConsumer36);
        managementDashboard37.setInheritsPopupMenu(true);
        boolean boolean40 = managementDashboard37.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget41 = null;
        managementDashboard37.setDropTarget(dropTarget41);
        java.awt.Dimension dimension43 = null;
        managementDashboard37.setPreferredSize(dimension43);
        javax.swing.event.AncestorListener ancestorListener45 = null;
        managementDashboard37.removeAncestorListener(ancestorListener45);
        java.awt.Dimension dimension47 = managementDashboard37.getPreferredSize();
        java.awt.Dimension dimension48 = managementDashboard37.getPreferredSize();
        managementDashboard37.setDebugGraphicsOptions(10);
        boolean boolean51 = jToolTip34.lostFocus(event35, (java.lang.Object) managementDashboard37);
        boolean boolean52 = managementDashboard37.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener54 = null;
        managementDashboard37.addPropertyChangeListener("ToolTipText", propertyChangeListener54);
        java.awt.Component[] componentArray56 = managementDashboard37.getComponents();
        java.awt.Font font57 = null;
        managementDashboard37.setFont(font57);
        javax.swing.plaf.PanelUI panelUI59 = managementDashboard37.getUI();
        boolean boolean60 = managementDashboard37.isRequestFocusEnabled();
        java.util.function.Consumer<java.lang.String> strConsumer62 = null;
        ManagementDashboard managementDashboard63 = new ManagementDashboard(strConsumer62);
        managementDashboard63.setRequestFocusEnabled(false);
        java.awt.Event event66 = null;
        boolean boolean68 = managementDashboard63.keyUp(event66, (int) (short) 1);
        managementDashboard63.setAutoscrolls(true);
        boolean boolean71 = managementDashboard63.isRequestFocusEnabled();
        javax.swing.InputMap inputMap73 = managementDashboard63.getInputMap((int) (short) 1);
        managementDashboard37.setInputMap(1, inputMap73);
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard10.setInputMap(64, inputMap73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(inputMethodRequests12);
        org.junit.Assert.assertNull(container13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 0.5f + "'", float17 == 0.5f);
        org.junit.Assert.assertNotNull(point18);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(inputMethodRequests28);
        org.junit.Assert.assertNull(container29);
        org.junit.Assert.assertNull(actionListener33);
        org.junit.Assert.assertNotNull(jToolTip34);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(dimension47);
        org.junit.Assert.assertNotNull(dimension48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(componentArray56);
        org.junit.Assert.assertNotNull(panelUI59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(inputMap73);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        java.util.function.Consumer<java.lang.String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        boolean boolean11 = managementDashboard10.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests12 = managementDashboard10.getInputMethodRequests();
        java.awt.Container container13 = managementDashboard10.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener14 = null;
        managementDashboard10.removeContainerListener(containerListener14);
        int int16 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard10);
        float float17 = managementDashboard10.getAlignmentY();
        java.awt.Point point18 = managementDashboard10.getLocation();
        managementDashboard10.paintImmediately(128, (int) 'a', (int) (byte) -1, (int) (short) 0);
        javax.swing.KeyStroke keyStroke24 = null;
        managementDashboard10.unregisterKeyboardAction(keyStroke24);
        java.awt.Dimension dimension26 = managementDashboard10.getMaximumSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(inputMethodRequests12);
        org.junit.Assert.assertNull(container13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 0.5f + "'", float17 == 0.5f);
        org.junit.Assert.assertNotNull(point18);
        org.junit.Assert.assertNotNull(dimension26);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        managementDashboard1.setAlignmentY((float) 'a');
        managementDashboard1.updateUI();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.awt.event.ContainerListener containerListener10 = null;
        managementDashboard5.addContainerListener(containerListener10);
        managementDashboard5.transferFocusBackward();
        managementDashboard5.setName("data/managerData.csv");
        java.beans.PropertyChangeListener[] propertyChangeListenerArray16 = managementDashboard5.getPropertyChangeListeners("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=8388617,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(propertyChangeListenerArray16);
        org.junit.Assert.assertArrayEquals(propertyChangeListenerArray16, new java.beans.PropertyChangeListener[] {});
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        ParkingSpace parkingSpace4 = new ParkingSpace(16, "", "data/lotData.csv", "data/managerData.csv");
        java.lang.String str5 = parkingSpace4.getCurrentCar();
        int int6 = parkingSpace4.getIndex();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "data/managerData.csv" + "'", str5, "data/managerData.csv");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 16 + "'", int6 == 16);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        boolean boolean12 = managementDashboard11.isCursorSet();
        java.awt.Event event13 = null;
        boolean boolean15 = managementDashboard11.lostFocus(event13, (java.lang.Object) "");
        java.util.function.Consumer<java.lang.String> strConsumer16 = null;
        ManagementDashboard managementDashboard17 = new ManagementDashboard(strConsumer16);
        managementDashboard17.setRequestFocusEnabled(false);
        java.awt.Event event20 = null;
        boolean boolean22 = managementDashboard17.keyUp(event20, (int) (short) 1);
        managementDashboard17.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray25 = managementDashboard17.getHierarchyListeners();
        jToolTip9.add((java.awt.Component) managementDashboard11, (java.lang.Object) hierarchyListenerArray25);
        java.util.function.Consumer<java.lang.String> strConsumer28 = null;
        ManagementDashboard managementDashboard29 = new ManagementDashboard(strConsumer28);
        managementDashboard29.setRequestFocusEnabled(false);
        java.awt.Event event32 = null;
        boolean boolean34 = managementDashboard29.keyUp(event32, (int) (short) 1);
        boolean boolean35 = managementDashboard29.isCursorSet();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component36 = managementDashboard11.add("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=8388617,maximumSize=,minimumSize=,preferredSize=]", (java.awt.Component) managementDashboard29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cannot add to layout: unknown constraint: ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=8388617,maximumSize=,minimumSize=,preferredSize=]");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray25);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray25, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        managementDashboard1.setFocusTraversalKeysEnabled(true);
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener8 = null;
        managementDashboard1.removeHierarchyBoundsListener(hierarchyBoundsListener8);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        jToolTip9.grabFocus();
        jToolTip9.repaint((long) (short) 0, (int) ' ', 0, 64, (int) ' ');
        int int19 = jToolTip9.getBaseline((int) '#', 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        managementDashboard1.enable();
        managementDashboard1.list();
        java.util.function.Consumer<java.lang.String> strConsumer6 = null;
        ManagementDashboard managementDashboard7 = new ManagementDashboard(strConsumer6);
        managementDashboard7.setRequestFocusEnabled(false);
        java.awt.Event event10 = null;
        boolean boolean12 = managementDashboard7.keyUp(event10, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener13 = null;
        managementDashboard7.addInputMethodListener(inputMethodListener13);
        java.awt.image.VolatileImage volatileImage17 = managementDashboard7.createVolatileImage((int) (short) 0, 1);
        managementDashboard7.doLayout();
        java.util.function.Consumer<java.lang.String> strConsumer19 = null;
        ManagementDashboard managementDashboard20 = new ManagementDashboard(strConsumer19);
        managementDashboard20.setRequestFocusEnabled(false);
        java.awt.Event event23 = null;
        boolean boolean25 = managementDashboard20.keyUp(event23, (int) (short) 1);
        managementDashboard20.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray28 = managementDashboard20.getHierarchyListeners();
        java.awt.event.KeyListener keyListener29 = null;
        managementDashboard20.addKeyListener(keyListener29);
        java.awt.Cursor cursor31 = managementDashboard20.getCursor();
        java.util.function.Consumer<java.lang.String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        managementDashboard33.setRequestFocusEnabled(false);
        java.awt.Event event36 = null;
        boolean boolean38 = managementDashboard33.keyUp(event36, (int) (short) 1);
        boolean boolean39 = managementDashboard33.isCursorSet();
        java.awt.Dimension dimension40 = managementDashboard33.size();
        java.util.function.Consumer<java.lang.String> strConsumer41 = null;
        ManagementDashboard managementDashboard42 = new ManagementDashboard(strConsumer41);
        managementDashboard42.setInheritsPopupMenu(true);
        boolean boolean45 = managementDashboard42.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget46 = null;
        managementDashboard42.setDropTarget(dropTarget46);
        java.awt.Dimension dimension48 = null;
        managementDashboard42.setPreferredSize(dimension48);
        javax.swing.event.AncestorListener ancestorListener50 = null;
        managementDashboard42.removeAncestorListener(ancestorListener50);
        java.awt.Dimension dimension52 = managementDashboard42.getPreferredSize();
        java.awt.Dimension dimension53 = managementDashboard42.getPreferredSize();
        java.awt.Point point55 = managementDashboard42.getMousePosition(true);
        java.awt.Color color56 = managementDashboard42.getForeground();
        managementDashboard33.setForeground(color56);
        managementDashboard7.putClientProperty((java.lang.Object) managementDashboard20, (java.lang.Object) color56);
        managementDashboard1.setForeground(color56);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(volatileImage17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray28);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray28, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertNotNull(cursor31);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(dimension40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(dimension52);
        org.junit.Assert.assertNotNull(dimension53);
        org.junit.Assert.assertNull(point55);
        org.junit.Assert.assertNotNull(color56);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        boolean boolean27 = managementDashboard12.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener29 = null;
        managementDashboard12.addPropertyChangeListener("ToolTipText", propertyChangeListener29);
        java.awt.Component[] componentArray31 = managementDashboard12.getComponents();
        java.awt.Font font32 = null;
        managementDashboard12.setFont(font32);
        javax.swing.plaf.PanelUI panelUI34 = managementDashboard12.getUI();
        java.awt.event.HierarchyListener hierarchyListener35 = null;
        managementDashboard12.removeHierarchyListener(hierarchyListener35);
        java.awt.event.HierarchyListener[] hierarchyListenerArray37 = managementDashboard12.getHierarchyListeners();
        managementDashboard12.nextFocus();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(componentArray31);
        org.junit.Assert.assertNotNull(panelUI34);
        org.junit.Assert.assertNotNull(hierarchyListenerArray37);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray37, new java.awt.event.HierarchyListener[] {});
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        managementDashboard1.setRequestFocusEnabled(true);
        managementDashboard1.addNotify();
        int int24 = managementDashboard1.getX();
        javax.swing.InputVerifier inputVerifier25 = managementDashboard1.getInputVerifier();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(inputVerifier25);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.awt.event.KeyListener[] keyListenerArray8 = managementDashboard1.getKeyListeners();
        boolean boolean9 = managementDashboard1.requestFocusInWindow();
        managementDashboard1.firePropertyChange("SUPERMAN", (float) 64, (float) 35);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(keyListenerArray8);
        org.junit.Assert.assertArrayEquals(keyListenerArray8, new java.awt.event.KeyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        ParkingLot parkingLot1 = new ParkingLot("data/userData.csv");
        ParkingSpace parkingSpace3 = parkingLot1.getSpace((int) (byte) 10);
        parkingLot1.removeBooking(128);
        parkingLot1.setSpace(10, "Empty", "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]", "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertNotNull(parkingSpace3);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.LayoutManager layoutManager5 = null;
        managementDashboard1.setLayout(layoutManager5);
        boolean boolean7 = managementDashboard1.getFocusTraversalKeysEnabled();
        java.awt.Event event8 = null;
        boolean boolean11 = managementDashboard1.mouseEnter(event8, (int) (byte) 0, 0);
        java.io.PrintWriter printWriter12 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printWriter12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintWriter.println(Object)\" because \"out\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener5 = null;
        managementDashboard1.removeContainerListener(containerListener5);
        javax.swing.JPopupMenu jPopupMenu7 = null;
        managementDashboard1.setComponentPopupMenu(jPopupMenu7);
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener9 = null;
        managementDashboard1.addHierarchyBoundsListener(hierarchyBoundsListener9);
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setRequestFocusEnabled(false);
        java.awt.Event event15 = null;
        boolean boolean17 = managementDashboard12.keyUp(event15, (int) (short) 1);
        managementDashboard12.list();
        javax.swing.plaf.PanelUI panelUI19 = managementDashboard12.getUI();
        java.awt.image.ColorModel colorModel20 = managementDashboard12.getColorModel();
        java.awt.Point point21 = managementDashboard12.location();
        boolean boolean22 = managementDashboard1.contains(point21);
        managementDashboard1.resetKeyboardActions();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(panelUI19);
        org.junit.Assert.assertNotNull(colorModel20);
        org.junit.Assert.assertNotNull(point21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener5 = null;
        managementDashboard1.removeContainerListener(containerListener5);
        javax.swing.JPopupMenu jPopupMenu7 = null;
        managementDashboard1.setComponentPopupMenu(jPopupMenu7);
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener9 = null;
        managementDashboard1.addHierarchyBoundsListener(hierarchyBoundsListener9);
        java.awt.Cursor cursor11 = managementDashboard1.getCursor();
        boolean boolean12 = managementDashboard1.isDisplayable();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNotNull(cursor11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        managementDashboard1.setRequestFocusEnabled(true);
        java.awt.Font font23 = null;
        managementDashboard1.setFont(font23);
        java.awt.Event event25 = null;
        boolean boolean28 = managementDashboard1.mouseExit(event25, (int) '#', (int) (short) 1);
        boolean boolean29 = managementDashboard1.isValid();
        java.lang.Class<?> wildcardClass30 = managementDashboard1.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = container4.getIgnoreRepaint();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        boolean boolean12 = managementDashboard11.isCursorSet();
        java.awt.Event event13 = null;
        boolean boolean15 = managementDashboard11.lostFocus(event13, (java.lang.Object) "");
        java.util.function.Consumer<java.lang.String> strConsumer16 = null;
        ManagementDashboard managementDashboard17 = new ManagementDashboard(strConsumer16);
        managementDashboard17.setRequestFocusEnabled(false);
        java.awt.Event event20 = null;
        boolean boolean22 = managementDashboard17.keyUp(event20, (int) (short) 1);
        managementDashboard17.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray25 = managementDashboard17.getHierarchyListeners();
        jToolTip9.add((java.awt.Component) managementDashboard11, (java.lang.Object) hierarchyListenerArray25);
        boolean boolean27 = jToolTip9.requestDefaultFocus();
        java.awt.Image image30 = jToolTip9.createImage((int) (short) 10, 2);
        java.util.function.Consumer<java.lang.String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        managementDashboard33.setRequestFocusEnabled(false);
        java.awt.event.ComponentListener componentListener36 = null;
        managementDashboard33.removeComponentListener(componentListener36);
        javax.swing.InputMap inputMap38 = managementDashboard33.getInputMap();
        jToolTip9.setInputMap(0, inputMap38);
        java.util.function.Consumer<java.lang.String> strConsumer40 = null;
        ManagementDashboard managementDashboard41 = new ManagementDashboard(strConsumer40);
        managementDashboard41.setInheritsPopupMenu(true);
        boolean boolean44 = managementDashboard41.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget45 = null;
        managementDashboard41.setDropTarget(dropTarget45);
        java.awt.Dimension dimension47 = null;
        managementDashboard41.setPreferredSize(dimension47);
        managementDashboard41.addNotify();
        javax.swing.JPopupMenu jPopupMenu50 = null;
        managementDashboard41.setComponentPopupMenu(jPopupMenu50);
        java.awt.Event event52 = null;
        boolean boolean55 = managementDashboard41.mouseEnter(event52, (int) (short) 100, 64);
        managementDashboard41.repaint((int) 'a', 32, (int) (byte) 10, 1);
        java.util.function.Consumer<java.lang.String> strConsumer61 = null;
        ManagementDashboard managementDashboard62 = new ManagementDashboard(strConsumer61);
        boolean boolean63 = managementDashboard62.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests64 = managementDashboard62.getInputMethodRequests();
        java.awt.Container container65 = managementDashboard62.getTopLevelAncestor();
        java.awt.Color color66 = null;
        managementDashboard62.setForeground(color66);
        managementDashboard62.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean73 = managementDashboard62.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer74 = null;
        ManagementDashboard managementDashboard75 = new ManagementDashboard(strConsumer74);
        managementDashboard75.setRequestFocusEnabled(false);
        java.awt.Event event78 = null;
        boolean boolean80 = managementDashboard75.keyUp(event78, (int) (short) 1);
        managementDashboard75.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener84 = null;
        managementDashboard75.removePropertyChangeListener("", propertyChangeListener84);
        managementDashboard75.doLayout();
        javax.swing.JPopupMenu jPopupMenu87 = managementDashboard75.getComponentPopupMenu();
        java.awt.Component component89 = managementDashboard62.add((java.awt.Component) managementDashboard75, 1);
        java.awt.Rectangle rectangle90 = managementDashboard62.getBounds();
        managementDashboard41.setBounds(rectangle90);
        jToolTip9.computeVisibleRect(rectangle90);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray25);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray25, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(image30);
        org.junit.Assert.assertNotNull(inputMap38);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(inputMethodRequests64);
        org.junit.Assert.assertNull(container65);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(jPopupMenu87);
        org.junit.Assert.assertNotNull(component89);
        org.junit.Assert.assertNotNull(rectangle90);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setRequestFocusEnabled(false);
        java.awt.Event event14 = null;
        boolean boolean16 = managementDashboard11.keyUp(event14, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        managementDashboard18.setRequestFocusEnabled(false);
        java.awt.Event event21 = null;
        boolean boolean23 = managementDashboard18.keyUp(event21, (int) (short) 1);
        managementDashboard18.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener27 = null;
        managementDashboard18.removePropertyChangeListener("", propertyChangeListener27);
        java.awt.Dimension dimension29 = managementDashboard18.getPreferredSize();
        managementDashboard11.setSize(dimension29);
        managementDashboard1.setMinimumSize(dimension29);
        java.util.function.Consumer<java.lang.String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        managementDashboard33.setInheritsPopupMenu(true);
        managementDashboard33.setName("");
        managementDashboard33.doLayout();
        java.awt.event.KeyListener keyListener39 = null;
        managementDashboard33.addKeyListener(keyListener39);
        java.util.function.Consumer<java.lang.String> strConsumer41 = null;
        ManagementDashboard managementDashboard42 = new ManagementDashboard(strConsumer41);
        managementDashboard42.setInheritsPopupMenu(true);
        boolean boolean45 = managementDashboard42.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget46 = null;
        managementDashboard42.setDropTarget(dropTarget46);
        boolean boolean48 = managementDashboard42.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer49 = null;
        ManagementDashboard managementDashboard50 = new ManagementDashboard(strConsumer49);
        managementDashboard50.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy53 = null;
        managementDashboard50.setFocusTraversalPolicy(focusTraversalPolicy53);
        java.lang.Object obj55 = managementDashboard42.getClientProperty((java.lang.Object) managementDashboard50);
        java.util.function.Consumer<java.lang.String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        managementDashboard57.setRequestFocusEnabled(false);
        java.awt.Event event60 = null;
        boolean boolean62 = managementDashboard57.keyUp(event60, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener63 = null;
        managementDashboard57.addInputMethodListener(inputMethodListener63);
        java.awt.Dimension dimension65 = managementDashboard57.getMaximumSize();
        int int66 = managementDashboard42.getComponentZOrder((java.awt.Component) managementDashboard57);
        javax.swing.KeyStroke keyStroke67 = null;
        int int68 = managementDashboard42.getConditionForKeyStroke(keyStroke67);
        managementDashboard42.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer70 = null;
        java.awt.Image image71 = managementDashboard42.createImage(imageProducer70);
        java.util.function.Consumer<java.lang.String> strConsumer72 = null;
        ManagementDashboard managementDashboard73 = new ManagementDashboard(strConsumer72);
        managementDashboard73.setRequestFocusEnabled(false);
        java.awt.Event event76 = null;
        boolean boolean78 = managementDashboard73.keyUp(event76, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener79 = null;
        managementDashboard73.addInputMethodListener(inputMethodListener79);
        java.awt.image.VolatileImage volatileImage83 = managementDashboard73.createVolatileImage((int) (short) 0, 1);
        boolean boolean84 = managementDashboard73.isOptimizedDrawingEnabled();
        javax.swing.ActionMap actionMap85 = managementDashboard73.getActionMap();
        int int86 = managementDashboard33.checkImage(image71, (java.awt.image.ImageObserver) managementDashboard73);
        java.awt.Graphics graphics87 = null;
        managementDashboard33.print(graphics87);
        managementDashboard1.setComponentZOrder((java.awt.Component) managementDashboard33, 0);
        java.awt.event.KeyListener[] keyListenerArray91 = managementDashboard1.getKeyListeners();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(dimension29);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(dimension65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(image71);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(volatileImage83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(actionMap85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(keyListenerArray91);
        org.junit.Assert.assertArrayEquals(keyListenerArray91, new java.awt.event.KeyListener[] {});
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        java.awt.Color color12 = managementDashboard1.getForeground();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(color12);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.event.HierarchyListener[] hierarchyListenerArray4 = managementDashboard1.getHierarchyListeners();
        int int7 = managementDashboard1.getBaseline(32, 32);
        java.awt.image.ImageProducer imageProducer8 = null;
        java.awt.Image image9 = managementDashboard1.createImage(imageProducer8);
        org.junit.Assert.assertNotNull(hierarchyListenerArray4);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray4, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(image9);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        javax.swing.event.AncestorListener ancestorListener9 = null;
        managementDashboard1.removeAncestorListener(ancestorListener9);
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy15 = null;
        managementDashboard12.setFocusTraversalPolicy(focusTraversalPolicy15);
        java.awt.Event event17 = null;
        boolean boolean20 = managementDashboard12.mouseDrag(event17, (int) (short) 10, 4);
        managementDashboard12.setEnabled(true);
        java.awt.Component component23 = managementDashboard1.add((java.awt.Component) managementDashboard12);
        java.awt.Point point24 = component23.getLocation();
        java.awt.event.KeyListener keyListener25 = null;
        component23.removeKeyListener(keyListener25);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(component23);
        org.junit.Assert.assertNotNull(point24);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Container container10 = jToolTip9.getParent();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertNull(container10);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        java.lang.Object obj14 = managementDashboard1.getClientProperty((java.lang.Object) managementDashboard9);
        java.util.function.Consumer<java.lang.String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        managementDashboard16.setRequestFocusEnabled(false);
        java.awt.Event event19 = null;
        boolean boolean21 = managementDashboard16.keyUp(event19, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener22 = null;
        managementDashboard16.addInputMethodListener(inputMethodListener22);
        java.awt.Dimension dimension24 = managementDashboard16.getMaximumSize();
        int int25 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard16);
        java.awt.Component component26 = managementDashboard1.getNextFocusableComponent();
        java.awt.Insets insets27 = managementDashboard1.insets();
        java.util.function.Consumer<java.lang.String> strConsumer28 = null;
        ManagementDashboard managementDashboard29 = new ManagementDashboard(strConsumer28);
        managementDashboard29.setInheritsPopupMenu(true);
        java.awt.LayoutManager layoutManager32 = null;
        managementDashboard29.setLayout(layoutManager32);
        managementDashboard29.setFocusTraversalPolicyProvider(true);
        java.awt.Dimension dimension36 = managementDashboard29.getMaximumSize();
        java.awt.Dimension dimension37 = managementDashboard1.getSize(dimension36);
        java.lang.String str38 = managementDashboard1.getToolTipText();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(component26);
        org.junit.Assert.assertNotNull(insets27);
        org.junit.Assert.assertNotNull(dimension36);
        org.junit.Assert.assertNotNull(dimension37);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        managementDashboard1.firePropertyChange("PanelUI", (short) (byte) 1, (short) -1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.Event event3 = null;
        boolean boolean5 = managementDashboard1.lostFocus(event3, (java.lang.Object) "");
        java.util.function.Consumer<java.lang.String> strConsumer6 = null;
        ManagementDashboard managementDashboard7 = new ManagementDashboard(strConsumer6);
        boolean boolean8 = managementDashboard7.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests9 = managementDashboard7.getInputMethodRequests();
        java.awt.Container container10 = managementDashboard7.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener11 = null;
        managementDashboard7.removeContainerListener(containerListener11);
        java.awt.FocusTraversalPolicy focusTraversalPolicy13 = managementDashboard7.getFocusTraversalPolicy();
        java.util.function.Consumer<java.lang.String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        managementDashboard15.setInheritsPopupMenu(true);
        boolean boolean18 = managementDashboard15.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget19 = null;
        managementDashboard15.setDropTarget(dropTarget19);
        java.awt.Dimension dimension21 = null;
        managementDashboard15.setPreferredSize(dimension21);
        java.awt.Event event23 = null;
        boolean boolean26 = managementDashboard15.mouseExit(event23, (int) 'a', (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer27 = null;
        ManagementDashboard managementDashboard28 = new ManagementDashboard(strConsumer27);
        boolean boolean29 = managementDashboard28.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests30 = managementDashboard28.getInputMethodRequests();
        java.awt.Container container31 = managementDashboard28.getTopLevelAncestor();
        java.awt.Color color32 = null;
        managementDashboard28.setForeground(color32);
        javax.swing.KeyStroke keyStroke34 = null;
        java.awt.event.ActionListener actionListener35 = managementDashboard28.getActionForKeyStroke(keyStroke34);
        javax.swing.JToolTip jToolTip36 = managementDashboard28.createToolTip();
        java.awt.Event event37 = null;
        java.util.function.Consumer<java.lang.String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        managementDashboard39.setInheritsPopupMenu(true);
        boolean boolean42 = managementDashboard39.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget43 = null;
        managementDashboard39.setDropTarget(dropTarget43);
        java.awt.Dimension dimension45 = null;
        managementDashboard39.setPreferredSize(dimension45);
        javax.swing.event.AncestorListener ancestorListener47 = null;
        managementDashboard39.removeAncestorListener(ancestorListener47);
        java.awt.Dimension dimension49 = managementDashboard39.getPreferredSize();
        java.awt.Dimension dimension50 = managementDashboard39.getPreferredSize();
        managementDashboard39.setDebugGraphicsOptions(10);
        boolean boolean53 = jToolTip36.lostFocus(event37, (java.lang.Object) managementDashboard39);
        java.awt.Rectangle rectangle54 = jToolTip36.bounds();
        managementDashboard15.computeVisibleRect(rectangle54);
        java.awt.Rectangle rectangle56 = managementDashboard7.getBounds(rectangle54);
        int int57 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard7);
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener58 = null;
        managementDashboard7.removeHierarchyBoundsListener(hierarchyBoundsListener58);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(inputMethodRequests9);
        org.junit.Assert.assertNull(container10);
        org.junit.Assert.assertNull(focusTraversalPolicy13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(inputMethodRequests30);
        org.junit.Assert.assertNull(container31);
        org.junit.Assert.assertNull(actionListener35);
        org.junit.Assert.assertNotNull(jToolTip36);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(dimension49);
        org.junit.Assert.assertNotNull(dimension50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(rectangle54);
        org.junit.Assert.assertNotNull(rectangle56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.beans.PropertyChangeListener propertyChangeListener11 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener11);
        boolean boolean13 = managementDashboard5.isPreferredSizeSet();
        managementDashboard5.setToolTipText("");
        java.awt.event.MouseMotionListener mouseMotionListener16 = null;
        managementDashboard5.removeMouseMotionListener(mouseMotionListener16);
        managementDashboard5.layout();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        jToolTip9.setFocusTraversalPolicyProvider(true);
        java.awt.GraphicsConfiguration graphicsConfiguration29 = jToolTip9.getGraphicsConfiguration();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(graphicsConfiguration29);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        java.awt.Rectangle rectangle29 = managementDashboard1.getBounds();
        boolean boolean30 = managementDashboard1.isFocusTraversalPolicyProvider();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertNotNull(rectangle29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.Event event3 = null;
        boolean boolean5 = managementDashboard1.lostFocus(event3, (java.lang.Object) "");
        managementDashboard1.setAutoscrolls(false);
        java.awt.Graphics graphics8 = null;
        managementDashboard1.update(graphics8);
        managementDashboard1.setFocusCycleRoot(false);
        java.awt.Graphics graphics12 = null;
        managementDashboard1.paintComponents(graphics12);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        managementDashboard5.requestFocus();
        java.awt.im.InputMethodRequests inputMethodRequests11 = managementDashboard5.getInputMethodRequests();
        managementDashboard5.setToolTipText("data/managerData.csv");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(inputMethodRequests11);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        PaymentStrategy paymentStrategy0 = null;
        PaymentProcessor paymentProcessor1 = new PaymentProcessor(paymentStrategy0);
        CreditCardPayment creditCardPayment2 = new CreditCardPayment();
        paymentProcessor1.setPaymentStrategy((PaymentStrategy) creditCardPayment2);
        PaymentStrategy paymentStrategy4 = null;
        PaymentProcessor paymentProcessor5 = new PaymentProcessor(paymentStrategy4);
        CreditCardPayment creditCardPayment6 = new CreditCardPayment();
        paymentProcessor5.setPaymentStrategy((PaymentStrategy) creditCardPayment6);
        paymentProcessor1.setPaymentStrategy((PaymentStrategy) creditCardPayment6);
        PaymentProcessor paymentProcessor9 = new PaymentProcessor((PaymentStrategy) creditCardPayment6);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.beans.PropertyChangeListener propertyChangeListener11 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener11);
        boolean boolean13 = managementDashboard5.isPreferredSizeSet();
        managementDashboard5.setToolTipText("");
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener17);
        java.awt.Insets insets19 = null;
        java.awt.Insets insets20 = managementDashboard5.getInsets(insets19);
        MobilePayment mobilePayment21 = new MobilePayment();
        java.lang.Object obj22 = managementDashboard5.getClientProperty((java.lang.Object) mobilePayment21);
        mobilePayment21.pay((double) 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(insets20);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.list();
        javax.swing.plaf.PanelUI panelUI8 = managementDashboard1.getUI();
        java.awt.image.ColorModel colorModel9 = managementDashboard1.getColorModel();
        java.awt.Point point10 = managementDashboard1.location();
        boolean boolean11 = managementDashboard1.isPaintingForPrint();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(panelUI8);
        org.junit.Assert.assertNotNull(colorModel9);
        org.junit.Assert.assertNotNull(point10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        ParkingLot parkingLot1 = new ParkingLot("data/userData.csv");
        ParkingSpace parkingSpace3 = parkingLot1.getSpace(10);
        int int4 = parkingSpace3.getIndex();
        parkingSpace3.empty();
        org.junit.Assert.assertNotNull(parkingSpace3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        javax.swing.event.AncestorListener ancestorListener9 = null;
        managementDashboard1.removeAncestorListener(ancestorListener9);
        java.awt.Dimension dimension11 = managementDashboard1.getPreferredSize();
        java.awt.Dimension dimension12 = managementDashboard1.getPreferredSize();
        java.awt.Point point14 = managementDashboard1.getMousePosition(true);
        java.awt.Color color15 = managementDashboard1.getForeground();
        java.awt.ComponentOrientation componentOrientation16 = managementDashboard1.getComponentOrientation();
        java.awt.event.ActionListener actionListener17 = null;
        javax.swing.KeyStroke keyStroke19 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.registerKeyboardAction(actionListener17, "", keyStroke19, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(dimension11);
        org.junit.Assert.assertNotNull(dimension12);
        org.junit.Assert.assertNull(point14);
        org.junit.Assert.assertNotNull(color15);
        org.junit.Assert.assertNotNull(componentOrientation16);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        managementDashboard1.move((int) (byte) 1, (int) '#');
        boolean boolean7 = managementDashboard1.isFocusTraversable();
        java.awt.event.FocusListener focusListener8 = null;
        managementDashboard1.removeFocusListener(focusListener8);
        java.awt.event.KeyListener[] keyListenerArray10 = managementDashboard1.getKeyListeners();
        java.beans.PropertyChangeListener propertyChangeListener12 = null;
        managementDashboard1.addPropertyChangeListener("123456789", propertyChangeListener12);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(keyListenerArray10);
        org.junit.Assert.assertArrayEquals(keyListenerArray10, new java.awt.event.KeyListener[] {});
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.LayoutManager layoutManager5 = null;
        managementDashboard1.setLayout(layoutManager5);
        java.awt.Color color7 = managementDashboard1.getForeground();
        java.awt.event.ComponentListener[] componentListenerArray8 = managementDashboard1.getComponentListeners();
        java.io.PrintStream printStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.println(Object)\" because \"out\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(color7);
        org.junit.Assert.assertNotNull(componentListenerArray8);
        org.junit.Assert.assertArrayEquals(componentListenerArray8, new java.awt.event.ComponentListener[] {});
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        managementDashboard30.setRequestFocusEnabled(false);
        java.awt.Event event33 = null;
        boolean boolean35 = managementDashboard30.keyUp(event33, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener36 = null;
        managementDashboard30.addInputMethodListener(inputMethodListener36);
        java.awt.Dimension dimension38 = managementDashboard30.getMaximumSize();
        managementDashboard14.setPreferredSize(dimension38);
        java.awt.Dimension dimension40 = managementDashboard14.minimumSize();
        java.util.function.Consumer<java.lang.String> strConsumer42 = null;
        ManagementDashboard managementDashboard43 = new ManagementDashboard(strConsumer42);
        boolean boolean44 = managementDashboard43.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests45 = managementDashboard43.getInputMethodRequests();
        java.awt.Container container46 = managementDashboard43.getTopLevelAncestor();
        java.awt.Color color47 = null;
        managementDashboard43.setForeground(color47);
        java.awt.event.HierarchyListener hierarchyListener49 = null;
        managementDashboard43.addHierarchyListener(hierarchyListener49);
        java.awt.Cursor cursor51 = null;
        managementDashboard43.setCursor(cursor51);
        java.awt.Point point54 = managementDashboard43.getMousePosition(false);
        java.awt.event.ContainerListener containerListener55 = null;
        managementDashboard43.removeContainerListener(containerListener55);
        java.awt.Color color57 = managementDashboard43.getBackground();
        float float58 = managementDashboard43.getAlignmentX();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component59 = managementDashboard14.add("", (java.awt.Component) managementDashboard43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: cannot add to layout: unknown constraint: ");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(dimension38);
        org.junit.Assert.assertNotNull(dimension40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(inputMethodRequests45);
        org.junit.Assert.assertNull(container46);
        org.junit.Assert.assertNull(point54);
        org.junit.Assert.assertNotNull(color57);
        org.junit.Assert.assertTrue("'" + float58 + "' != '" + 0.5f + "'", float58 == 0.5f);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        managementDashboard1.move((int) (byte) 0, 8);
        java.awt.Event event12 = null;
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests16 = managementDashboard14.getInputMethodRequests();
        java.awt.Container container17 = managementDashboard14.getTopLevelAncestor();
        boolean boolean18 = managementDashboard1.gotFocus(event12, (java.lang.Object) container17);
        javax.swing.JRootPane jRootPane19 = managementDashboard1.getRootPane();
        java.io.PrintStream printStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream20, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.println(Object)\" because \"out\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(inputMethodRequests16);
        org.junit.Assert.assertNull(container17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(jRootPane19);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.event.ComponentListener componentListener7 = null;
        managementDashboard1.removeComponentListener(componentListener7);
        managementDashboard1.setDebugGraphicsOptions((int) (short) 100);
        java.awt.Graphics graphics11 = null;
        managementDashboard1.update(graphics11);
        java.awt.Component component15 = managementDashboard1.getComponentAt((int) (short) 1, 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(component15);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.event.ComponentListener componentListener4 = null;
        managementDashboard1.removeComponentListener(componentListener4);
        javax.swing.InputMap inputMap6 = managementDashboard1.getInputMap();
        java.awt.Component component9 = managementDashboard1.getComponentAt((int) (short) 1, (int) 'a');
        boolean boolean11 = managementDashboard1.areFocusTraversalKeysSet((int) (byte) 1);
        org.junit.Assert.assertNotNull(inputMap6);
        org.junit.Assert.assertNull(component9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseDrag(event6, (int) (short) 10, 4);
        javax.swing.JPopupMenu jPopupMenu10 = managementDashboard1.getComponentPopupMenu();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = jPopupMenu10.isShowing();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(jPopupMenu10);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.beans.PropertyChangeListener propertyChangeListener11 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener11);
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests16 = managementDashboard14.getInputMethodRequests();
        java.awt.Container container17 = managementDashboard14.getTopLevelAncestor();
        java.awt.Color color18 = null;
        managementDashboard14.setForeground(color18);
        java.awt.Container container20 = managementDashboard14.getFocusCycleRootAncestor();
        java.awt.Component component21 = managementDashboard5.add((java.awt.Component) managementDashboard14);
        managementDashboard14.setLocation(64, 64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(inputMethodRequests16);
        org.junit.Assert.assertNull(container17);
        org.junit.Assert.assertNull(container20);
        org.junit.Assert.assertNotNull(component21);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        managementDashboard1.move((int) (byte) 0, 8);
        managementDashboard1.reshape((int) (byte) 0, 2, (int) '#', 0);
        java.awt.Component component19 = managementDashboard1.locate((int) (byte) -1, 100);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(component19);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        managementDashboard1.setName("");
        managementDashboard1.doLayout();
        managementDashboard1.repaint();
        boolean boolean8 = managementDashboard1.isForegroundSet();
        java.lang.String str9 = managementDashboard1.toString();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=8388617,maximumSize=,minimumSize=,preferredSize=]" + "'", str9, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=8388617,maximumSize=,minimumSize=,preferredSize=]");
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.beans.PropertyChangeListener propertyChangeListener11 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener11);
        boolean boolean13 = managementDashboard5.isPreferredSizeSet();
        managementDashboard5.setToolTipText("");
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener17);
        java.util.function.Consumer<java.lang.String> strConsumer19 = null;
        ManagementDashboard managementDashboard20 = new ManagementDashboard(strConsumer19);
        boolean boolean21 = managementDashboard20.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests22 = managementDashboard20.getInputMethodRequests();
        java.awt.Container container23 = managementDashboard20.getTopLevelAncestor();
        java.awt.Color color24 = null;
        managementDashboard20.setForeground(color24);
        managementDashboard20.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean31 = managementDashboard20.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        managementDashboard33.setRequestFocusEnabled(false);
        java.awt.Event event36 = null;
        boolean boolean38 = managementDashboard33.keyUp(event36, (int) (short) 1);
        managementDashboard33.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener42 = null;
        managementDashboard33.removePropertyChangeListener("", propertyChangeListener42);
        managementDashboard33.doLayout();
        javax.swing.JPopupMenu jPopupMenu45 = managementDashboard33.getComponentPopupMenu();
        java.awt.Component component47 = managementDashboard20.add((java.awt.Component) managementDashboard33, 1);
        java.util.function.Consumer<java.lang.String> strConsumer48 = null;
        ManagementDashboard managementDashboard49 = new ManagementDashboard(strConsumer48);
        managementDashboard49.setRequestFocusEnabled(false);
        java.awt.Event event52 = null;
        boolean boolean54 = managementDashboard49.keyUp(event52, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener55 = null;
        managementDashboard49.addInputMethodListener(inputMethodListener55);
        java.awt.Dimension dimension57 = managementDashboard49.getMaximumSize();
        managementDashboard33.setPreferredSize(dimension57);
        managementDashboard33.firePropertyChange("data/managerData.csv", ' ', ' ');
        java.awt.ComponentOrientation componentOrientation63 = managementDashboard33.getComponentOrientation();
        managementDashboard5.setComponentOrientation(componentOrientation63);
        java.awt.Graphics graphics65 = null;
        managementDashboard5.printAll(graphics65);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(inputMethodRequests22);
        org.junit.Assert.assertNull(container23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(jPopupMenu45);
        org.junit.Assert.assertNotNull(component47);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(dimension57);
        org.junit.Assert.assertNotNull(componentOrientation63);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard1.removePropertyChangeListener("", propertyChangeListener10);
        managementDashboard1.doLayout();
        javax.swing.JPopupMenu jPopupMenu13 = managementDashboard1.getComponentPopupMenu();
        java.awt.event.HierarchyListener hierarchyListener14 = null;
        managementDashboard1.removeHierarchyListener(hierarchyListener14);
        managementDashboard1.nextFocus();
        boolean boolean17 = javax.swing.JComponent.isLightweightComponent((java.awt.Component) managementDashboard1);
        boolean boolean18 = managementDashboard1.isMaximumSizeSet();
        managementDashboard1.firePropertyChange("hi!", (long) ' ', (long) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(jPopupMenu13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        boolean boolean27 = managementDashboard12.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener29 = null;
        managementDashboard12.addPropertyChangeListener("ToolTipText", propertyChangeListener29);
        java.awt.Component[] componentArray31 = managementDashboard12.getComponents();
        java.awt.Font font32 = null;
        managementDashboard12.setFont(font32);
        managementDashboard12.setVisible(true);
        java.lang.Object obj36 = managementDashboard12.getTreeLock();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(componentArray31);
        org.junit.Assert.assertNotNull(obj36);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.LayoutManager layoutManager5 = null;
        managementDashboard1.setLayout(layoutManager5);
        boolean boolean7 = managementDashboard1.getFocusTraversalKeysEnabled();
        managementDashboard1.removeNotify();
        java.util.function.Consumer<java.lang.String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        boolean boolean11 = managementDashboard10.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests12 = managementDashboard10.getInputMethodRequests();
        java.awt.Container container13 = managementDashboard10.getTopLevelAncestor();
        java.awt.Color color14 = null;
        managementDashboard10.setForeground(color14);
        managementDashboard10.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean21 = managementDashboard10.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        managementDashboard23.setRequestFocusEnabled(false);
        java.awt.Event event26 = null;
        boolean boolean28 = managementDashboard23.keyUp(event26, (int) (short) 1);
        managementDashboard23.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener32 = null;
        managementDashboard23.removePropertyChangeListener("", propertyChangeListener32);
        managementDashboard23.doLayout();
        javax.swing.JPopupMenu jPopupMenu35 = managementDashboard23.getComponentPopupMenu();
        java.awt.Component component37 = managementDashboard10.add((java.awt.Component) managementDashboard23, 1);
        java.util.function.Consumer<java.lang.String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        managementDashboard39.setRequestFocusEnabled(false);
        java.awt.Event event42 = null;
        boolean boolean44 = managementDashboard39.keyUp(event42, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener45 = null;
        managementDashboard39.addInputMethodListener(inputMethodListener45);
        java.awt.Dimension dimension47 = managementDashboard39.getMaximumSize();
        managementDashboard23.setPreferredSize(dimension47);
        managementDashboard23.firePropertyChange("data/managerData.csv", ' ', ' ');
        java.util.function.Consumer<java.lang.String> strConsumer53 = null;
        ManagementDashboard managementDashboard54 = new ManagementDashboard(strConsumer53);
        managementDashboard54.setRequestFocusEnabled(false);
        java.awt.Event event57 = null;
        boolean boolean59 = managementDashboard54.keyUp(event57, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener60 = null;
        managementDashboard54.addInputMethodListener(inputMethodListener60);
        java.awt.image.VolatileImage volatileImage64 = managementDashboard54.createVolatileImage((int) (short) 0, 1);
        boolean boolean65 = managementDashboard54.isOptimizedDrawingEnabled();
        javax.swing.ActionMap actionMap66 = managementDashboard54.getActionMap();
        managementDashboard23.setActionMap(actionMap66);
        managementDashboard1.setActionMap(actionMap66);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(inputMethodRequests12);
        org.junit.Assert.assertNull(container13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(jPopupMenu35);
        org.junit.Assert.assertNotNull(component37);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(dimension47);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(volatileImage64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(actionMap66);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        boolean boolean27 = managementDashboard12.isOpaque();
        managementDashboard12.addNotify();
        boolean boolean30 = managementDashboard12.requestFocus(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        managementDashboard1.move((int) (byte) 1, (int) '#');
        managementDashboard1.layout();
        managementDashboard1.setEnabled(false);
        int int10 = managementDashboard1.getY();
        managementDashboard1.setName("Empty");
        java.io.PrintStream printStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.println(Object)\" because \"out\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 35 + "'", int10 == 35);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard1.removePropertyChangeListener("", propertyChangeListener10);
        managementDashboard1.doLayout();
        javax.swing.JPopupMenu jPopupMenu13 = managementDashboard1.getComponentPopupMenu();
        java.awt.event.HierarchyListener hierarchyListener14 = null;
        managementDashboard1.removeHierarchyListener(hierarchyListener14);
        managementDashboard1.nextFocus();
        java.awt.Graphics graphics17 = null;
        managementDashboard1.paintAll(graphics17);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(jPopupMenu13);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        managementDashboard1.enable();
        managementDashboard1.list();
        java.awt.event.MouseEvent mouseEvent6 = null;
        java.awt.Point point7 = managementDashboard1.getPopupLocation(mouseEvent6);
        java.awt.Insets insets8 = managementDashboard1.insets();
        managementDashboard1.firePropertyChange("data/parkingSpaceData.csv", (double) 8, (double) 128);
        org.junit.Assert.assertNull(point7);
        org.junit.Assert.assertNotNull(insets8);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        javax.swing.event.AncestorListener ancestorListener9 = null;
        managementDashboard1.removeAncestorListener(ancestorListener9);
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy15 = null;
        managementDashboard12.setFocusTraversalPolicy(focusTraversalPolicy15);
        java.awt.Event event17 = null;
        boolean boolean20 = managementDashboard12.mouseDrag(event17, (int) (short) 10, 4);
        managementDashboard12.setEnabled(true);
        java.awt.Component component23 = managementDashboard1.add((java.awt.Component) managementDashboard12);
        java.awt.Event event24 = null;
        java.lang.Object obj25 = null;
        boolean boolean26 = managementDashboard1.action(event24, obj25);
        java.awt.Event event27 = null;
        boolean boolean29 = managementDashboard1.keyDown(event27, (int) (short) -1);
        javax.swing.InputVerifier inputVerifier30 = managementDashboard1.getInputVerifier();
        managementDashboard1.doLayout();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(component23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(inputVerifier30);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.awt.event.ContainerListener containerListener10 = null;
        managementDashboard5.addContainerListener(containerListener10);
        java.awt.ImageCapabilities imageCapabilities14 = null;
        java.awt.image.VolatileImage volatileImage15 = managementDashboard5.createVolatileImage((int) '#', (int) (short) -1, imageCapabilities14);
        java.awt.Container container16 = managementDashboard5.getParent();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(volatileImage15);
        org.junit.Assert.assertNull(container16);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener5 = null;
        managementDashboard1.removeContainerListener(containerListener5);
        managementDashboard1.firePropertyChange("data/userData.csv", (short) (byte) 0, (short) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.awt.event.ContainerListener containerListener10 = null;
        managementDashboard5.addContainerListener(containerListener10);
        managementDashboard5.transferFocusBackward();
        int int13 = managementDashboard5.getDebugGraphicsOptions();
        managementDashboard5.move((int) (short) 10, (int) (byte) 10);
        java.awt.Dimension dimension17 = managementDashboard5.preferredSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(dimension17);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        UserDashboard userDashboard1 = new UserDashboard(strConsumer0);
        userDashboard1.transferFocusDownCycle();
        java.awt.Event event3 = null;
        boolean boolean5 = userDashboard1.keyUp(event3, (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        java.lang.Object obj14 = managementDashboard1.getClientProperty((java.lang.Object) managementDashboard9);
        java.util.function.Consumer<java.lang.String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        managementDashboard16.setRequestFocusEnabled(false);
        java.awt.Event event19 = null;
        boolean boolean21 = managementDashboard16.keyUp(event19, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener22 = null;
        managementDashboard16.addInputMethodListener(inputMethodListener22);
        java.awt.Dimension dimension24 = managementDashboard16.getMaximumSize();
        int int25 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard16);
        java.awt.Component component26 = managementDashboard1.getNextFocusableComponent();
        java.awt.Insets insets27 = managementDashboard1.insets();
        java.lang.Object obj28 = managementDashboard1.getTreeLock();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(component26);
        org.junit.Assert.assertNotNull(insets27);
        org.junit.Assert.assertNotNull(obj28);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.beans.PropertyChangeListener propertyChangeListener11 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener11);
        boolean boolean13 = managementDashboard5.isPreferredSizeSet();
        managementDashboard5.setToolTipText("");
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener17);
        java.awt.Insets insets19 = null;
        java.awt.Insets insets20 = managementDashboard5.getInsets(insets19);
        MobilePayment mobilePayment21 = new MobilePayment();
        java.lang.Object obj22 = managementDashboard5.getClientProperty((java.lang.Object) mobilePayment21);
        PaymentProcessor paymentProcessor23 = new PaymentProcessor((PaymentStrategy) mobilePayment21);
        mobilePayment21.pay((double) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(insets20);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        managementDashboard1.setRequestFocusEnabled(true);
        java.awt.Font font23 = null;
        managementDashboard1.setFont(font23);
        java.awt.Event event25 = null;
        boolean boolean28 = managementDashboard1.mouseExit(event25, (int) '#', (int) (short) 1);
        java.awt.Font font29 = managementDashboard1.getFont();
        managementDashboard1.setFocusable(false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(font29);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard1.removePropertyChangeListener("", propertyChangeListener10);
        managementDashboard1.doLayout();
        javax.swing.JPopupMenu jPopupMenu13 = managementDashboard1.getComponentPopupMenu();
        java.awt.event.HierarchyListener hierarchyListener14 = null;
        managementDashboard1.removeHierarchyListener(hierarchyListener14);
        javax.swing.event.AncestorListener[] ancestorListenerArray16 = managementDashboard1.getAncestorListeners();
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        boolean boolean19 = managementDashboard18.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests20 = managementDashboard18.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer21 = null;
        ManagementDashboard managementDashboard22 = new ManagementDashboard(strConsumer21);
        managementDashboard22.setInheritsPopupMenu(true);
        boolean boolean25 = managementDashboard22.isValidateRoot();
        int int26 = managementDashboard18.getComponentZOrder((java.awt.Component) managementDashboard22);
        java.beans.PropertyChangeListener propertyChangeListener28 = null;
        managementDashboard22.addPropertyChangeListener("hi!", propertyChangeListener28);
        boolean boolean30 = managementDashboard22.isPreferredSizeSet();
        managementDashboard22.setToolTipText("");
        java.beans.PropertyChangeListener propertyChangeListener34 = null;
        managementDashboard22.addPropertyChangeListener("hi!", propertyChangeListener34);
        java.util.function.Consumer<java.lang.String> strConsumer36 = null;
        ManagementDashboard managementDashboard37 = new ManagementDashboard(strConsumer36);
        boolean boolean38 = managementDashboard37.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests39 = managementDashboard37.getInputMethodRequests();
        java.awt.Container container40 = managementDashboard37.getTopLevelAncestor();
        java.awt.Color color41 = null;
        managementDashboard37.setForeground(color41);
        managementDashboard37.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean48 = managementDashboard37.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer49 = null;
        ManagementDashboard managementDashboard50 = new ManagementDashboard(strConsumer49);
        managementDashboard50.setRequestFocusEnabled(false);
        java.awt.Event event53 = null;
        boolean boolean55 = managementDashboard50.keyUp(event53, (int) (short) 1);
        managementDashboard50.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener59 = null;
        managementDashboard50.removePropertyChangeListener("", propertyChangeListener59);
        managementDashboard50.doLayout();
        javax.swing.JPopupMenu jPopupMenu62 = managementDashboard50.getComponentPopupMenu();
        java.awt.Component component64 = managementDashboard37.add((java.awt.Component) managementDashboard50, 1);
        java.util.function.Consumer<java.lang.String> strConsumer65 = null;
        ManagementDashboard managementDashboard66 = new ManagementDashboard(strConsumer65);
        managementDashboard66.setRequestFocusEnabled(false);
        java.awt.Event event69 = null;
        boolean boolean71 = managementDashboard66.keyUp(event69, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener72 = null;
        managementDashboard66.addInputMethodListener(inputMethodListener72);
        java.awt.Dimension dimension74 = managementDashboard66.getMaximumSize();
        managementDashboard50.setPreferredSize(dimension74);
        managementDashboard50.firePropertyChange("data/managerData.csv", ' ', ' ');
        java.awt.ComponentOrientation componentOrientation80 = managementDashboard50.getComponentOrientation();
        managementDashboard22.setComponentOrientation(componentOrientation80);
        managementDashboard1.setComponentOrientation(componentOrientation80);
        int int83 = managementDashboard1.getDebugGraphicsOptions();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(jPopupMenu13);
        org.junit.Assert.assertNotNull(ancestorListenerArray16);
        org.junit.Assert.assertArrayEquals(ancestorListenerArray16, new javax.swing.event.AncestorListener[] {});
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(inputMethodRequests20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(inputMethodRequests39);
        org.junit.Assert.assertNull(container40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(jPopupMenu62);
        org.junit.Assert.assertNotNull(component64);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(dimension74);
        org.junit.Assert.assertNotNull(componentOrientation80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        int int2 = managementDashboard1.getComponentCount();
        java.util.function.Consumer<java.lang.String> strConsumer3 = null;
        ManagementDashboard managementDashboard4 = new ManagementDashboard(strConsumer3);
        boolean boolean5 = managementDashboard4.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests6 = managementDashboard4.getInputMethodRequests();
        java.awt.Container container7 = managementDashboard4.getTopLevelAncestor();
        java.awt.Color color8 = null;
        managementDashboard4.setForeground(color8);
        javax.swing.KeyStroke keyStroke10 = null;
        java.awt.event.ActionListener actionListener11 = managementDashboard4.getActionForKeyStroke(keyStroke10);
        javax.swing.JToolTip jToolTip12 = managementDashboard4.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setInheritsPopupMenu(true);
        managementDashboard14.setName("");
        managementDashboard14.doLayout();
        java.awt.event.KeyListener keyListener20 = null;
        managementDashboard14.addKeyListener(keyListener20);
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        managementDashboard23.setInheritsPopupMenu(true);
        boolean boolean26 = managementDashboard23.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget27 = null;
        managementDashboard23.setDropTarget(dropTarget27);
        boolean boolean29 = managementDashboard23.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer30 = null;
        ManagementDashboard managementDashboard31 = new ManagementDashboard(strConsumer30);
        managementDashboard31.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy34 = null;
        managementDashboard31.setFocusTraversalPolicy(focusTraversalPolicy34);
        java.lang.Object obj36 = managementDashboard23.getClientProperty((java.lang.Object) managementDashboard31);
        java.util.function.Consumer<java.lang.String> strConsumer37 = null;
        ManagementDashboard managementDashboard38 = new ManagementDashboard(strConsumer37);
        managementDashboard38.setRequestFocusEnabled(false);
        java.awt.Event event41 = null;
        boolean boolean43 = managementDashboard38.keyUp(event41, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener44 = null;
        managementDashboard38.addInputMethodListener(inputMethodListener44);
        java.awt.Dimension dimension46 = managementDashboard38.getMaximumSize();
        int int47 = managementDashboard23.getComponentZOrder((java.awt.Component) managementDashboard38);
        javax.swing.KeyStroke keyStroke48 = null;
        int int49 = managementDashboard23.getConditionForKeyStroke(keyStroke48);
        managementDashboard23.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer51 = null;
        java.awt.Image image52 = managementDashboard23.createImage(imageProducer51);
        java.util.function.Consumer<java.lang.String> strConsumer53 = null;
        ManagementDashboard managementDashboard54 = new ManagementDashboard(strConsumer53);
        managementDashboard54.setRequestFocusEnabled(false);
        java.awt.Event event57 = null;
        boolean boolean59 = managementDashboard54.keyUp(event57, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener60 = null;
        managementDashboard54.addInputMethodListener(inputMethodListener60);
        java.awt.image.VolatileImage volatileImage64 = managementDashboard54.createVolatileImage((int) (short) 0, 1);
        boolean boolean65 = managementDashboard54.isOptimizedDrawingEnabled();
        javax.swing.ActionMap actionMap66 = managementDashboard54.getActionMap();
        int int67 = managementDashboard14.checkImage(image52, (java.awt.image.ImageObserver) managementDashboard54);
        java.util.function.Consumer<java.lang.String> strConsumer68 = null;
        ManagementDashboard managementDashboard69 = new ManagementDashboard(strConsumer68);
        managementDashboard69.setRequestFocusEnabled(false);
        java.awt.Event event72 = null;
        boolean boolean74 = managementDashboard69.keyUp(event72, (int) (short) 1);
        managementDashboard69.list();
        javax.swing.plaf.PanelUI panelUI76 = managementDashboard69.getUI();
        javax.swing.border.Border border77 = null;
        managementDashboard69.setBorder(border77);
        int int79 = jToolTip12.checkImage(image52, (java.awt.image.ImageObserver) managementDashboard69);
        boolean boolean80 = jToolTip12.isPaintingForPrint();
        boolean boolean83 = jToolTip12.contains((int) (short) 0, (int) (short) 10);
        java.awt.dnd.DropTarget dropTarget84 = null;
        jToolTip12.setDropTarget(dropTarget84);
        java.awt.event.MouseListener mouseListener86 = null;
        jToolTip12.addMouseListener(mouseListener86);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component89 = managementDashboard1.add((java.awt.Component) jToolTip12, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: illegal component position");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(inputMethodRequests6);
        org.junit.Assert.assertNull(container7);
        org.junit.Assert.assertNull(actionListener11);
        org.junit.Assert.assertNotNull(jToolTip12);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(dimension46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(image52);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(volatileImage64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(actionMap66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(panelUI76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        UserDashboard userDashboard1 = new UserDashboard(strConsumer0);
        userDashboard1.transferFocusDownCycle();
        int int3 = userDashboard1.getY();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        managementDashboard1.firePropertyChange("Empty", (short) (byte) 100, (short) 10);
        javax.swing.TransferHandler transferHandler13 = null;
        managementDashboard1.setTransferHandler(transferHandler13);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        java.awt.event.HierarchyListener hierarchyListener7 = null;
        managementDashboard1.addHierarchyListener(hierarchyListener7);
        java.awt.Cursor cursor9 = null;
        managementDashboard1.setCursor(cursor9);
        java.awt.Point point12 = managementDashboard1.getMousePosition(false);
        javax.swing.border.Border border13 = managementDashboard1.getBorder();
        java.util.function.Consumer<java.lang.String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        managementDashboard15.setInheritsPopupMenu(true);
        boolean boolean18 = managementDashboard15.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget19 = null;
        managementDashboard15.setDropTarget(dropTarget19);
        java.awt.Dimension dimension21 = null;
        managementDashboard15.setPreferredSize(dimension21);
        javax.swing.event.AncestorListener ancestorListener23 = null;
        managementDashboard15.removeAncestorListener(ancestorListener23);
        java.awt.Dimension dimension25 = managementDashboard15.getPreferredSize();
        managementDashboard15.repaint((long) 1);
        boolean boolean28 = managementDashboard15.isMinimumSizeSet();
        javax.accessibility.AccessibleContext accessibleContext29 = managementDashboard15.getAccessibleContext();
        java.awt.Dimension dimension30 = managementDashboard15.getSize();
        java.util.function.Consumer<java.lang.String> strConsumer31 = null;
        ManagementDashboard managementDashboard32 = new ManagementDashboard(strConsumer31);
        boolean boolean33 = managementDashboard32.isCursorSet();
        java.awt.Dimension dimension34 = managementDashboard32.size();
        managementDashboard15.resize(dimension34);
        managementDashboard1.setPreferredSize(dimension34);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(point12);
        org.junit.Assert.assertNull(border13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(dimension25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(accessibleContext29);
        org.junit.Assert.assertNotNull(dimension30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(dimension34);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener5 = null;
        managementDashboard1.removeContainerListener(containerListener5);
        boolean boolean7 = managementDashboard1.getIgnoreRepaint();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        boolean boolean10 = managementDashboard9.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests11 = managementDashboard9.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        managementDashboard13.setInheritsPopupMenu(true);
        boolean boolean16 = managementDashboard13.isValidateRoot();
        int int17 = managementDashboard9.getComponentZOrder((java.awt.Component) managementDashboard13);
        java.beans.PropertyChangeListener propertyChangeListener19 = null;
        managementDashboard13.addPropertyChangeListener("hi!", propertyChangeListener19);
        boolean boolean21 = managementDashboard13.isPreferredSizeSet();
        managementDashboard13.setToolTipText("");
        java.awt.event.InputMethodListener inputMethodListener24 = null;
        managementDashboard13.removeInputMethodListener(inputMethodListener24);
        java.util.function.Consumer<java.lang.String> strConsumer26 = null;
        ManagementDashboard managementDashboard27 = new ManagementDashboard(strConsumer26);
        managementDashboard27.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy30 = null;
        managementDashboard27.setFocusTraversalPolicy(focusTraversalPolicy30);
        java.awt.Event event32 = null;
        boolean boolean35 = managementDashboard27.mouseDrag(event32, (int) (short) 10, 4);
        java.beans.PropertyChangeListener propertyChangeListener37 = null;
        managementDashboard27.removePropertyChangeListener("hi!", propertyChangeListener37);
        boolean boolean39 = managementDashboard27.isMaximumSizeSet();
        java.awt.Font font40 = managementDashboard27.getFont();
        java.awt.FontMetrics fontMetrics41 = managementDashboard13.getFontMetrics(font40);
        managementDashboard13.setFocusable(false);
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.setComponentZOrder((java.awt.Component) managementDashboard13, 16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: illegal component position");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(inputMethodRequests11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(font40);
        org.junit.Assert.assertNotNull(fontMetrics41);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.LayoutManager layoutManager4 = null;
        managementDashboard1.setLayout(layoutManager4);
        managementDashboard1.setFocusTraversalPolicyProvider(true);
        managementDashboard1.reshape(128, (int) (short) -1, (int) '4', (int) (byte) 100);
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        java.awt.event.InputMethodListener[] inputMethodListenerArray20 = managementDashboard14.getInputMethodListeners();
        boolean boolean23 = managementDashboard14.contains((int) (short) 1, 0);
        java.lang.Object obj24 = managementDashboard1.getClientProperty((java.lang.Object) boolean23);
        java.util.function.Consumer<java.lang.String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        boolean boolean27 = managementDashboard26.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests28 = managementDashboard26.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        managementDashboard30.setInheritsPopupMenu(true);
        boolean boolean33 = managementDashboard30.isValidateRoot();
        int int34 = managementDashboard26.getComponentZOrder((java.awt.Component) managementDashboard30);
        java.awt.Dimension dimension35 = managementDashboard26.size();
        managementDashboard1.setMinimumSize(dimension35);
        java.awt.Component component37 = managementDashboard1.getNextFocusableComponent();
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(inputMethodListenerArray20);
        org.junit.Assert.assertArrayEquals(inputMethodListenerArray20, new java.awt.event.InputMethodListener[] {});
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(inputMethodRequests28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(dimension35);
        org.junit.Assert.assertNull(component37);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        managementDashboard1.setName("");
        managementDashboard1.doLayout();
        java.awt.event.KeyListener keyListener7 = null;
        managementDashboard1.addKeyListener(keyListener7);
        managementDashboard1.setAlignmentX((float) 0L);
        javax.swing.border.Border border11 = null;
        managementDashboard1.setBorder(border11);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        java.awt.Event event9 = null;
        boolean boolean12 = managementDashboard1.mouseExit(event9, (int) 'a', (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests16 = managementDashboard14.getInputMethodRequests();
        java.awt.Container container17 = managementDashboard14.getTopLevelAncestor();
        java.awt.Color color18 = null;
        managementDashboard14.setForeground(color18);
        javax.swing.KeyStroke keyStroke20 = null;
        java.awt.event.ActionListener actionListener21 = managementDashboard14.getActionForKeyStroke(keyStroke20);
        javax.swing.JToolTip jToolTip22 = managementDashboard14.createToolTip();
        java.awt.Event event23 = null;
        java.util.function.Consumer<java.lang.String> strConsumer24 = null;
        ManagementDashboard managementDashboard25 = new ManagementDashboard(strConsumer24);
        managementDashboard25.setInheritsPopupMenu(true);
        boolean boolean28 = managementDashboard25.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget29 = null;
        managementDashboard25.setDropTarget(dropTarget29);
        java.awt.Dimension dimension31 = null;
        managementDashboard25.setPreferredSize(dimension31);
        javax.swing.event.AncestorListener ancestorListener33 = null;
        managementDashboard25.removeAncestorListener(ancestorListener33);
        java.awt.Dimension dimension35 = managementDashboard25.getPreferredSize();
        java.awt.Dimension dimension36 = managementDashboard25.getPreferredSize();
        managementDashboard25.setDebugGraphicsOptions(10);
        boolean boolean39 = jToolTip22.lostFocus(event23, (java.lang.Object) managementDashboard25);
        java.awt.Rectangle rectangle40 = jToolTip22.bounds();
        managementDashboard1.computeVisibleRect(rectangle40);
        javax.swing.TransferHandler transferHandler42 = managementDashboard1.getTransferHandler();
        managementDashboard1.setRequestFocusEnabled(false);
        java.util.function.Consumer<java.lang.String> strConsumer45 = null;
        ManagementDashboard managementDashboard46 = new ManagementDashboard(strConsumer45);
        managementDashboard46.setInheritsPopupMenu(true);
        boolean boolean49 = managementDashboard46.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget50 = null;
        managementDashboard46.setDropTarget(dropTarget50);
        boolean boolean52 = managementDashboard46.getAutoscrolls();
        java.awt.event.KeyListener[] keyListenerArray53 = managementDashboard46.getKeyListeners();
        managementDashboard1.setNextFocusableComponent((java.awt.Component) managementDashboard46);
        boolean boolean55 = managementDashboard46.isManagingFocus();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(inputMethodRequests16);
        org.junit.Assert.assertNull(container17);
        org.junit.Assert.assertNull(actionListener21);
        org.junit.Assert.assertNotNull(jToolTip22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(dimension35);
        org.junit.Assert.assertNotNull(dimension36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(rectangle40);
        org.junit.Assert.assertNull(transferHandler42);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(keyListenerArray53);
        org.junit.Assert.assertArrayEquals(keyListenerArray53, new java.awt.event.KeyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Component component4 = managementDashboard1.getNextFocusableComponent();
        javax.swing.TransferHandler transferHandler5 = managementDashboard1.getTransferHandler();
        java.awt.Dimension dimension6 = managementDashboard1.getSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(component4);
        org.junit.Assert.assertNull(transferHandler5);
        org.junit.Assert.assertNotNull(dimension6);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.beans.PropertyChangeListener propertyChangeListener11 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener11);
        boolean boolean13 = managementDashboard5.isPreferredSizeSet();
        managementDashboard5.setToolTipText("");
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener17);
        managementDashboard5.repaint((long) (-1));
        java.awt.event.ComponentListener componentListener21 = null;
        managementDashboard5.addComponentListener(componentListener21);
        float float23 = managementDashboard5.getAlignmentX();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 0.5f + "'", float23 == 0.5f);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        jToolTip9.setFocusTraversalPolicyProvider(true);
        javax.swing.JPopupMenu jPopupMenu29 = jToolTip9.getComponentPopupMenu();
        // The following exception was thrown during execution in test generation
        try {
            jPopupMenu29.paintImmediately(35, 0, 0, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(jPopupMenu29);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setRequestFocusEnabled(false);
        java.awt.Event event14 = null;
        boolean boolean16 = managementDashboard11.keyUp(event14, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        managementDashboard18.setRequestFocusEnabled(false);
        java.awt.Event event21 = null;
        boolean boolean23 = managementDashboard18.keyUp(event21, (int) (short) 1);
        managementDashboard18.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener27 = null;
        managementDashboard18.removePropertyChangeListener("", propertyChangeListener27);
        java.awt.Dimension dimension29 = managementDashboard18.getPreferredSize();
        managementDashboard11.setSize(dimension29);
        managementDashboard1.setMinimumSize(dimension29);
        java.util.function.Consumer<java.lang.String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        managementDashboard33.setRequestFocusEnabled(false);
        java.awt.Event event36 = null;
        boolean boolean38 = managementDashboard33.keyUp(event36, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener39 = null;
        managementDashboard33.addInputMethodListener(inputMethodListener39);
        boolean boolean41 = managementDashboard33.isValidateRoot();
        boolean boolean42 = managementDashboard1.isFocusCycleRoot((java.awt.Container) managementDashboard33);
        boolean boolean43 = managementDashboard1.isForegroundSet();
        managementDashboard1.hide();
        int int47 = managementDashboard1.getBaseline((int) (byte) 10, (int) (short) 0);
        java.util.function.Consumer<java.lang.String> strConsumer48 = null;
        ManagementDashboard managementDashboard49 = new ManagementDashboard(strConsumer48);
        boolean boolean50 = managementDashboard49.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests51 = managementDashboard49.getInputMethodRequests();
        managementDashboard49.move((int) (byte) 1, (int) '#');
        boolean boolean55 = managementDashboard49.isFocusTraversable();
        java.util.function.Consumer<java.lang.String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        managementDashboard57.setRequestFocusEnabled(false);
        managementDashboard57.enable();
        managementDashboard57.list();
        java.awt.Point point62 = managementDashboard57.location();
        boolean boolean63 = managementDashboard49.contains(point62);
        java.awt.Point point64 = managementDashboard1.getLocation(point62);
        managementDashboard1.show();
        int int68 = managementDashboard1.getBaseline(100, (int) 'a');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(dimension29);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(inputMethodRequests51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(point62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(point64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        boolean boolean12 = managementDashboard11.isCursorSet();
        java.awt.Event event13 = null;
        boolean boolean15 = managementDashboard11.lostFocus(event13, (java.lang.Object) "");
        java.util.function.Consumer<java.lang.String> strConsumer16 = null;
        ManagementDashboard managementDashboard17 = new ManagementDashboard(strConsumer16);
        managementDashboard17.setRequestFocusEnabled(false);
        java.awt.Event event20 = null;
        boolean boolean22 = managementDashboard17.keyUp(event20, (int) (short) 1);
        managementDashboard17.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray25 = managementDashboard17.getHierarchyListeners();
        jToolTip9.add((java.awt.Component) managementDashboard11, (java.lang.Object) hierarchyListenerArray25);
        java.util.function.Consumer<java.lang.String> strConsumer27 = null;
        ManagementDashboard managementDashboard28 = new ManagementDashboard(strConsumer27);
        managementDashboard28.setInheritsPopupMenu(true);
        boolean boolean31 = managementDashboard28.isValidateRoot();
        boolean boolean32 = managementDashboard11.isFocusCycleRoot((java.awt.Container) managementDashboard28);
        java.awt.LayoutManager layoutManager33 = managementDashboard28.getLayout();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray25);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray25, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(layoutManager33);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        managementDashboard1.move((int) (byte) 1, (int) '#');
        managementDashboard1.layout();
        managementDashboard1.setEnabled(false);
        boolean boolean10 = managementDashboard1.isFontSet();
        java.lang.String str11 = managementDashboard1.getToolTipText();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        java.awt.event.HierarchyListener hierarchyListener7 = null;
        managementDashboard1.addHierarchyListener(hierarchyListener7);
        java.awt.Cursor cursor9 = null;
        managementDashboard1.setCursor(cursor9);
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        boolean boolean13 = managementDashboard12.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests14 = managementDashboard12.getInputMethodRequests();
        java.awt.Container container15 = managementDashboard12.getTopLevelAncestor();
        java.awt.Color color16 = null;
        managementDashboard12.setForeground(color16);
        javax.swing.KeyStroke keyStroke18 = null;
        java.awt.event.ActionListener actionListener19 = managementDashboard12.getActionForKeyStroke(keyStroke18);
        javax.swing.JToolTip jToolTip20 = managementDashboard12.createToolTip();
        java.awt.Event event21 = null;
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        managementDashboard23.setInheritsPopupMenu(true);
        boolean boolean26 = managementDashboard23.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget27 = null;
        managementDashboard23.setDropTarget(dropTarget27);
        java.awt.Dimension dimension29 = null;
        managementDashboard23.setPreferredSize(dimension29);
        javax.swing.event.AncestorListener ancestorListener31 = null;
        managementDashboard23.removeAncestorListener(ancestorListener31);
        java.awt.Dimension dimension33 = managementDashboard23.getPreferredSize();
        java.awt.Dimension dimension34 = managementDashboard23.getPreferredSize();
        managementDashboard23.setDebugGraphicsOptions(10);
        boolean boolean37 = jToolTip20.lostFocus(event21, (java.lang.Object) managementDashboard23);
        java.awt.Rectangle rectangle38 = jToolTip20.bounds();
        managementDashboard1.setMixingCutoutShape((java.awt.Shape) rectangle38);
        java.util.function.Consumer<java.lang.String> strConsumer40 = null;
        ManagementDashboard managementDashboard41 = new ManagementDashboard(strConsumer40);
        java.awt.event.MouseMotionListener mouseMotionListener42 = null;
        managementDashboard41.addMouseMotionListener(mouseMotionListener42);
        boolean boolean44 = managementDashboard1.isFocusCycleRoot((java.awt.Container) managementDashboard41);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inputMethodRequests14);
        org.junit.Assert.assertNull(container15);
        org.junit.Assert.assertNull(actionListener19);
        org.junit.Assert.assertNotNull(jToolTip20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(dimension33);
        org.junit.Assert.assertNotNull(dimension34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(rectangle38);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        boolean boolean9 = managementDashboard1.isValidateRoot();
        managementDashboard1.setFocusCycleRoot(false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.Event event3 = null;
        boolean boolean5 = managementDashboard1.lostFocus(event3, (java.lang.Object) "");
        managementDashboard1.setAutoscrolls(false);
        java.awt.Graphics graphics8 = null;
        managementDashboard1.update(graphics8);
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setInheritsPopupMenu(true);
        boolean boolean14 = managementDashboard11.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget15 = null;
        managementDashboard11.setDropTarget(dropTarget15);
        boolean boolean17 = managementDashboard11.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        managementDashboard19.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy22 = null;
        managementDashboard19.setFocusTraversalPolicy(focusTraversalPolicy22);
        java.lang.Object obj24 = managementDashboard11.getClientProperty((java.lang.Object) managementDashboard19);
        java.util.function.Consumer<java.lang.String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        managementDashboard26.setRequestFocusEnabled(false);
        java.awt.Event event29 = null;
        boolean boolean31 = managementDashboard26.keyUp(event29, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener32 = null;
        managementDashboard26.addInputMethodListener(inputMethodListener32);
        java.awt.Dimension dimension34 = managementDashboard26.getMaximumSize();
        int int35 = managementDashboard11.getComponentZOrder((java.awt.Component) managementDashboard26);
        javax.swing.KeyStroke keyStroke36 = null;
        int int37 = managementDashboard11.getConditionForKeyStroke(keyStroke36);
        managementDashboard11.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer39 = null;
        java.awt.Image image40 = managementDashboard11.createImage(imageProducer39);
        boolean boolean46 = managementDashboard1.imageUpdate(image40, (int) (byte) 10, (int) (short) 10, 4, (int) (short) 0, 2);
        managementDashboard1.enableInputMethods(false);
        java.util.function.Consumer<java.lang.String> strConsumer49 = null;
        ManagementDashboard managementDashboard50 = new ManagementDashboard(strConsumer49);
        managementDashboard50.setRequestFocusEnabled(false);
        java.awt.Event event53 = null;
        boolean boolean55 = managementDashboard50.keyUp(event53, (int) (short) 1);
        java.lang.String str56 = managementDashboard50.toString();
        managementDashboard50.setOpaque(true);
        managementDashboard1.remove((java.awt.Component) managementDashboard50);
        managementDashboard50.repaint();
        javax.swing.plaf.PanelUI panelUI61 = managementDashboard50.getUI();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(dimension34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(image40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]" + "'", str56, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertNotNull(panelUI61);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        java.lang.Object obj14 = managementDashboard1.getClientProperty((java.lang.Object) managementDashboard9);
        java.util.function.Consumer<java.lang.String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        managementDashboard16.setRequestFocusEnabled(false);
        java.awt.Event event19 = null;
        boolean boolean21 = managementDashboard16.keyUp(event19, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener22 = null;
        managementDashboard16.addInputMethodListener(inputMethodListener22);
        java.awt.Dimension dimension24 = managementDashboard16.getMaximumSize();
        int int25 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard16);
        java.awt.Component component26 = managementDashboard1.getNextFocusableComponent();
        java.awt.Insets insets27 = managementDashboard1.insets();
        java.beans.PropertyChangeListener[] propertyChangeListenerArray29 = managementDashboard1.getPropertyChangeListeners("data/lotData.csv");
        java.awt.Event event30 = null;
        boolean boolean32 = managementDashboard1.keyUp(event30, 64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(component26);
        org.junit.Assert.assertNotNull(insets27);
        org.junit.Assert.assertNotNull(propertyChangeListenerArray29);
        org.junit.Assert.assertArrayEquals(propertyChangeListenerArray29, new java.beans.PropertyChangeListener[] {});
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.LayoutManager layoutManager4 = null;
        managementDashboard1.setLayout(layoutManager4);
        javax.swing.JPopupMenu jPopupMenu6 = managementDashboard1.getComponentPopupMenu();
        org.junit.Assert.assertNull(jPopupMenu6);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        managementDashboard1.setRequestFocusEnabled(true);
        managementDashboard1.addNotify();
        managementDashboard1.firePropertyChange("hi!", (byte) -1, (byte) 100);
        managementDashboard1.setRequestFocusEnabled(true);
        boolean boolean30 = managementDashboard1.isLightweight();
        managementDashboard1.setFocusCycleRoot(true);
        java.beans.PropertyChangeListener propertyChangeListener34 = null;
        managementDashboard1.removePropertyChangeListener("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]", propertyChangeListener34);
        boolean boolean36 = managementDashboard1.isFocusable();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.awt.event.ContainerListener containerListener10 = null;
        managementDashboard5.addContainerListener(containerListener10);
        managementDashboard5.transferFocusBackward();
        java.awt.event.HierarchyBoundsListener[] hierarchyBoundsListenerArray13 = managementDashboard5.getHierarchyBoundsListeners();
        java.awt.event.InputMethodListener inputMethodListener14 = null;
        managementDashboard5.addInputMethodListener(inputMethodListener14);
        java.awt.Rectangle rectangle16 = managementDashboard5.getBounds();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(hierarchyBoundsListenerArray13);
        org.junit.Assert.assertArrayEquals(hierarchyBoundsListenerArray13, new java.awt.event.HierarchyBoundsListener[] {});
        org.junit.Assert.assertNotNull(rectangle16);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        javax.swing.JToolTip jToolTip6 = managementDashboard1.createToolTip();
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        jToolTip6.addInputMethodListener(inputMethodListener7);
        org.junit.Assert.assertNotNull(jToolTip6);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.awt.event.ContainerListener containerListener10 = null;
        managementDashboard5.addContainerListener(containerListener10);
        managementDashboard5.transferFocusBackward();
        java.awt.event.HierarchyBoundsListener[] hierarchyBoundsListenerArray13 = managementDashboard5.getHierarchyBoundsListeners();
        java.awt.Event event14 = null;
        boolean boolean17 = managementDashboard5.mouseDown(event14, (int) (byte) -1, (int) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(hierarchyBoundsListenerArray13);
        org.junit.Assert.assertArrayEquals(hierarchyBoundsListenerArray13, new java.awt.event.HierarchyBoundsListener[] {});
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.LayoutManager layoutManager4 = null;
        managementDashboard1.setLayout(layoutManager4);
        managementDashboard1.setFocusTraversalPolicyProvider(true);
        java.awt.Dimension dimension8 = managementDashboard1.getMaximumSize();
        java.util.function.Consumer<java.lang.String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        managementDashboard10.setRequestFocusEnabled(false);
        java.awt.Event event13 = null;
        boolean boolean15 = managementDashboard10.keyUp(event13, (int) (short) 1);
        managementDashboard10.list();
        javax.swing.plaf.PanelUI panelUI17 = managementDashboard10.getUI();
        managementDashboard1.setUI(panelUI17);
        java.lang.Class<?> wildcardClass19 = managementDashboard1.getClass();
        org.junit.Assert.assertNotNull(dimension8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(panelUI17);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        managementDashboard30.setRequestFocusEnabled(false);
        java.awt.Event event33 = null;
        boolean boolean35 = managementDashboard30.keyUp(event33, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener36 = null;
        managementDashboard30.addInputMethodListener(inputMethodListener36);
        java.awt.Dimension dimension38 = managementDashboard30.getMaximumSize();
        managementDashboard14.setPreferredSize(dimension38);
        managementDashboard14.firePropertyChange("data/managerData.csv", ' ', ' ');
        java.util.function.Consumer<java.lang.String> strConsumer44 = null;
        ManagementDashboard managementDashboard45 = new ManagementDashboard(strConsumer44);
        managementDashboard45.setRequestFocusEnabled(false);
        java.awt.Event event48 = null;
        boolean boolean50 = managementDashboard45.keyUp(event48, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener51 = null;
        managementDashboard45.addInputMethodListener(inputMethodListener51);
        java.awt.image.VolatileImage volatileImage55 = managementDashboard45.createVolatileImage((int) (short) 0, 1);
        boolean boolean56 = managementDashboard45.isOptimizedDrawingEnabled();
        javax.swing.ActionMap actionMap57 = managementDashboard45.getActionMap();
        managementDashboard14.setActionMap(actionMap57);
        javax.swing.ActionMap actionMap59 = managementDashboard14.getActionMap();
        java.awt.Graphics graphics60 = managementDashboard14.getGraphics();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(dimension38);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(volatileImage55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(actionMap57);
        org.junit.Assert.assertNotNull(actionMap59);
        org.junit.Assert.assertNull(graphics60);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.beans.PropertyChangeListener propertyChangeListener11 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener11);
        boolean boolean13 = managementDashboard5.isPreferredSizeSet();
        managementDashboard5.setToolTipText("");
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener17);
        java.awt.Insets insets19 = null;
        java.awt.Insets insets20 = managementDashboard5.getInsets(insets19);
        java.util.function.Consumer<java.lang.String> strConsumer21 = null;
        ManagementDashboard managementDashboard22 = new ManagementDashboard(strConsumer21);
        managementDashboard22.setRequestFocusEnabled(false);
        java.awt.Event event25 = null;
        boolean boolean27 = managementDashboard22.keyUp(event25, (int) (short) 1);
        managementDashboard22.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray30 = managementDashboard22.getHierarchyListeners();
        java.awt.event.KeyListener keyListener31 = null;
        managementDashboard22.addKeyListener(keyListener31);
        java.awt.Cursor cursor33 = managementDashboard22.getCursor();
        managementDashboard5.setCursor(cursor33);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(insets20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray30);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray30, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertNotNull(cursor33);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        managementDashboard30.setRequestFocusEnabled(false);
        java.awt.Event event33 = null;
        boolean boolean35 = managementDashboard30.keyUp(event33, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener36 = null;
        managementDashboard30.addInputMethodListener(inputMethodListener36);
        java.awt.Dimension dimension38 = managementDashboard30.getMaximumSize();
        managementDashboard14.setPreferredSize(dimension38);
        managementDashboard14.firePropertyChange("data/managerData.csv", ' ', ' ');
        java.awt.Graphics graphics44 = null;
        managementDashboard14.printComponents(graphics44);
        boolean boolean46 = managementDashboard14.isFocusTraversalPolicyProvider();
        boolean boolean47 = managementDashboard14.isPreferredSizeSet();
        java.lang.String str48 = managementDashboard14.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(dimension38);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=37748745,maximumSize=,minimumSize=,preferredSize=java.awt.Dimension[width=2147483647,height=2147483647]]" + "'", str48, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=37748745,maximumSize=,minimumSize=,preferredSize=java.awt.Dimension[width=2147483647,height=2147483647]]");
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        managementDashboard1.move((int) (byte) 0, 8);
        java.awt.Event event12 = null;
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests16 = managementDashboard14.getInputMethodRequests();
        java.awt.Container container17 = managementDashboard14.getTopLevelAncestor();
        boolean boolean18 = managementDashboard1.gotFocus(event12, (java.lang.Object) container17);
        managementDashboard1.hide();
        java.awt.Container container20 = managementDashboard1.getTopLevelAncestor();
        java.awt.event.MouseEvent mouseEvent21 = null;
        java.lang.String str22 = managementDashboard1.getToolTipText(mouseEvent21);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(inputMethodRequests16);
        org.junit.Assert.assertNull(container17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(container20);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        boolean boolean27 = managementDashboard12.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener29 = null;
        managementDashboard12.addPropertyChangeListener("ToolTipText", propertyChangeListener29);
        java.awt.Component[] componentArray31 = managementDashboard12.getComponents();
        java.awt.Font font32 = null;
        managementDashboard12.setFont(font32);
        javax.swing.plaf.PanelUI panelUI34 = managementDashboard12.getUI();
        boolean boolean35 = managementDashboard12.isRequestFocusEnabled();
        java.awt.event.HierarchyListener hierarchyListener36 = null;
        managementDashboard12.removeHierarchyListener(hierarchyListener36);
        managementDashboard12.setSize(4, (int) (short) 100);
        managementDashboard12.firePropertyChange("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=8388617,maximumSize=,minimumSize=,preferredSize=]", (byte) 1, (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(componentArray31);
        org.junit.Assert.assertNotNull(panelUI34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        managementDashboard1.setRequestFocusEnabled(true);
        managementDashboard1.addNotify();
        int int24 = managementDashboard1.getX();
        managementDashboard1.hide();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        ParkingLot parkingLot1 = new ParkingLot("data/userData.csv");
        java.lang.String str2 = parkingLot1.getLotAvailability();
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        managementDashboard1.setName("");
        managementDashboard1.doLayout();
        java.awt.event.KeyListener keyListener7 = null;
        managementDashboard1.addKeyListener(keyListener7);
        boolean boolean9 = managementDashboard1.isValidateRoot();
        managementDashboard1.setRequestFocusEnabled(false);
        boolean boolean12 = managementDashboard1.isOptimizedDrawingEnabled();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        managementDashboard1.move((int) (byte) 1, (int) '#');
        managementDashboard1.layout();
        managementDashboard1.setEnabled(false);
        int int10 = managementDashboard1.getY();
        java.awt.Event event11 = null;
        boolean boolean14 = managementDashboard1.mouseDown(event11, 0, 10);
        java.awt.ImageCapabilities imageCapabilities17 = null;
        java.awt.image.VolatileImage volatileImage18 = managementDashboard1.createVolatileImage((int) (byte) 10, (int) ' ', imageCapabilities17);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 35 + "'", int10 == 35);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(volatileImage18);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.list();
        javax.swing.plaf.PanelUI panelUI8 = managementDashboard1.getUI();
        javax.swing.border.Border border9 = null;
        managementDashboard1.setBorder(border9);
        java.util.Locale locale11 = managementDashboard1.getLocale();
        java.awt.Event event12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = managementDashboard1.handleEvent(event12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(panelUI8);
        org.junit.Assert.assertNotNull(locale11);
        org.junit.Assert.assertEquals(locale11.toString(), "en_CA");
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        UserDashboard userDashboard1 = new UserDashboard(strConsumer0);
        userDashboard1.firePropertyChange("ToolTipText", (long) 32, (long) 64);
        java.awt.Component component6 = null;
        userDashboard1.setNextFocusableComponent(component6);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        managementDashboard30.setRequestFocusEnabled(false);
        java.awt.Event event33 = null;
        boolean boolean35 = managementDashboard30.keyUp(event33, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener36 = null;
        managementDashboard30.addInputMethodListener(inputMethodListener36);
        java.awt.Dimension dimension38 = managementDashboard30.getMaximumSize();
        managementDashboard14.setPreferredSize(dimension38);
        managementDashboard14.firePropertyChange("data/managerData.csv", ' ', ' ');
        java.util.function.Consumer<java.lang.String> strConsumer44 = null;
        ManagementDashboard managementDashboard45 = new ManagementDashboard(strConsumer44);
        managementDashboard45.setRequestFocusEnabled(false);
        java.awt.Event event48 = null;
        boolean boolean50 = managementDashboard45.keyUp(event48, (int) (short) 1);
        managementDashboard45.list();
        javax.swing.plaf.PanelUI panelUI52 = managementDashboard45.getUI();
        javax.swing.border.Border border53 = null;
        managementDashboard45.setBorder(border53);
        java.util.Locale locale55 = managementDashboard45.getLocale();
        javax.swing.JComponent.setDefaultLocale(locale55);
        managementDashboard14.setLocale(locale55);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(dimension38);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(panelUI52);
        org.junit.Assert.assertNotNull(locale55);
        org.junit.Assert.assertEquals(locale55.toString(), "en_CA");
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        managementDashboard1.enable();
        managementDashboard1.list();
        managementDashboard1.updateUI();
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.beans.PropertyChangeListener propertyChangeListener14 = null;
        managementDashboard1.removePropertyChangeListener("ToolTipText", propertyChangeListener14);
        java.awt.event.ContainerListener[] containerListenerArray16 = managementDashboard1.getContainerListeners();
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener17 = null;
        managementDashboard1.removeHierarchyBoundsListener(hierarchyBoundsListener17);
        java.awt.event.FocusListener focusListener19 = null;
        managementDashboard1.removeFocusListener(focusListener19);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(containerListenerArray16);
        org.junit.Assert.assertArrayEquals(containerListenerArray16, new java.awt.event.ContainerListener[] {});
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        javax.swing.event.AncestorListener ancestorListener7 = null;
        managementDashboard1.addAncestorListener(ancestorListener7);
        boolean boolean11 = managementDashboard1.contains((int) (byte) 1, (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        java.awt.Dimension dimension9 = managementDashboard1.getMaximumSize();
        java.awt.event.MouseEvent mouseEvent10 = null;
        java.awt.Point point11 = managementDashboard1.getToolTipLocation(mouseEvent10);
        java.util.function.Consumer<java.lang.String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        managementDashboard13.setInheritsPopupMenu(true);
        boolean boolean16 = managementDashboard13.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget17 = null;
        managementDashboard13.setDropTarget(dropTarget17);
        managementDashboard13.setFocusable(false);
        java.util.function.Consumer<java.lang.String> strConsumer21 = null;
        ManagementDashboard managementDashboard22 = new ManagementDashboard(strConsumer21);
        boolean boolean23 = managementDashboard22.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests24 = managementDashboard22.getInputMethodRequests();
        managementDashboard22.move((int) (byte) 1, (int) '#');
        boolean boolean28 = managementDashboard22.isFocusTraversable();
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        managementDashboard30.setRequestFocusEnabled(false);
        managementDashboard30.enable();
        managementDashboard30.list();
        java.awt.Point point35 = managementDashboard30.location();
        boolean boolean36 = managementDashboard22.contains(point35);
        boolean boolean37 = managementDashboard13.contains(point35);
        java.awt.Component component39 = managementDashboard1.add((java.awt.Component) managementDashboard13, (int) (short) 0);
        managementDashboard13.setFocusTraversalKeysEnabled(true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(dimension9);
        org.junit.Assert.assertNull(point11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(inputMethodRequests24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(point35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(component39);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseDrag(event6, (int) (short) 10, 4);
        managementDashboard1.resize(32, (int) '#');
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener13 = null;
        managementDashboard1.removeHierarchyBoundsListener(hierarchyBoundsListener13);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = managementDashboard1.areFocusTraversalKeysSet((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid focus traversal key identifier");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener5 = null;
        managementDashboard1.removeContainerListener(containerListener5);
        java.awt.FocusTraversalPolicy focusTraversalPolicy7 = managementDashboard1.getFocusTraversalPolicy();
        java.beans.VetoableChangeListener vetoableChangeListener8 = null;
        managementDashboard1.removeVetoableChangeListener(vetoableChangeListener8);
        javax.accessibility.AccessibleContext accessibleContext10 = managementDashboard1.getAccessibleContext();
        boolean boolean11 = managementDashboard1.isFocusable();
        java.beans.PropertyChangeListener propertyChangeListener13 = null;
        managementDashboard1.removePropertyChangeListener("Empty", propertyChangeListener13);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(focusTraversalPolicy7);
        org.junit.Assert.assertNotNull(accessibleContext10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        ParkingLot parkingLot1 = new ParkingLot("data/userData.csv");
        ParkingSpace parkingSpace3 = parkingLot1.getSpace((int) (byte) 10);
        parkingSpace3.empty();
        parkingSpace3.book("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertNotNull(parkingSpace3);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseDrag(event6, (int) (short) 10, 4);
        java.awt.event.MouseMotionListener mouseMotionListener10 = null;
        managementDashboard1.removeMouseMotionListener(mouseMotionListener10);
        boolean boolean12 = managementDashboard1.isCursorSet();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.awt.event.KeyListener[] keyListenerArray8 = managementDashboard1.getKeyListeners();
        managementDashboard1.firePropertyChange("ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]", (byte) 0, (byte) -1);
        javax.swing.plaf.PanelUI panelUI13 = managementDashboard1.getUI();
        managementDashboard1.repaint(100, 64, (int) (short) -1, 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(keyListenerArray8);
        org.junit.Assert.assertArrayEquals(keyListenerArray8, new java.awt.event.KeyListener[] {});
        org.junit.Assert.assertNotNull(panelUI13);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        managementDashboard1.setName("");
        managementDashboard1.doLayout();
        java.awt.event.KeyListener keyListener7 = null;
        managementDashboard1.addKeyListener(keyListener7);
        java.util.function.Consumer<java.lang.String> strConsumer9 = null;
        ManagementDashboard managementDashboard10 = new ManagementDashboard(strConsumer9);
        managementDashboard10.setInheritsPopupMenu(true);
        boolean boolean13 = managementDashboard10.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget14 = null;
        managementDashboard10.setDropTarget(dropTarget14);
        boolean boolean16 = managementDashboard10.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        managementDashboard18.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy21 = null;
        managementDashboard18.setFocusTraversalPolicy(focusTraversalPolicy21);
        java.lang.Object obj23 = managementDashboard10.getClientProperty((java.lang.Object) managementDashboard18);
        java.util.function.Consumer<java.lang.String> strConsumer24 = null;
        ManagementDashboard managementDashboard25 = new ManagementDashboard(strConsumer24);
        managementDashboard25.setRequestFocusEnabled(false);
        java.awt.Event event28 = null;
        boolean boolean30 = managementDashboard25.keyUp(event28, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener31 = null;
        managementDashboard25.addInputMethodListener(inputMethodListener31);
        java.awt.Dimension dimension33 = managementDashboard25.getMaximumSize();
        int int34 = managementDashboard10.getComponentZOrder((java.awt.Component) managementDashboard25);
        javax.swing.KeyStroke keyStroke35 = null;
        int int36 = managementDashboard10.getConditionForKeyStroke(keyStroke35);
        managementDashboard10.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer38 = null;
        java.awt.Image image39 = managementDashboard10.createImage(imageProducer38);
        java.util.function.Consumer<java.lang.String> strConsumer40 = null;
        ManagementDashboard managementDashboard41 = new ManagementDashboard(strConsumer40);
        managementDashboard41.setRequestFocusEnabled(false);
        java.awt.Event event44 = null;
        boolean boolean46 = managementDashboard41.keyUp(event44, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener47 = null;
        managementDashboard41.addInputMethodListener(inputMethodListener47);
        java.awt.image.VolatileImage volatileImage51 = managementDashboard41.createVolatileImage((int) (short) 0, 1);
        boolean boolean52 = managementDashboard41.isOptimizedDrawingEnabled();
        javax.swing.ActionMap actionMap53 = managementDashboard41.getActionMap();
        int int54 = managementDashboard1.checkImage(image39, (java.awt.image.ImageObserver) managementDashboard41);
        java.awt.Graphics graphics55 = null;
        managementDashboard1.print(graphics55);
        managementDashboard1.setLocation((int) (short) 10, (int) '#');
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(dimension33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(image39);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(volatileImage51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(actionMap53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        java.awt.Rectangle rectangle29 = managementDashboard1.getBounds();
        java.util.function.Consumer<java.lang.String> strConsumer30 = null;
        ManagementDashboard managementDashboard31 = new ManagementDashboard(strConsumer30);
        boolean boolean32 = managementDashboard31.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests33 = managementDashboard31.getInputMethodRequests();
        java.awt.Container container34 = managementDashboard31.getTopLevelAncestor();
        java.awt.Color color35 = null;
        managementDashboard31.setForeground(color35);
        managementDashboard31.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean42 = managementDashboard31.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer43 = null;
        ManagementDashboard managementDashboard44 = new ManagementDashboard(strConsumer43);
        managementDashboard44.setRequestFocusEnabled(false);
        java.awt.Event event47 = null;
        boolean boolean49 = managementDashboard44.keyUp(event47, (int) (short) 1);
        managementDashboard44.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener53 = null;
        managementDashboard44.removePropertyChangeListener("", propertyChangeListener53);
        managementDashboard44.doLayout();
        javax.swing.JPopupMenu jPopupMenu56 = managementDashboard44.getComponentPopupMenu();
        java.awt.Component component58 = managementDashboard31.add((java.awt.Component) managementDashboard44, 1);
        java.awt.Rectangle rectangle59 = managementDashboard31.getBounds();
        java.lang.Object obj60 = managementDashboard1.getClientProperty((java.lang.Object) rectangle59);
        managementDashboard1.show(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertNotNull(rectangle29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(inputMethodRequests33);
        org.junit.Assert.assertNull(container34);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(jPopupMenu56);
        org.junit.Assert.assertNotNull(component58);
        org.junit.Assert.assertNotNull(rectangle59);
        org.junit.Assert.assertNull(obj60);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        managementDashboard30.setRequestFocusEnabled(false);
        java.awt.Event event33 = null;
        boolean boolean35 = managementDashboard30.keyUp(event33, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener36 = null;
        managementDashboard30.addInputMethodListener(inputMethodListener36);
        java.awt.Dimension dimension38 = managementDashboard30.getMaximumSize();
        managementDashboard14.setPreferredSize(dimension38);
        managementDashboard14.firePropertyChange("data/managerData.csv", ' ', ' ');
        java.awt.event.MouseListener mouseListener44 = null;
        managementDashboard14.addMouseListener(mouseListener44);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(dimension38);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard1.removePropertyChangeListener("", propertyChangeListener10);
        managementDashboard1.doLayout();
        javax.swing.JPopupMenu jPopupMenu13 = managementDashboard1.getComponentPopupMenu();
        java.awt.event.HierarchyListener hierarchyListener14 = null;
        managementDashboard1.removeHierarchyListener(hierarchyListener14);
        managementDashboard1.nextFocus();
        boolean boolean17 = javax.swing.JComponent.isLightweightComponent((java.awt.Component) managementDashboard1);
        boolean boolean18 = managementDashboard1.isMaximumSizeSet();
        java.awt.Component component21 = managementDashboard1.locate(100, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(jPopupMenu13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(component21);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        java.awt.Container container7 = managementDashboard1.getFocusCycleRootAncestor();
        boolean boolean8 = managementDashboard1.isDoubleBuffered();
        java.lang.String str9 = managementDashboard1.getUIClassID();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(container7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PanelUI" + "'", str9, "PanelUI");
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.list();
        java.beans.VetoableChangeListener vetoableChangeListener8 = null;
        managementDashboard1.addVetoableChangeListener(vetoableChangeListener8);
        java.awt.Graphics graphics10 = null;
        managementDashboard1.print(graphics10);
        managementDashboard1.doLayout();
        java.awt.event.MouseListener mouseListener13 = null;
        managementDashboard1.addMouseListener(mouseListener13);
        java.awt.Event event15 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.deliverEvent(event15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"x\" because \"e\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.event.HierarchyListener[] hierarchyListenerArray4 = managementDashboard1.getHierarchyListeners();
        int int7 = managementDashboard1.getBaseline(32, 32);
        java.beans.PropertyChangeListener propertyChangeListener8 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener8);
        org.junit.Assert.assertNotNull(hierarchyListenerArray4);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray4, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        jToolTip9.setFocusTraversalPolicyProvider(true);
        jToolTip9.enable();
        javax.swing.InputMap inputMap30 = jToolTip9.getInputMap();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(inputMap30);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        javax.swing.JToolTip jToolTip6 = managementDashboard1.createToolTip();
        boolean boolean7 = managementDashboard1.isManagingFocus();
        boolean boolean8 = javax.swing.JComponent.isLightweightComponent((java.awt.Component) managementDashboard1);
        org.junit.Assert.assertNotNull(jToolTip6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        javax.swing.event.AncestorListener ancestorListener9 = null;
        managementDashboard1.removeAncestorListener(ancestorListener9);
        java.awt.Dimension dimension11 = managementDashboard1.getPreferredSize();
        boolean boolean12 = managementDashboard1.isMinimumSizeSet();
        java.beans.VetoableChangeListener vetoableChangeListener13 = null;
        managementDashboard1.addVetoableChangeListener(vetoableChangeListener13);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(dimension11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        java.awt.Event event9 = null;
        boolean boolean12 = managementDashboard1.mouseExit(event9, (int) 'a', (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests16 = managementDashboard14.getInputMethodRequests();
        java.awt.Container container17 = managementDashboard14.getTopLevelAncestor();
        java.awt.Color color18 = null;
        managementDashboard14.setForeground(color18);
        javax.swing.KeyStroke keyStroke20 = null;
        java.awt.event.ActionListener actionListener21 = managementDashboard14.getActionForKeyStroke(keyStroke20);
        javax.swing.JToolTip jToolTip22 = managementDashboard14.createToolTip();
        java.awt.Event event23 = null;
        java.util.function.Consumer<java.lang.String> strConsumer24 = null;
        ManagementDashboard managementDashboard25 = new ManagementDashboard(strConsumer24);
        managementDashboard25.setInheritsPopupMenu(true);
        boolean boolean28 = managementDashboard25.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget29 = null;
        managementDashboard25.setDropTarget(dropTarget29);
        java.awt.Dimension dimension31 = null;
        managementDashboard25.setPreferredSize(dimension31);
        javax.swing.event.AncestorListener ancestorListener33 = null;
        managementDashboard25.removeAncestorListener(ancestorListener33);
        java.awt.Dimension dimension35 = managementDashboard25.getPreferredSize();
        java.awt.Dimension dimension36 = managementDashboard25.getPreferredSize();
        managementDashboard25.setDebugGraphicsOptions(10);
        boolean boolean39 = jToolTip22.lostFocus(event23, (java.lang.Object) managementDashboard25);
        java.awt.Rectangle rectangle40 = jToolTip22.bounds();
        managementDashboard1.computeVisibleRect(rectangle40);
        boolean boolean42 = managementDashboard1.isRequestFocusEnabled();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(inputMethodRequests16);
        org.junit.Assert.assertNull(container17);
        org.junit.Assert.assertNull(actionListener21);
        org.junit.Assert.assertNotNull(jToolTip22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(dimension35);
        org.junit.Assert.assertNotNull(dimension36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(rectangle40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray9 = managementDashboard1.getHierarchyListeners();
        java.awt.event.KeyListener keyListener10 = null;
        managementDashboard1.addKeyListener(keyListener10);
        java.awt.Cursor cursor12 = managementDashboard1.getCursor();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests16 = managementDashboard14.getInputMethodRequests();
        java.awt.Container container17 = managementDashboard14.getTopLevelAncestor();
        java.awt.Color color18 = null;
        managementDashboard14.setForeground(color18);
        javax.swing.KeyStroke keyStroke20 = null;
        java.awt.event.ActionListener actionListener21 = managementDashboard14.getActionForKeyStroke(keyStroke20);
        javax.swing.JToolTip jToolTip22 = managementDashboard14.createToolTip();
        java.awt.Event event23 = null;
        java.util.function.Consumer<java.lang.String> strConsumer24 = null;
        ManagementDashboard managementDashboard25 = new ManagementDashboard(strConsumer24);
        managementDashboard25.setInheritsPopupMenu(true);
        boolean boolean28 = managementDashboard25.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget29 = null;
        managementDashboard25.setDropTarget(dropTarget29);
        java.awt.Dimension dimension31 = null;
        managementDashboard25.setPreferredSize(dimension31);
        javax.swing.event.AncestorListener ancestorListener33 = null;
        managementDashboard25.removeAncestorListener(ancestorListener33);
        java.awt.Dimension dimension35 = managementDashboard25.getPreferredSize();
        java.awt.Dimension dimension36 = managementDashboard25.getPreferredSize();
        managementDashboard25.setDebugGraphicsOptions(10);
        boolean boolean39 = jToolTip22.lostFocus(event23, (java.lang.Object) managementDashboard25);
        boolean boolean40 = managementDashboard25.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener42 = null;
        managementDashboard25.addPropertyChangeListener("ToolTipText", propertyChangeListener42);
        java.awt.Component[] componentArray44 = managementDashboard25.getComponents();
        java.awt.Font font45 = null;
        managementDashboard25.setFont(font45);
        javax.swing.plaf.PanelUI panelUI47 = managementDashboard25.getUI();
        java.util.function.Consumer<java.lang.String> strConsumer48 = null;
        ManagementDashboard managementDashboard49 = new ManagementDashboard(strConsumer48);
        managementDashboard49.setInheritsPopupMenu(true);
        boolean boolean52 = managementDashboard49.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget53 = null;
        managementDashboard49.setDropTarget(dropTarget53);
        boolean boolean55 = managementDashboard49.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        managementDashboard57.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy60 = null;
        managementDashboard57.setFocusTraversalPolicy(focusTraversalPolicy60);
        java.lang.Object obj62 = managementDashboard49.getClientProperty((java.lang.Object) managementDashboard57);
        java.util.function.Consumer<java.lang.String> strConsumer63 = null;
        ManagementDashboard managementDashboard64 = new ManagementDashboard(strConsumer63);
        managementDashboard64.setRequestFocusEnabled(false);
        java.awt.Event event67 = null;
        boolean boolean69 = managementDashboard64.keyUp(event67, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener70 = null;
        managementDashboard64.addInputMethodListener(inputMethodListener70);
        java.awt.Dimension dimension72 = managementDashboard64.getMaximumSize();
        int int73 = managementDashboard49.getComponentZOrder((java.awt.Component) managementDashboard64);
        javax.swing.KeyStroke keyStroke74 = null;
        int int75 = managementDashboard49.getConditionForKeyStroke(keyStroke74);
        managementDashboard49.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer77 = null;
        java.awt.Image image78 = managementDashboard49.createImage(imageProducer77);
        java.util.function.Consumer<java.lang.String> strConsumer81 = null;
        ManagementDashboard managementDashboard82 = new ManagementDashboard(strConsumer81);
        boolean boolean83 = managementDashboard82.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests84 = managementDashboard82.getInputMethodRequests();
        java.awt.Container container85 = managementDashboard82.getTopLevelAncestor();
        java.awt.Color color86 = null;
        managementDashboard82.setForeground(color86);
        java.awt.event.HierarchyListener hierarchyListener88 = null;
        managementDashboard82.addHierarchyListener(hierarchyListener88);
        java.awt.Cursor cursor90 = null;
        managementDashboard82.setCursor(cursor90);
        int int92 = managementDashboard25.checkImage(image78, (int) (byte) 10, (int) 'a', (java.awt.image.ImageObserver) managementDashboard82);
        boolean boolean93 = managementDashboard1.isFocusCycleRoot((java.awt.Container) managementDashboard82);
        boolean boolean94 = managementDashboard82.isOptimizedDrawingEnabled();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray9);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray9, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertNotNull(cursor12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(inputMethodRequests16);
        org.junit.Assert.assertNull(container17);
        org.junit.Assert.assertNull(actionListener21);
        org.junit.Assert.assertNotNull(jToolTip22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(dimension35);
        org.junit.Assert.assertNotNull(dimension36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(componentArray44);
        org.junit.Assert.assertNotNull(panelUI47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(dimension72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(image78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(inputMethodRequests84);
        org.junit.Assert.assertNull(container85);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        java.awt.Event event6 = null;
        boolean boolean9 = managementDashboard1.mouseDrag(event6, (int) (short) 10, 4);
        java.beans.PropertyChangeListener propertyChangeListener11 = null;
        managementDashboard1.removePropertyChangeListener("hi!", propertyChangeListener11);
        java.awt.Event event13 = null;
        boolean boolean16 = managementDashboard1.mouseDrag(event13, 10, (int) (byte) -1);
        managementDashboard1.setSize((int) 'a', (int) '#');
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener5 = null;
        managementDashboard1.removeContainerListener(containerListener5);
        javax.swing.JPopupMenu jPopupMenu7 = null;
        managementDashboard1.setComponentPopupMenu(jPopupMenu7);
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener9 = null;
        managementDashboard1.addHierarchyBoundsListener(hierarchyBoundsListener9);
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setRequestFocusEnabled(false);
        java.awt.Event event15 = null;
        boolean boolean17 = managementDashboard12.keyUp(event15, (int) (short) 1);
        managementDashboard12.list();
        javax.swing.plaf.PanelUI panelUI19 = managementDashboard12.getUI();
        java.awt.image.ColorModel colorModel20 = managementDashboard12.getColorModel();
        java.awt.Point point21 = managementDashboard12.location();
        boolean boolean22 = managementDashboard1.contains(point21);
        java.awt.Rectangle rectangle23 = managementDashboard1.getVisibleRect();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(panelUI19);
        org.junit.Assert.assertNotNull(colorModel20);
        org.junit.Assert.assertNotNull(point21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(rectangle23);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        java.lang.Object obj14 = managementDashboard1.getClientProperty((java.lang.Object) managementDashboard9);
        java.util.function.Consumer<java.lang.String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        managementDashboard16.setRequestFocusEnabled(false);
        java.awt.Event event19 = null;
        boolean boolean21 = managementDashboard16.keyUp(event19, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener22 = null;
        managementDashboard16.addInputMethodListener(inputMethodListener22);
        java.awt.Dimension dimension24 = managementDashboard16.getMaximumSize();
        int int25 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard16);
        java.awt.Component component26 = managementDashboard1.getNextFocusableComponent();
        boolean boolean27 = managementDashboard1.isEnabled();
        java.awt.Insets insets28 = managementDashboard1.insets();
        managementDashboard1.enable(true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(component26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(insets28);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        ParkingLot parkingLot1 = new ParkingLot("data/userData.csv");
        ParkingSpace parkingSpace3 = parkingLot1.getSpace((int) (byte) 10);
        parkingSpace3.empty();
        parkingSpace3.setMaintenance();
        java.lang.String str6 = parkingSpace3.getCurrentUser();
        org.junit.Assert.assertNotNull(parkingSpace3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Empty" + "'", str6, "Empty");
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        managementDashboard1.firePropertyChange("", true, false);
        java.awt.Dimension dimension9 = managementDashboard1.size();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(dimension9);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        boolean boolean27 = managementDashboard12.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener29 = null;
        managementDashboard12.addPropertyChangeListener("ToolTipText", propertyChangeListener29);
        java.awt.Component[] componentArray31 = managementDashboard12.getComponents();
        java.awt.Font font32 = null;
        managementDashboard12.setFont(font32);
        javax.swing.plaf.PanelUI panelUI34 = managementDashboard12.getUI();
        java.awt.Component component36 = managementDashboard12.getComponent(1);
        component36.firePropertyChange("123456789", (short) (byte) -1, (short) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(componentArray31);
        org.junit.Assert.assertNotNull(panelUI34);
        org.junit.Assert.assertNotNull(component36);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener10 = null;
        managementDashboard1.removePropertyChangeListener("", propertyChangeListener10);
        managementDashboard1.doLayout();
        javax.swing.JPopupMenu jPopupMenu13 = managementDashboard1.getComponentPopupMenu();
        java.awt.event.HierarchyListener hierarchyListener14 = null;
        managementDashboard1.removeHierarchyListener(hierarchyListener14);
        managementDashboard1.show(false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(jPopupMenu13);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        javax.swing.event.AncestorListener ancestorListener9 = null;
        managementDashboard1.removeAncestorListener(ancestorListener9);
        java.awt.Dimension dimension11 = managementDashboard1.getPreferredSize();
        java.awt.Dimension dimension12 = managementDashboard1.getPreferredSize();
        boolean boolean13 = managementDashboard1.getInheritsPopupMenu();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component15 = managementDashboard1.getComponent((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: No such child: 32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(dimension11);
        org.junit.Assert.assertNotNull(dimension12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.Event event3 = null;
        boolean boolean5 = managementDashboard1.lostFocus(event3, (java.lang.Object) "");
        managementDashboard1.setAutoscrolls(false);
        java.awt.Graphics graphics8 = null;
        managementDashboard1.update(graphics8);
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setInheritsPopupMenu(true);
        boolean boolean14 = managementDashboard11.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget15 = null;
        managementDashboard11.setDropTarget(dropTarget15);
        boolean boolean17 = managementDashboard11.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        managementDashboard19.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy22 = null;
        managementDashboard19.setFocusTraversalPolicy(focusTraversalPolicy22);
        java.lang.Object obj24 = managementDashboard11.getClientProperty((java.lang.Object) managementDashboard19);
        java.util.function.Consumer<java.lang.String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        managementDashboard26.setRequestFocusEnabled(false);
        java.awt.Event event29 = null;
        boolean boolean31 = managementDashboard26.keyUp(event29, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener32 = null;
        managementDashboard26.addInputMethodListener(inputMethodListener32);
        java.awt.Dimension dimension34 = managementDashboard26.getMaximumSize();
        int int35 = managementDashboard11.getComponentZOrder((java.awt.Component) managementDashboard26);
        javax.swing.KeyStroke keyStroke36 = null;
        int int37 = managementDashboard11.getConditionForKeyStroke(keyStroke36);
        managementDashboard11.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer39 = null;
        java.awt.Image image40 = managementDashboard11.createImage(imageProducer39);
        boolean boolean46 = managementDashboard1.imageUpdate(image40, (int) (byte) 10, (int) (short) 10, 4, (int) (short) 0, 2);
        managementDashboard1.enableInputMethods(false);
        java.util.function.Consumer<java.lang.String> strConsumer49 = null;
        ManagementDashboard managementDashboard50 = new ManagementDashboard(strConsumer49);
        managementDashboard50.setRequestFocusEnabled(false);
        java.awt.Event event53 = null;
        boolean boolean55 = managementDashboard50.keyUp(event53, (int) (short) 1);
        java.lang.String str56 = managementDashboard50.toString();
        managementDashboard50.setOpaque(true);
        managementDashboard1.remove((java.awt.Component) managementDashboard50);
        java.awt.Image image62 = managementDashboard50.createImage((int) '4', 0);
        java.awt.Dimension dimension63 = managementDashboard50.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(dimension34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(image40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]" + "'", str56, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertNull(image62);
        org.junit.Assert.assertNotNull(dimension63);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        managementDashboard1.move((int) (byte) 1, (int) '#');
        managementDashboard1.layout();
        managementDashboard1.setEnabled(false);
        int int10 = managementDashboard1.getY();
        managementDashboard1.setFocusTraversalKeysEnabled(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 35 + "'", int10 == 35);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        javax.swing.event.AncestorListener ancestorListener9 = null;
        managementDashboard1.removeAncestorListener(ancestorListener9);
        java.awt.Dimension dimension11 = managementDashboard1.getPreferredSize();
        managementDashboard1.enableInputMethods(false);
        java.util.function.Consumer<java.lang.String> strConsumer14 = null;
        ManagementDashboard managementDashboard15 = new ManagementDashboard(strConsumer14);
        managementDashboard15.setRequestFocusEnabled(false);
        java.awt.Event event18 = null;
        boolean boolean20 = managementDashboard15.keyUp(event18, (int) (short) 1);
        managementDashboard15.list();
        java.beans.VetoableChangeListener vetoableChangeListener22 = null;
        managementDashboard15.addVetoableChangeListener(vetoableChangeListener22);
        java.awt.Graphics graphics24 = null;
        managementDashboard15.printComponents(graphics24);
        java.util.function.Consumer<java.lang.String> strConsumer26 = null;
        ManagementDashboard managementDashboard27 = new ManagementDashboard(strConsumer26);
        managementDashboard27.setInheritsPopupMenu(true);
        boolean boolean30 = managementDashboard27.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget31 = null;
        managementDashboard27.setDropTarget(dropTarget31);
        java.awt.Dimension dimension33 = null;
        managementDashboard27.setPreferredSize(dimension33);
        javax.swing.event.AncestorListener ancestorListener35 = null;
        managementDashboard27.removeAncestorListener(ancestorListener35);
        java.awt.Dimension dimension37 = managementDashboard27.getPreferredSize();
        java.util.function.Consumer<java.lang.String> strConsumer38 = null;
        ManagementDashboard managementDashboard39 = new ManagementDashboard(strConsumer38);
        managementDashboard39.setInheritsPopupMenu(true);
        boolean boolean42 = managementDashboard39.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget43 = null;
        managementDashboard39.setDropTarget(dropTarget43);
        java.awt.Dimension dimension45 = null;
        managementDashboard39.setPreferredSize(dimension45);
        java.awt.Event event47 = null;
        boolean boolean50 = managementDashboard39.mouseExit(event47, (int) 'a', (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer51 = null;
        ManagementDashboard managementDashboard52 = new ManagementDashboard(strConsumer51);
        boolean boolean53 = managementDashboard52.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests54 = managementDashboard52.getInputMethodRequests();
        java.awt.Container container55 = managementDashboard52.getTopLevelAncestor();
        java.awt.Color color56 = null;
        managementDashboard52.setForeground(color56);
        javax.swing.KeyStroke keyStroke58 = null;
        java.awt.event.ActionListener actionListener59 = managementDashboard52.getActionForKeyStroke(keyStroke58);
        javax.swing.JToolTip jToolTip60 = managementDashboard52.createToolTip();
        java.awt.Event event61 = null;
        java.util.function.Consumer<java.lang.String> strConsumer62 = null;
        ManagementDashboard managementDashboard63 = new ManagementDashboard(strConsumer62);
        managementDashboard63.setInheritsPopupMenu(true);
        boolean boolean66 = managementDashboard63.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget67 = null;
        managementDashboard63.setDropTarget(dropTarget67);
        java.awt.Dimension dimension69 = null;
        managementDashboard63.setPreferredSize(dimension69);
        javax.swing.event.AncestorListener ancestorListener71 = null;
        managementDashboard63.removeAncestorListener(ancestorListener71);
        java.awt.Dimension dimension73 = managementDashboard63.getPreferredSize();
        java.awt.Dimension dimension74 = managementDashboard63.getPreferredSize();
        managementDashboard63.setDebugGraphicsOptions(10);
        boolean boolean77 = jToolTip60.lostFocus(event61, (java.lang.Object) managementDashboard63);
        java.awt.Rectangle rectangle78 = jToolTip60.bounds();
        managementDashboard39.computeVisibleRect(rectangle78);
        managementDashboard27.computeVisibleRect(rectangle78);
        java.util.function.Consumer<java.lang.String> strConsumer81 = null;
        ManagementDashboard managementDashboard82 = new ManagementDashboard(strConsumer81);
        managementDashboard82.setRequestFocusEnabled(false);
        managementDashboard82.enable();
        managementDashboard82.list();
        java.awt.Point point87 = managementDashboard82.location();
        java.awt.Point point88 = managementDashboard27.getLocation(point87);
        java.awt.Point point89 = managementDashboard15.getLocation(point87);
        java.awt.Component component90 = managementDashboard1.findComponentAt(point89);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Rectangle rectangle91 = component90.getBounds();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(dimension11);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(dimension37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(inputMethodRequests54);
        org.junit.Assert.assertNull(container55);
        org.junit.Assert.assertNull(actionListener59);
        org.junit.Assert.assertNotNull(jToolTip60);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(dimension73);
        org.junit.Assert.assertNotNull(dimension74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(rectangle78);
        org.junit.Assert.assertNotNull(point87);
        org.junit.Assert.assertNotNull(point88);
        org.junit.Assert.assertNotNull(point89);
        org.junit.Assert.assertNull(component90);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.awt.im.InputContext inputContext10 = managementDashboard5.getInputContext();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(inputContext10);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.beans.PropertyChangeListener propertyChangeListener11 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener11);
        boolean boolean13 = managementDashboard5.isPreferredSizeSet();
        managementDashboard5.setToolTipText("");
        java.util.Locale locale16 = javax.swing.JComponent.getDefaultLocale();
        managementDashboard5.setLocale(locale16);
        javax.swing.JComponent.setDefaultLocale(locale16);
        javax.swing.JComponent.setDefaultLocale(locale16);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(locale16);
        org.junit.Assert.assertEquals(locale16.toString(), "en_CA");
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray9 = managementDashboard1.getHierarchyListeners();
        java.awt.event.KeyListener keyListener10 = null;
        managementDashboard1.addKeyListener(keyListener10);
        java.awt.Cursor cursor12 = managementDashboard1.getCursor();
        managementDashboard1.setIgnoreRepaint(true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray9);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray9, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertNotNull(cursor12);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.awt.event.ContainerListener containerListener10 = null;
        managementDashboard5.addContainerListener(containerListener10);
        managementDashboard5.transferFocusBackward();
        int int13 = managementDashboard5.getDebugGraphicsOptions();
        managementDashboard5.move((int) (short) 10, (int) (byte) 10);
        managementDashboard5.reshape((int) '#', (-1), 10, (int) ' ');
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        boolean boolean24 = managementDashboard23.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests25 = managementDashboard23.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer26 = null;
        ManagementDashboard managementDashboard27 = new ManagementDashboard(strConsumer26);
        managementDashboard27.setInheritsPopupMenu(true);
        boolean boolean30 = managementDashboard27.isValidateRoot();
        int int31 = managementDashboard23.getComponentZOrder((java.awt.Component) managementDashboard27);
        java.beans.PropertyChangeListener propertyChangeListener33 = null;
        managementDashboard27.addPropertyChangeListener("hi!", propertyChangeListener33);
        java.util.function.Consumer<java.lang.String> strConsumer35 = null;
        ManagementDashboard managementDashboard36 = new ManagementDashboard(strConsumer35);
        boolean boolean37 = managementDashboard36.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests38 = managementDashboard36.getInputMethodRequests();
        java.awt.Container container39 = managementDashboard36.getTopLevelAncestor();
        java.awt.Color color40 = null;
        managementDashboard36.setForeground(color40);
        java.awt.event.HierarchyListener hierarchyListener42 = null;
        managementDashboard36.addHierarchyListener(hierarchyListener42);
        java.awt.Cursor cursor44 = null;
        managementDashboard36.setCursor(cursor44);
        java.awt.Event event46 = null;
        boolean boolean49 = managementDashboard36.mouseDown(event46, (-1), (int) (short) 10);
        managementDashboard36.resize((int) (byte) 1, (int) (byte) 10);
        boolean boolean53 = managementDashboard36.isFocusCycleRoot();
        javax.swing.InputMap inputMap55 = managementDashboard36.getInputMap((int) (byte) 0);
        managementDashboard5.putClientProperty((java.lang.Object) managementDashboard27, (java.lang.Object) (byte) 0);
        java.awt.image.ImageProducer imageProducer57 = null;
        java.awt.Image image58 = managementDashboard5.createImage(imageProducer57);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(inputMethodRequests25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(inputMethodRequests38);
        org.junit.Assert.assertNull(container39);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(inputMap55);
        org.junit.Assert.assertNotNull(image58);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        javax.swing.JPopupMenu jPopupMenu27 = null;
        managementDashboard12.setComponentPopupMenu(jPopupMenu27);
        java.awt.Insets insets29 = managementDashboard12.insets();
        java.util.function.Consumer<java.lang.String> strConsumer30 = null;
        ManagementDashboard managementDashboard31 = new ManagementDashboard(strConsumer30);
        boolean boolean32 = managementDashboard31.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests33 = managementDashboard31.getInputMethodRequests();
        java.awt.Container container34 = managementDashboard31.getTopLevelAncestor();
        java.awt.Color color35 = null;
        managementDashboard31.setForeground(color35);
        managementDashboard31.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean42 = managementDashboard31.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer43 = null;
        ManagementDashboard managementDashboard44 = new ManagementDashboard(strConsumer43);
        managementDashboard44.setRequestFocusEnabled(false);
        java.awt.Event event47 = null;
        boolean boolean49 = managementDashboard44.keyUp(event47, (int) (short) 1);
        managementDashboard44.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener53 = null;
        managementDashboard44.removePropertyChangeListener("", propertyChangeListener53);
        managementDashboard44.doLayout();
        javax.swing.JPopupMenu jPopupMenu56 = managementDashboard44.getComponentPopupMenu();
        java.awt.Component component58 = managementDashboard31.add((java.awt.Component) managementDashboard44, 1);
        java.util.function.Consumer<java.lang.String> strConsumer59 = null;
        ManagementDashboard managementDashboard60 = new ManagementDashboard(strConsumer59);
        managementDashboard60.setRequestFocusEnabled(false);
        java.awt.Event event63 = null;
        boolean boolean65 = managementDashboard60.keyUp(event63, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener66 = null;
        managementDashboard60.addInputMethodListener(inputMethodListener66);
        java.awt.Dimension dimension68 = managementDashboard60.getMaximumSize();
        managementDashboard44.setPreferredSize(dimension68);
        managementDashboard44.firePropertyChange("data/managerData.csv", ' ', ' ');
        java.util.function.Consumer<java.lang.String> strConsumer74 = null;
        ManagementDashboard managementDashboard75 = new ManagementDashboard(strConsumer74);
        managementDashboard75.setRequestFocusEnabled(false);
        java.awt.Event event78 = null;
        boolean boolean80 = managementDashboard75.keyUp(event78, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener81 = null;
        managementDashboard75.addInputMethodListener(inputMethodListener81);
        java.awt.image.VolatileImage volatileImage85 = managementDashboard75.createVolatileImage((int) (short) 0, 1);
        boolean boolean86 = managementDashboard75.isOptimizedDrawingEnabled();
        javax.swing.ActionMap actionMap87 = managementDashboard75.getActionMap();
        managementDashboard44.setActionMap(actionMap87);
        managementDashboard12.remove((java.awt.Component) managementDashboard44);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean91 = managementDashboard44.areFocusTraversalKeysSet(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid focus traversal key identifier");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(insets29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(inputMethodRequests33);
        org.junit.Assert.assertNull(container34);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(jPopupMenu56);
        org.junit.Assert.assertNotNull(component58);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(dimension68);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(volatileImage85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(actionMap87);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        java.awt.Event event9 = null;
        boolean boolean12 = managementDashboard1.mouseExit(event9, (int) 'a', (int) (short) 1);
        managementDashboard1.setRequestFocusEnabled(true);
        managementDashboard1.setAutoscrolls(false);
        boolean boolean17 = managementDashboard1.requestDefaultFocus();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        ParkingLot parkingLot1 = new ParkingLot("data/userData.csv");
        ParkingSpace parkingSpace3 = parkingLot1.getSpace((int) (byte) 10);
        java.lang.String str4 = parkingSpace3.getCurrentCar();
        parkingSpace3.book("");
        java.lang.String str7 = parkingSpace3.getCurrentUser();
        org.junit.Assert.assertNotNull(parkingSpace3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Empty" + "'", str4, "Empty");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Empty" + "'", str7, "Empty");
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setInheritsPopupMenu(true);
        boolean boolean17 = managementDashboard14.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget18 = null;
        managementDashboard14.setDropTarget(dropTarget18);
        boolean boolean20 = managementDashboard14.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer21 = null;
        ManagementDashboard managementDashboard22 = new ManagementDashboard(strConsumer21);
        managementDashboard22.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy25 = null;
        managementDashboard22.setFocusTraversalPolicy(focusTraversalPolicy25);
        java.lang.Object obj27 = managementDashboard14.getClientProperty((java.lang.Object) managementDashboard22);
        java.util.function.Consumer<java.lang.String> strConsumer28 = null;
        ManagementDashboard managementDashboard29 = new ManagementDashboard(strConsumer28);
        managementDashboard29.setRequestFocusEnabled(false);
        java.awt.Event event32 = null;
        boolean boolean34 = managementDashboard29.keyUp(event32, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener35 = null;
        managementDashboard29.addInputMethodListener(inputMethodListener35);
        java.awt.Dimension dimension37 = managementDashboard29.getMaximumSize();
        int int38 = managementDashboard14.getComponentZOrder((java.awt.Component) managementDashboard29);
        javax.swing.KeyStroke keyStroke39 = null;
        int int40 = managementDashboard14.getConditionForKeyStroke(keyStroke39);
        managementDashboard14.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer42 = null;
        java.awt.Image image43 = managementDashboard14.createImage(imageProducer42);
        managementDashboard14.setLocation(2, (-1));
        managementDashboard14.hide();
        java.util.function.Consumer<java.lang.String> strConsumer48 = null;
        ManagementDashboard managementDashboard49 = new ManagementDashboard(strConsumer48);
        boolean boolean50 = managementDashboard49.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests51 = managementDashboard49.getInputMethodRequests();
        java.awt.Container container52 = managementDashboard49.getTopLevelAncestor();
        java.awt.Color color53 = null;
        managementDashboard49.setForeground(color53);
        managementDashboard49.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean60 = managementDashboard49.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer61 = null;
        ManagementDashboard managementDashboard62 = new ManagementDashboard(strConsumer61);
        managementDashboard62.setRequestFocusEnabled(false);
        java.awt.Event event65 = null;
        boolean boolean67 = managementDashboard62.keyUp(event65, (int) (short) 1);
        managementDashboard62.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener71 = null;
        managementDashboard62.removePropertyChangeListener("", propertyChangeListener71);
        managementDashboard62.doLayout();
        javax.swing.JPopupMenu jPopupMenu74 = managementDashboard62.getComponentPopupMenu();
        java.awt.Component component76 = managementDashboard49.add((java.awt.Component) managementDashboard62, 1);
        managementDashboard62.firePropertyChange("ToolTipText", (short) 1, (short) (byte) 100);
        boolean boolean81 = managementDashboard62.isFocusTraversalPolicyProvider();
        managementDashboard62.setAlignmentY((float) 64);
        java.awt.event.KeyListener[] keyListenerArray84 = managementDashboard62.getKeyListeners();
        managementDashboard62.setFocusCycleRoot(false);
        managementDashboard1.putClientProperty((java.lang.Object) managementDashboard14, (java.lang.Object) managementDashboard62);
        boolean boolean88 = managementDashboard14.getFocusTraversalKeysEnabled();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(dimension37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(image43);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(inputMethodRequests51);
        org.junit.Assert.assertNull(container52);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(jPopupMenu74);
        org.junit.Assert.assertNotNull(component76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(keyListenerArray84);
        org.junit.Assert.assertArrayEquals(keyListenerArray84, new java.awt.event.KeyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        int int9 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard5);
        java.beans.PropertyChangeListener propertyChangeListener11 = null;
        managementDashboard5.addPropertyChangeListener("hi!", propertyChangeListener11);
        managementDashboard5.enable();
        boolean boolean14 = managementDashboard5.isValidateRoot();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        javax.swing.event.AncestorListener ancestorListener9 = null;
        managementDashboard1.removeAncestorListener(ancestorListener9);
        managementDashboard1.setDebugGraphicsOptions((int) ' ');
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        int int9 = managementDashboard1.getDebugGraphicsOptions();
        java.beans.VetoableChangeListener[] vetoableChangeListenerArray10 = managementDashboard1.getVetoableChangeListeners();
        java.beans.VetoableChangeListener vetoableChangeListener11 = null;
        managementDashboard1.removeVetoableChangeListener(vetoableChangeListener11);
        java.awt.Graphics graphics13 = null;
        managementDashboard1.printComponents(graphics13);
        java.io.PrintStream printStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.list(printStream15, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.io.PrintStream.print(String)\" because \"out\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(vetoableChangeListenerArray10);
        org.junit.Assert.assertArrayEquals(vetoableChangeListenerArray10, new java.beans.VetoableChangeListener[] {});
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        jToolTip9.layout();
        java.awt.Image image30 = jToolTip9.createImage((-1), (int) '4');
        java.awt.event.HierarchyListener hierarchyListener31 = null;
        jToolTip9.removeHierarchyListener(hierarchyListener31);
        java.awt.Graphics graphics33 = null;
        jToolTip9.paint(graphics33);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(image30);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        java.awt.Rectangle rectangle29 = managementDashboard1.getBounds();
        java.lang.String str30 = managementDashboard1.getUIClassID();
        managementDashboard1.invalidate();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertNotNull(rectangle29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PanelUI" + "'", str30, "PanelUI");
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        UserBookingsView userBookingsView1 = new UserBookingsView(strConsumer0);
        userBookingsView1.removeNotify();
        java.util.function.Consumer<java.lang.String> strConsumer3 = null;
        ManagementDashboard managementDashboard4 = new ManagementDashboard(strConsumer3);
        boolean boolean5 = managementDashboard4.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests6 = managementDashboard4.getInputMethodRequests();
        java.awt.Container container7 = managementDashboard4.getTopLevelAncestor();
        java.awt.Color color8 = null;
        managementDashboard4.setForeground(color8);
        managementDashboard4.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean15 = managementDashboard4.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer16 = null;
        ManagementDashboard managementDashboard17 = new ManagementDashboard(strConsumer16);
        managementDashboard17.setRequestFocusEnabled(false);
        java.awt.Event event20 = null;
        boolean boolean22 = managementDashboard17.keyUp(event20, (int) (short) 1);
        managementDashboard17.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener26 = null;
        managementDashboard17.removePropertyChangeListener("", propertyChangeListener26);
        managementDashboard17.doLayout();
        javax.swing.JPopupMenu jPopupMenu29 = managementDashboard17.getComponentPopupMenu();
        java.awt.Component component31 = managementDashboard4.add((java.awt.Component) managementDashboard17, 1);
        java.util.function.Consumer<java.lang.String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        managementDashboard33.setRequestFocusEnabled(false);
        java.awt.Event event36 = null;
        boolean boolean38 = managementDashboard33.keyUp(event36, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener39 = null;
        managementDashboard33.addInputMethodListener(inputMethodListener39);
        java.awt.Dimension dimension41 = managementDashboard33.getMaximumSize();
        managementDashboard17.setPreferredSize(dimension41);
        java.awt.Point point43 = managementDashboard17.location();
        java.awt.Point point44 = userBookingsView1.getLocation(point43);
        boolean boolean46 = userBookingsView1.requestFocus(false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(inputMethodRequests6);
        org.junit.Assert.assertNull(container7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(jPopupMenu29);
        org.junit.Assert.assertNotNull(component31);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(dimension41);
        org.junit.Assert.assertNotNull(point43);
        org.junit.Assert.assertNotNull(point44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        java.awt.image.VolatileImage volatileImage11 = managementDashboard1.createVolatileImage((int) (short) 0, 1);
        boolean boolean12 = managementDashboard1.isOptimizedDrawingEnabled();
        java.awt.Graphics graphics13 = null;
        managementDashboard1.paint(graphics13);
        javax.swing.event.AncestorListener[] ancestorListenerArray15 = managementDashboard1.getAncestorListeners();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(volatileImage11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(ancestorListenerArray15);
        org.junit.Assert.assertArrayEquals(ancestorListenerArray15, new javax.swing.event.AncestorListener[] {});
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setInheritsPopupMenu(true);
        managementDashboard11.setName("");
        managementDashboard11.doLayout();
        java.awt.event.KeyListener keyListener17 = null;
        managementDashboard11.addKeyListener(keyListener17);
        java.util.function.Consumer<java.lang.String> strConsumer19 = null;
        ManagementDashboard managementDashboard20 = new ManagementDashboard(strConsumer19);
        managementDashboard20.setInheritsPopupMenu(true);
        boolean boolean23 = managementDashboard20.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget24 = null;
        managementDashboard20.setDropTarget(dropTarget24);
        boolean boolean26 = managementDashboard20.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer27 = null;
        ManagementDashboard managementDashboard28 = new ManagementDashboard(strConsumer27);
        managementDashboard28.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy31 = null;
        managementDashboard28.setFocusTraversalPolicy(focusTraversalPolicy31);
        java.lang.Object obj33 = managementDashboard20.getClientProperty((java.lang.Object) managementDashboard28);
        java.util.function.Consumer<java.lang.String> strConsumer34 = null;
        ManagementDashboard managementDashboard35 = new ManagementDashboard(strConsumer34);
        managementDashboard35.setRequestFocusEnabled(false);
        java.awt.Event event38 = null;
        boolean boolean40 = managementDashboard35.keyUp(event38, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener41 = null;
        managementDashboard35.addInputMethodListener(inputMethodListener41);
        java.awt.Dimension dimension43 = managementDashboard35.getMaximumSize();
        int int44 = managementDashboard20.getComponentZOrder((java.awt.Component) managementDashboard35);
        javax.swing.KeyStroke keyStroke45 = null;
        int int46 = managementDashboard20.getConditionForKeyStroke(keyStroke45);
        managementDashboard20.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer48 = null;
        java.awt.Image image49 = managementDashboard20.createImage(imageProducer48);
        java.util.function.Consumer<java.lang.String> strConsumer50 = null;
        ManagementDashboard managementDashboard51 = new ManagementDashboard(strConsumer50);
        managementDashboard51.setRequestFocusEnabled(false);
        java.awt.Event event54 = null;
        boolean boolean56 = managementDashboard51.keyUp(event54, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener57 = null;
        managementDashboard51.addInputMethodListener(inputMethodListener57);
        java.awt.image.VolatileImage volatileImage61 = managementDashboard51.createVolatileImage((int) (short) 0, 1);
        boolean boolean62 = managementDashboard51.isOptimizedDrawingEnabled();
        javax.swing.ActionMap actionMap63 = managementDashboard51.getActionMap();
        int int64 = managementDashboard11.checkImage(image49, (java.awt.image.ImageObserver) managementDashboard51);
        java.util.function.Consumer<java.lang.String> strConsumer65 = null;
        ManagementDashboard managementDashboard66 = new ManagementDashboard(strConsumer65);
        managementDashboard66.setRequestFocusEnabled(false);
        java.awt.Event event69 = null;
        boolean boolean71 = managementDashboard66.keyUp(event69, (int) (short) 1);
        managementDashboard66.list();
        javax.swing.plaf.PanelUI panelUI73 = managementDashboard66.getUI();
        javax.swing.border.Border border74 = null;
        managementDashboard66.setBorder(border74);
        int int76 = jToolTip9.checkImage(image49, (java.awt.image.ImageObserver) managementDashboard66);
        boolean boolean77 = jToolTip9.isPaintingForPrint();
        boolean boolean80 = jToolTip9.contains((int) (short) 0, (int) (short) 10);
        java.awt.dnd.DropTarget dropTarget81 = null;
        jToolTip9.setDropTarget(dropTarget81);
        java.awt.event.MouseListener mouseListener83 = null;
        jToolTip9.addMouseListener(mouseListener83);
        jToolTip9.setIgnoreRepaint(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(dimension43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(image49);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(volatileImage61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(actionMap63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(panelUI73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy4 = null;
        managementDashboard1.setFocusTraversalPolicy(focusTraversalPolicy4);
        javax.swing.JToolTip jToolTip6 = managementDashboard1.createToolTip();
        java.awt.MenuComponent menuComponent7 = null;
        managementDashboard1.remove(menuComponent7);
        int int11 = managementDashboard1.getBaseline((int) 'a', (int) (byte) 10);
        java.awt.GraphicsConfiguration graphicsConfiguration12 = managementDashboard1.getGraphicsConfiguration();
        javax.swing.border.Border border13 = managementDashboard1.getBorder();
        org.junit.Assert.assertNotNull(jToolTip6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(graphicsConfiguration12);
        org.junit.Assert.assertNull(border13);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setInheritsPopupMenu(true);
        boolean boolean17 = managementDashboard14.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget18 = null;
        managementDashboard14.setDropTarget(dropTarget18);
        boolean boolean20 = managementDashboard14.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer21 = null;
        ManagementDashboard managementDashboard22 = new ManagementDashboard(strConsumer21);
        managementDashboard22.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy25 = null;
        managementDashboard22.setFocusTraversalPolicy(focusTraversalPolicy25);
        java.lang.Object obj27 = managementDashboard14.getClientProperty((java.lang.Object) managementDashboard22);
        java.util.function.Consumer<java.lang.String> strConsumer28 = null;
        ManagementDashboard managementDashboard29 = new ManagementDashboard(strConsumer28);
        managementDashboard29.setRequestFocusEnabled(false);
        java.awt.Event event32 = null;
        boolean boolean34 = managementDashboard29.keyUp(event32, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener35 = null;
        managementDashboard29.addInputMethodListener(inputMethodListener35);
        java.awt.Dimension dimension37 = managementDashboard29.getMaximumSize();
        int int38 = managementDashboard14.getComponentZOrder((java.awt.Component) managementDashboard29);
        javax.swing.KeyStroke keyStroke39 = null;
        int int40 = managementDashboard14.getConditionForKeyStroke(keyStroke39);
        managementDashboard14.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer42 = null;
        java.awt.Image image43 = managementDashboard14.createImage(imageProducer42);
        managementDashboard14.setLocation(2, (-1));
        managementDashboard14.hide();
        java.util.function.Consumer<java.lang.String> strConsumer48 = null;
        ManagementDashboard managementDashboard49 = new ManagementDashboard(strConsumer48);
        boolean boolean50 = managementDashboard49.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests51 = managementDashboard49.getInputMethodRequests();
        java.awt.Container container52 = managementDashboard49.getTopLevelAncestor();
        java.awt.Color color53 = null;
        managementDashboard49.setForeground(color53);
        managementDashboard49.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean60 = managementDashboard49.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer61 = null;
        ManagementDashboard managementDashboard62 = new ManagementDashboard(strConsumer61);
        managementDashboard62.setRequestFocusEnabled(false);
        java.awt.Event event65 = null;
        boolean boolean67 = managementDashboard62.keyUp(event65, (int) (short) 1);
        managementDashboard62.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener71 = null;
        managementDashboard62.removePropertyChangeListener("", propertyChangeListener71);
        managementDashboard62.doLayout();
        javax.swing.JPopupMenu jPopupMenu74 = managementDashboard62.getComponentPopupMenu();
        java.awt.Component component76 = managementDashboard49.add((java.awt.Component) managementDashboard62, 1);
        managementDashboard62.firePropertyChange("ToolTipText", (short) 1, (short) (byte) 100);
        boolean boolean81 = managementDashboard62.isFocusTraversalPolicyProvider();
        managementDashboard62.setAlignmentY((float) 64);
        java.awt.event.KeyListener[] keyListenerArray84 = managementDashboard62.getKeyListeners();
        managementDashboard62.setFocusCycleRoot(false);
        managementDashboard1.putClientProperty((java.lang.Object) managementDashboard14, (java.lang.Object) managementDashboard62);
        managementDashboard1.hide();
        java.awt.event.InputMethodListener[] inputMethodListenerArray89 = managementDashboard1.getInputMethodListeners();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(dimension37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(image43);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(inputMethodRequests51);
        org.junit.Assert.assertNull(container52);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(jPopupMenu74);
        org.junit.Assert.assertNotNull(component76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(keyListenerArray84);
        org.junit.Assert.assertArrayEquals(keyListenerArray84, new java.awt.event.KeyListener[] {});
        org.junit.Assert.assertNotNull(inputMethodListenerArray89);
        org.junit.Assert.assertArrayEquals(inputMethodListenerArray89, new java.awt.event.InputMethodListener[] {});
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        java.awt.event.HierarchyListener hierarchyListener7 = null;
        managementDashboard1.addHierarchyListener(hierarchyListener7);
        java.awt.Cursor cursor9 = null;
        managementDashboard1.setCursor(cursor9);
        java.awt.Point point12 = managementDashboard1.getMousePosition(false);
        java.awt.event.ContainerListener containerListener13 = null;
        managementDashboard1.removeContainerListener(containerListener13);
        java.awt.Color color15 = managementDashboard1.getBackground();
        java.awt.event.KeyListener[] keyListenerArray16 = managementDashboard1.getKeyListeners();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(point12);
        org.junit.Assert.assertNotNull(color15);
        org.junit.Assert.assertNotNull(keyListenerArray16);
        org.junit.Assert.assertArrayEquals(keyListenerArray16, new java.awt.event.KeyListener[] {});
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setRequestFocusEnabled(false);
        java.awt.Event event14 = null;
        boolean boolean16 = managementDashboard11.keyUp(event14, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        managementDashboard18.setRequestFocusEnabled(false);
        java.awt.Event event21 = null;
        boolean boolean23 = managementDashboard18.keyUp(event21, (int) (short) 1);
        managementDashboard18.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener27 = null;
        managementDashboard18.removePropertyChangeListener("", propertyChangeListener27);
        java.awt.Dimension dimension29 = managementDashboard18.getPreferredSize();
        managementDashboard11.setSize(dimension29);
        managementDashboard1.setMinimumSize(dimension29);
        java.awt.event.InputMethodListener[] inputMethodListenerArray32 = managementDashboard1.getInputMethodListeners();
        managementDashboard1.validate();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(dimension29);
        org.junit.Assert.assertNotNull(inputMethodListenerArray32);
        org.junit.Assert.assertArrayEquals(inputMethodListenerArray32, new java.awt.event.InputMethodListener[] {});
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Font font5 = null;
        managementDashboard1.setFont(font5);
        managementDashboard1.transferFocus();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setRequestFocusEnabled(false);
        java.awt.Event event12 = null;
        boolean boolean14 = managementDashboard9.keyUp(event12, (int) (short) 1);
        managementDashboard9.setAutoscrolls(true);
        int int17 = managementDashboard9.getDebugGraphicsOptions();
        boolean boolean18 = managementDashboard9.isMaximumSizeSet();
        managementDashboard9.nextFocus();
        java.util.function.Consumer<java.lang.String> strConsumer20 = null;
        ManagementDashboard managementDashboard21 = new ManagementDashboard(strConsumer20);
        managementDashboard21.setRequestFocusEnabled(false);
        managementDashboard21.enable();
        java.util.function.Consumer<java.lang.String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        managementDashboard26.setInheritsPopupMenu(true);
        boolean boolean29 = managementDashboard26.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget30 = null;
        managementDashboard26.setDropTarget(dropTarget30);
        boolean boolean32 = managementDashboard26.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer33 = null;
        ManagementDashboard managementDashboard34 = new ManagementDashboard(strConsumer33);
        managementDashboard34.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy37 = null;
        managementDashboard34.setFocusTraversalPolicy(focusTraversalPolicy37);
        java.lang.Object obj39 = managementDashboard26.getClientProperty((java.lang.Object) managementDashboard34);
        java.awt.LayoutManager layoutManager40 = managementDashboard34.getLayout();
        managementDashboard34.setAlignmentX((float) 0);
        managementDashboard9.putClientProperty((java.lang.Object) managementDashboard21, (java.lang.Object) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Component component45 = managementDashboard1.add((java.awt.Component) managementDashboard9, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: illegal component position");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(layoutManager40);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        managementDashboard1.setFocusable(false);
        java.awt.Image image9 = null;
        java.util.function.Consumer<java.lang.String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        boolean boolean14 = managementDashboard13.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests15 = managementDashboard13.getInputMethodRequests();
        java.awt.Container container16 = managementDashboard13.getTopLevelAncestor();
        boolean boolean17 = managementDashboard1.prepareImage(image9, 8, (int) (byte) 100, (java.awt.image.ImageObserver) container16);
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        boolean boolean20 = managementDashboard19.isCursorSet();
        java.awt.Event event21 = null;
        boolean boolean23 = managementDashboard19.lostFocus(event21, (java.lang.Object) "");
        managementDashboard19.setAutoscrolls(false);
        java.awt.Graphics graphics26 = null;
        managementDashboard19.update(graphics26);
        java.util.function.Consumer<java.lang.String> strConsumer28 = null;
        ManagementDashboard managementDashboard29 = new ManagementDashboard(strConsumer28);
        managementDashboard29.setInheritsPopupMenu(true);
        boolean boolean32 = managementDashboard29.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget33 = null;
        managementDashboard29.setDropTarget(dropTarget33);
        boolean boolean35 = managementDashboard29.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer36 = null;
        ManagementDashboard managementDashboard37 = new ManagementDashboard(strConsumer36);
        managementDashboard37.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy40 = null;
        managementDashboard37.setFocusTraversalPolicy(focusTraversalPolicy40);
        java.lang.Object obj42 = managementDashboard29.getClientProperty((java.lang.Object) managementDashboard37);
        java.util.function.Consumer<java.lang.String> strConsumer43 = null;
        ManagementDashboard managementDashboard44 = new ManagementDashboard(strConsumer43);
        managementDashboard44.setRequestFocusEnabled(false);
        java.awt.Event event47 = null;
        boolean boolean49 = managementDashboard44.keyUp(event47, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener50 = null;
        managementDashboard44.addInputMethodListener(inputMethodListener50);
        java.awt.Dimension dimension52 = managementDashboard44.getMaximumSize();
        int int53 = managementDashboard29.getComponentZOrder((java.awt.Component) managementDashboard44);
        javax.swing.KeyStroke keyStroke54 = null;
        int int55 = managementDashboard29.getConditionForKeyStroke(keyStroke54);
        managementDashboard29.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer57 = null;
        java.awt.Image image58 = managementDashboard29.createImage(imageProducer57);
        boolean boolean64 = managementDashboard19.imageUpdate(image58, (int) (byte) 10, (int) (short) 10, 4, (int) (short) 0, 2);
        managementDashboard19.enableInputMethods(false);
        java.util.function.Consumer<java.lang.String> strConsumer67 = null;
        ManagementDashboard managementDashboard68 = new ManagementDashboard(strConsumer67);
        managementDashboard68.setRequestFocusEnabled(false);
        java.awt.Event event71 = null;
        boolean boolean73 = managementDashboard68.keyUp(event71, (int) (short) 1);
        java.lang.String str74 = managementDashboard68.toString();
        managementDashboard68.setOpaque(true);
        managementDashboard19.remove((java.awt.Component) managementDashboard68);
        java.util.function.Consumer<java.lang.String> strConsumer78 = null;
        ManagementDashboard managementDashboard79 = new ManagementDashboard(strConsumer78);
        managementDashboard79.setInheritsPopupMenu(true);
        boolean boolean82 = managementDashboard79.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget83 = null;
        managementDashboard79.setDropTarget(dropTarget83);
        java.awt.Dimension dimension85 = null;
        managementDashboard79.setPreferredSize(dimension85);
        javax.swing.event.AncestorListener ancestorListener87 = null;
        managementDashboard79.removeAncestorListener(ancestorListener87);
        java.awt.Dimension dimension89 = managementDashboard79.getPreferredSize();
        java.awt.Dimension dimension90 = managementDashboard79.getPreferredSize();
        java.awt.Point point92 = managementDashboard79.getMousePosition(true);
        java.awt.Color color93 = managementDashboard79.getForeground();
        managementDashboard1.putClientProperty((java.lang.Object) managementDashboard68, (java.lang.Object) color93);
        java.awt.Component component95 = managementDashboard1.getNextFocusableComponent();
        java.beans.PropertyChangeListener propertyChangeListener96 = null;
        managementDashboard1.addPropertyChangeListener(propertyChangeListener96);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(inputMethodRequests15);
        org.junit.Assert.assertNull(container16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(dimension52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(image58);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]" + "'", str74, "ManagementDashboard[,0,0,0x0,invalid,layout=java.awt.BorderLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=4194313,maximumSize=,minimumSize=,preferredSize=]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(dimension89);
        org.junit.Assert.assertNotNull(dimension90);
        org.junit.Assert.assertNull(point92);
        org.junit.Assert.assertNotNull(color93);
        org.junit.Assert.assertNull(component95);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener5 = null;
        managementDashboard1.removeContainerListener(containerListener5);
        java.awt.FocusTraversalPolicy focusTraversalPolicy7 = managementDashboard1.getFocusTraversalPolicy();
        java.beans.VetoableChangeListener vetoableChangeListener8 = null;
        managementDashboard1.removeVetoableChangeListener(vetoableChangeListener8);
        boolean boolean10 = managementDashboard1.isPaintingTile();
        boolean boolean11 = managementDashboard1.getFocusTraversalKeysEnabled();
        java.awt.Dimension dimension12 = managementDashboard1.getPreferredSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(focusTraversalPolicy7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(dimension12);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        boolean boolean7 = managementDashboard1.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer8 = null;
        ManagementDashboard managementDashboard9 = new ManagementDashboard(strConsumer8);
        managementDashboard9.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy12 = null;
        managementDashboard9.setFocusTraversalPolicy(focusTraversalPolicy12);
        java.lang.Object obj14 = managementDashboard1.getClientProperty((java.lang.Object) managementDashboard9);
        java.util.function.Consumer<java.lang.String> strConsumer15 = null;
        ManagementDashboard managementDashboard16 = new ManagementDashboard(strConsumer15);
        managementDashboard16.setRequestFocusEnabled(false);
        java.awt.Event event19 = null;
        boolean boolean21 = managementDashboard16.keyUp(event19, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener22 = null;
        managementDashboard16.addInputMethodListener(inputMethodListener22);
        java.awt.Dimension dimension24 = managementDashboard16.getMaximumSize();
        int int25 = managementDashboard1.getComponentZOrder((java.awt.Component) managementDashboard16);
        managementDashboard1.transferFocusBackward();
        java.awt.dnd.DropTarget dropTarget27 = null;
        managementDashboard1.setDropTarget(dropTarget27);
        boolean boolean29 = managementDashboard1.isFontSet();
        java.util.function.Consumer<java.lang.String> strConsumer30 = null;
        ManagementDashboard managementDashboard31 = new ManagementDashboard(strConsumer30);
        boolean boolean32 = managementDashboard31.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests33 = managementDashboard31.getInputMethodRequests();
        java.awt.Container container34 = managementDashboard31.getTopLevelAncestor();
        java.awt.Color color35 = null;
        managementDashboard31.setForeground(color35);
        javax.swing.KeyStroke keyStroke37 = null;
        java.awt.event.ActionListener actionListener38 = managementDashboard31.getActionForKeyStroke(keyStroke37);
        javax.swing.JToolTip jToolTip39 = managementDashboard31.createToolTip();
        java.awt.Event event40 = null;
        java.util.function.Consumer<java.lang.String> strConsumer41 = null;
        ManagementDashboard managementDashboard42 = new ManagementDashboard(strConsumer41);
        managementDashboard42.setInheritsPopupMenu(true);
        boolean boolean45 = managementDashboard42.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget46 = null;
        managementDashboard42.setDropTarget(dropTarget46);
        java.awt.Dimension dimension48 = null;
        managementDashboard42.setPreferredSize(dimension48);
        javax.swing.event.AncestorListener ancestorListener50 = null;
        managementDashboard42.removeAncestorListener(ancestorListener50);
        java.awt.Dimension dimension52 = managementDashboard42.getPreferredSize();
        java.awt.Dimension dimension53 = managementDashboard42.getPreferredSize();
        managementDashboard42.setDebugGraphicsOptions(10);
        boolean boolean56 = jToolTip39.lostFocus(event40, (java.lang.Object) managementDashboard42);
        javax.swing.JPopupMenu jPopupMenu57 = null;
        managementDashboard42.setComponentPopupMenu(jPopupMenu57);
        java.awt.Insets insets59 = managementDashboard42.insets();
        java.awt.image.ImageProducer imageProducer60 = null;
        java.awt.Image image61 = managementDashboard42.createImage(imageProducer60);
        boolean boolean67 = managementDashboard1.imageUpdate(image61, 35, 128, (int) (byte) 10, 128, 4);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(inputMethodRequests33);
        org.junit.Assert.assertNull(container34);
        org.junit.Assert.assertNull(actionListener38);
        org.junit.Assert.assertNotNull(jToolTip39);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(dimension52);
        org.junit.Assert.assertNotNull(dimension53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(insets59);
        org.junit.Assert.assertNotNull(image61);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        managementDashboard30.setRequestFocusEnabled(false);
        java.awt.Event event33 = null;
        boolean boolean35 = managementDashboard30.keyUp(event33, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener36 = null;
        managementDashboard30.addInputMethodListener(inputMethodListener36);
        java.awt.Dimension dimension38 = managementDashboard30.getMaximumSize();
        managementDashboard14.setPreferredSize(dimension38);
        managementDashboard14.firePropertyChange("data/managerData.csv", ' ', ' ');
        java.awt.Graphics graphics44 = null;
        managementDashboard14.printComponents(graphics44);
        java.awt.event.FocusEvent.Cause cause46 = null;
        boolean boolean47 = managementDashboard14.requestFocusInWindow(cause46);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(dimension38);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        managementDashboard30.setRequestFocusEnabled(false);
        java.awt.Event event33 = null;
        boolean boolean35 = managementDashboard30.keyUp(event33, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener36 = null;
        managementDashboard30.addInputMethodListener(inputMethodListener36);
        java.awt.Dimension dimension38 = managementDashboard30.getMaximumSize();
        managementDashboard14.setPreferredSize(dimension38);
        managementDashboard14.firePropertyChange("data/managerData.csv", ' ', ' ');
        java.awt.ComponentOrientation componentOrientation44 = managementDashboard14.getComponentOrientation();
        managementDashboard14.nextFocus();
        java.awt.Point point46 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean47 = managementDashboard14.contains(point46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"x\" because \"p\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(dimension38);
        org.junit.Assert.assertNotNull(componentOrientation44);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        java.awt.LayoutManager layoutManager4 = null;
        managementDashboard1.setLayout(layoutManager4);
        managementDashboard1.setFocusTraversalPolicyProvider(true);
        java.awt.Dimension dimension8 = managementDashboard1.getMaximumSize();
        int int9 = managementDashboard1.countComponents();
        org.junit.Assert.assertNotNull(dimension8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        ParkingLot parkingLot1 = new ParkingLot("data/lotData.csv");
        boolean boolean2 = parkingLot1.getEnabled();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        managementDashboard1.enable();
        managementDashboard1.list();
        java.awt.Toolkit toolkit6 = managementDashboard1.getToolkit();
        java.awt.Component component9 = managementDashboard1.locate((int) (byte) 100, 16);
        org.junit.Assert.assertNotNull(toolkit6);
        org.junit.Assert.assertNull(component9);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        managementDashboard1.setName("");
        managementDashboard1.doLayout();
        // The following exception was thrown during execution in test generation
        try {
            javax.swing.InputMap inputMap8 = managementDashboard1.getInputMap(16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: condition must be one of JComponent.WHEN_IN_FOCUSED_WINDOW, JComponent.WHEN_FOCUSED or JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener5 = null;
        managementDashboard1.removeContainerListener(containerListener5);
        javax.swing.JPopupMenu jPopupMenu7 = null;
        managementDashboard1.setComponentPopupMenu(jPopupMenu7);
        java.awt.event.HierarchyBoundsListener hierarchyBoundsListener9 = null;
        managementDashboard1.addHierarchyBoundsListener(hierarchyBoundsListener9);
        java.awt.event.KeyListener[] keyListenerArray11 = managementDashboard1.getKeyListeners();
        java.awt.LayoutManager layoutManager12 = managementDashboard1.getLayout();
        java.awt.Rectangle rectangle13 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.paintImmediately(rectangle13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"x\" because \"r\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNotNull(keyListenerArray11);
        org.junit.Assert.assertArrayEquals(keyListenerArray11, new java.awt.event.KeyListener[] {});
        org.junit.Assert.assertNotNull(layoutManager12);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        boolean boolean12 = managementDashboard11.isCursorSet();
        java.awt.Event event13 = null;
        boolean boolean15 = managementDashboard11.lostFocus(event13, (java.lang.Object) "");
        java.util.function.Consumer<java.lang.String> strConsumer16 = null;
        ManagementDashboard managementDashboard17 = new ManagementDashboard(strConsumer16);
        managementDashboard17.setRequestFocusEnabled(false);
        java.awt.Event event20 = null;
        boolean boolean22 = managementDashboard17.keyUp(event20, (int) (short) 1);
        managementDashboard17.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray25 = managementDashboard17.getHierarchyListeners();
        jToolTip9.add((java.awt.Component) managementDashboard11, (java.lang.Object) hierarchyListenerArray25);
        java.util.function.Consumer<java.lang.String> strConsumer27 = null;
        ManagementDashboard managementDashboard28 = new ManagementDashboard(strConsumer27);
        managementDashboard28.setInheritsPopupMenu(true);
        boolean boolean31 = managementDashboard28.isValidateRoot();
        boolean boolean32 = managementDashboard11.isFocusCycleRoot((java.awt.Container) managementDashboard28);
        boolean boolean33 = managementDashboard11.isBackgroundSet();
        java.awt.Dimension dimension34 = managementDashboard11.getMaximumSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray25);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray25, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(dimension34);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        managementDashboard1.enable();
        managementDashboard1.list();
        managementDashboard1.setRequestFocusEnabled(false);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setRequestFocusEnabled(false);
        java.awt.Event event17 = null;
        boolean boolean19 = managementDashboard14.keyUp(event17, (int) (short) 1);
        managementDashboard14.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener23 = null;
        managementDashboard14.removePropertyChangeListener("", propertyChangeListener23);
        managementDashboard14.doLayout();
        javax.swing.JPopupMenu jPopupMenu26 = managementDashboard14.getComponentPopupMenu();
        java.awt.Component component28 = managementDashboard1.add((java.awt.Component) managementDashboard14, 1);
        managementDashboard14.firePropertyChange("ToolTipText", (short) 1, (short) (byte) 100);
        boolean boolean33 = managementDashboard14.isFocusTraversalPolicyProvider();
        managementDashboard14.setAlignmentY((float) 64);
        java.awt.event.KeyListener[] keyListenerArray36 = managementDashboard14.getKeyListeners();
        java.util.function.Consumer<java.lang.String> strConsumer37 = null;
        ManagementDashboard managementDashboard38 = new ManagementDashboard(strConsumer37);
        managementDashboard38.setRequestFocusEnabled(false);
        managementDashboard38.enable();
        managementDashboard38.list();
        java.awt.Point point43 = managementDashboard38.location();
        managementDashboard38.removeAll();
        boolean boolean45 = managementDashboard14.isAncestorOf((java.awt.Component) managementDashboard38);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(jPopupMenu26);
        org.junit.Assert.assertNotNull(component28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(keyListenerArray36);
        org.junit.Assert.assertArrayEquals(keyListenerArray36, new java.awt.event.KeyListener[] {});
        org.junit.Assert.assertNotNull(point43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        managementDashboard1.setRequestFocusEnabled(true);
        java.awt.Font font23 = null;
        managementDashboard1.setFont(font23);
        java.awt.Graphics graphics25 = null;
        managementDashboard1.paintComponents(graphics25);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        PaymentStrategy paymentStrategy0 = null;
        PaymentProcessor paymentProcessor1 = new PaymentProcessor(paymentStrategy0);
        CreditCardPayment creditCardPayment2 = new CreditCardPayment();
        paymentProcessor1.setPaymentStrategy((PaymentStrategy) creditCardPayment2);
        creditCardPayment2.pay((double) 8);
        creditCardPayment2.pay((double) 10L);
        creditCardPayment2.pay((double) (short) 0);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener7 = null;
        managementDashboard1.addInputMethodListener(inputMethodListener7);
        java.awt.Dimension dimension9 = managementDashboard1.getMaximumSize();
        java.awt.event.MouseEvent mouseEvent10 = null;
        java.awt.Point point11 = managementDashboard1.getToolTipLocation(mouseEvent10);
        java.util.function.Consumer<java.lang.String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        managementDashboard13.setInheritsPopupMenu(true);
        boolean boolean16 = managementDashboard13.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget17 = null;
        managementDashboard13.setDropTarget(dropTarget17);
        managementDashboard13.setFocusable(false);
        java.util.function.Consumer<java.lang.String> strConsumer21 = null;
        ManagementDashboard managementDashboard22 = new ManagementDashboard(strConsumer21);
        boolean boolean23 = managementDashboard22.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests24 = managementDashboard22.getInputMethodRequests();
        managementDashboard22.move((int) (byte) 1, (int) '#');
        boolean boolean28 = managementDashboard22.isFocusTraversable();
        java.util.function.Consumer<java.lang.String> strConsumer29 = null;
        ManagementDashboard managementDashboard30 = new ManagementDashboard(strConsumer29);
        managementDashboard30.setRequestFocusEnabled(false);
        managementDashboard30.enable();
        managementDashboard30.list();
        java.awt.Point point35 = managementDashboard30.location();
        boolean boolean36 = managementDashboard22.contains(point35);
        boolean boolean37 = managementDashboard13.contains(point35);
        java.awt.Component component39 = managementDashboard1.add((java.awt.Component) managementDashboard13, (int) (short) 0);
        managementDashboard1.show();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(dimension9);
        org.junit.Assert.assertNull(point11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(inputMethodRequests24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(point35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(component39);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        java.awt.event.HierarchyListener hierarchyListener7 = null;
        managementDashboard1.addHierarchyListener(hierarchyListener7);
        java.awt.Cursor cursor9 = null;
        managementDashboard1.setCursor(cursor9);
        java.awt.Point point12 = managementDashboard1.getMousePosition(false);
        managementDashboard1.resize(100, 64);
        managementDashboard1.transferFocus();
        java.awt.event.MouseMotionListener mouseMotionListener17 = null;
        managementDashboard1.removeMouseMotionListener(mouseMotionListener17);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(point12);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        java.awt.Container container7 = managementDashboard1.getFocusCycleRootAncestor();
        java.awt.GraphicsConfiguration graphicsConfiguration8 = managementDashboard1.getGraphicsConfiguration();
        int int9 = managementDashboard1.getWidth();
        java.awt.Graphics graphics10 = null;
        managementDashboard1.paintAll(graphics10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(container7);
        org.junit.Assert.assertNull(graphicsConfiguration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.event.ContainerListener containerListener5 = null;
        managementDashboard1.removeContainerListener(containerListener5);
        java.awt.FocusTraversalPolicy focusTraversalPolicy7 = managementDashboard1.getFocusTraversalPolicy();
        java.beans.VetoableChangeListener vetoableChangeListener8 = null;
        managementDashboard1.removeVetoableChangeListener(vetoableChangeListener8);
        javax.accessibility.AccessibleContext accessibleContext10 = managementDashboard1.getAccessibleContext();
        java.awt.Graphics graphics11 = managementDashboard1.getGraphics();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(focusTraversalPolicy7);
        org.junit.Assert.assertNotNull(accessibleContext10);
        org.junit.Assert.assertNull(graphics11);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setRequestFocusEnabled(false);
        java.awt.Event event14 = null;
        boolean boolean16 = managementDashboard11.keyUp(event14, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        managementDashboard18.setRequestFocusEnabled(false);
        java.awt.Event event21 = null;
        boolean boolean23 = managementDashboard18.keyUp(event21, (int) (short) 1);
        managementDashboard18.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener27 = null;
        managementDashboard18.removePropertyChangeListener("", propertyChangeListener27);
        java.awt.Dimension dimension29 = managementDashboard18.getPreferredSize();
        managementDashboard11.setSize(dimension29);
        managementDashboard1.setMinimumSize(dimension29);
        java.util.function.Consumer<java.lang.String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        boolean boolean34 = managementDashboard33.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests35 = managementDashboard33.getInputMethodRequests();
        java.awt.Container container36 = managementDashboard33.getTopLevelAncestor();
        java.awt.Color color37 = null;
        managementDashboard33.setForeground(color37);
        java.awt.event.HierarchyListener hierarchyListener39 = null;
        managementDashboard33.addHierarchyListener(hierarchyListener39);
        java.awt.Cursor cursor41 = null;
        managementDashboard33.setCursor(cursor41);
        java.util.function.Consumer<java.lang.String> strConsumer43 = null;
        ManagementDashboard managementDashboard44 = new ManagementDashboard(strConsumer43);
        boolean boolean45 = managementDashboard44.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests46 = managementDashboard44.getInputMethodRequests();
        java.awt.Container container47 = managementDashboard44.getTopLevelAncestor();
        java.awt.Color color48 = null;
        managementDashboard44.setForeground(color48);
        java.awt.event.HierarchyListener hierarchyListener50 = null;
        managementDashboard44.addHierarchyListener(hierarchyListener50);
        java.awt.Cursor cursor52 = null;
        managementDashboard44.setCursor(cursor52);
        java.awt.Point point55 = managementDashboard44.getMousePosition(false);
        java.awt.event.ContainerListener containerListener56 = null;
        managementDashboard44.removeContainerListener(containerListener56);
        java.awt.Color color58 = managementDashboard44.getBackground();
        managementDashboard33.setForeground(color58);
        managementDashboard1.setForeground(color58);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(dimension29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(inputMethodRequests35);
        org.junit.Assert.assertNull(container36);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(inputMethodRequests46);
        org.junit.Assert.assertNull(container47);
        org.junit.Assert.assertNull(point55);
        org.junit.Assert.assertNotNull(color58);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        boolean boolean27 = managementDashboard12.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener29 = null;
        managementDashboard12.addPropertyChangeListener("ToolTipText", propertyChangeListener29);
        java.awt.Component[] componentArray31 = managementDashboard12.getComponents();
        java.awt.Font font32 = null;
        managementDashboard12.setFont(font32);
        javax.swing.plaf.PanelUI panelUI34 = managementDashboard12.getUI();
        java.util.function.Consumer<java.lang.String> strConsumer35 = null;
        ManagementDashboard managementDashboard36 = new ManagementDashboard(strConsumer35);
        managementDashboard36.setRequestFocusEnabled(false);
        java.awt.Event event39 = null;
        boolean boolean41 = managementDashboard36.keyUp(event39, (int) (short) 1);
        managementDashboard36.list();
        javax.swing.plaf.PanelUI panelUI43 = managementDashboard36.getUI();
        java.awt.image.ColorModel colorModel44 = managementDashboard36.getColorModel();
        java.awt.Point point45 = managementDashboard36.location();
        managementDashboard12.setLocation(point45);
        java.awt.Event event47 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean48 = managementDashboard12.handleEvent(event47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"id\" because \"evt\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(componentArray31);
        org.junit.Assert.assertNotNull(panelUI34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(panelUI43);
        org.junit.Assert.assertNotNull(colorModel44);
        org.junit.Assert.assertNotNull(point45);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        managementDashboard1.setRequestFocusEnabled(true);
        managementDashboard1.addNotify();
        managementDashboard1.firePropertyChange("hi!", (byte) -1, (byte) 100);
        managementDashboard1.setRequestFocusEnabled(true);
        java.awt.event.MouseMotionListener mouseMotionListener30 = null;
        managementDashboard1.addMouseMotionListener(mouseMotionListener30);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.Dimension dimension7 = null;
        managementDashboard1.setPreferredSize(dimension7);
        javax.swing.event.AncestorListener ancestorListener9 = null;
        managementDashboard1.removeAncestorListener(ancestorListener9);
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy15 = null;
        managementDashboard12.setFocusTraversalPolicy(focusTraversalPolicy15);
        java.awt.Event event17 = null;
        boolean boolean20 = managementDashboard12.mouseDrag(event17, (int) (short) 10, 4);
        managementDashboard12.setEnabled(true);
        java.awt.Component component23 = managementDashboard1.add((java.awt.Component) managementDashboard12);
        java.awt.Event event24 = null;
        java.lang.Object obj25 = null;
        boolean boolean26 = managementDashboard1.action(event24, obj25);
        java.awt.Event event27 = null;
        boolean boolean29 = managementDashboard1.keyDown(event27, (int) (short) -1);
        javax.swing.InputVerifier inputVerifier30 = managementDashboard1.getInputVerifier();
        java.beans.VetoableChangeListener vetoableChangeListener31 = null;
        managementDashboard1.removeVetoableChangeListener(vetoableChangeListener31);
        java.awt.Event event33 = null;
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard1.deliverEvent(event33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read field \"x\" because \"e\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(component23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(inputVerifier30);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setRequestFocusEnabled(false);
        java.awt.Event event14 = null;
        boolean boolean16 = managementDashboard11.keyUp(event14, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        managementDashboard18.setRequestFocusEnabled(false);
        java.awt.Event event21 = null;
        boolean boolean23 = managementDashboard18.keyUp(event21, (int) (short) 1);
        managementDashboard18.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener27 = null;
        managementDashboard18.removePropertyChangeListener("", propertyChangeListener27);
        java.awt.Dimension dimension29 = managementDashboard18.getPreferredSize();
        managementDashboard11.setSize(dimension29);
        managementDashboard1.setMinimumSize(dimension29);
        java.awt.Event event32 = null;
        java.util.function.Consumer<java.lang.String> strConsumer33 = null;
        ManagementDashboard managementDashboard34 = new ManagementDashboard(strConsumer33);
        managementDashboard34.setRequestFocusEnabled(false);
        java.awt.Event event37 = null;
        boolean boolean39 = managementDashboard34.keyUp(event37, (int) (short) 1);
        managementDashboard34.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray42 = managementDashboard34.getHierarchyListeners();
        java.awt.event.KeyListener keyListener43 = null;
        managementDashboard34.addKeyListener(keyListener43);
        boolean boolean45 = managementDashboard1.action(event32, (java.lang.Object) managementDashboard34);
        managementDashboard34.setLocation(2, 2);
        // The following exception was thrown during execution in test generation
        try {
            managementDashboard34.remove((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Array index out of range: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(dimension29);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray42);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray42, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        managementDashboard1.setRequestFocusEnabled(true);
        managementDashboard1.addNotify();
        int int24 = managementDashboard1.getX();
        boolean boolean25 = managementDashboard1.isLightweight();
        java.util.function.Consumer<java.lang.String> strConsumer26 = null;
        ManagementDashboard managementDashboard27 = new ManagementDashboard(strConsumer26);
        boolean boolean28 = managementDashboard27.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests29 = managementDashboard27.getInputMethodRequests();
        java.awt.Container container30 = managementDashboard27.getTopLevelAncestor();
        java.awt.Color color31 = null;
        managementDashboard27.setForeground(color31);
        javax.swing.KeyStroke keyStroke33 = null;
        java.awt.event.ActionListener actionListener34 = managementDashboard27.getActionForKeyStroke(keyStroke33);
        javax.swing.JToolTip jToolTip35 = managementDashboard27.createToolTip();
        java.awt.Event event36 = null;
        java.util.function.Consumer<java.lang.String> strConsumer37 = null;
        ManagementDashboard managementDashboard38 = new ManagementDashboard(strConsumer37);
        managementDashboard38.setInheritsPopupMenu(true);
        boolean boolean41 = managementDashboard38.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget42 = null;
        managementDashboard38.setDropTarget(dropTarget42);
        java.awt.Dimension dimension44 = null;
        managementDashboard38.setPreferredSize(dimension44);
        javax.swing.event.AncestorListener ancestorListener46 = null;
        managementDashboard38.removeAncestorListener(ancestorListener46);
        java.awt.Dimension dimension48 = managementDashboard38.getPreferredSize();
        java.awt.Dimension dimension49 = managementDashboard38.getPreferredSize();
        managementDashboard38.setDebugGraphicsOptions(10);
        boolean boolean52 = jToolTip35.lostFocus(event36, (java.lang.Object) managementDashboard38);
        boolean boolean53 = managementDashboard38.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener55 = null;
        managementDashboard38.addPropertyChangeListener("ToolTipText", propertyChangeListener55);
        java.awt.Component[] componentArray57 = managementDashboard38.getComponents();
        java.awt.Font font58 = null;
        managementDashboard38.setFont(font58);
        javax.swing.plaf.PanelUI panelUI60 = managementDashboard38.getUI();
        java.awt.event.HierarchyListener hierarchyListener61 = null;
        managementDashboard38.removeHierarchyListener(hierarchyListener61);
        java.awt.event.HierarchyListener[] hierarchyListenerArray63 = managementDashboard38.getHierarchyListeners();
        java.util.function.Consumer<java.lang.String> strConsumer64 = null;
        ManagementDashboard managementDashboard65 = new ManagementDashboard(strConsumer64);
        boolean boolean66 = managementDashboard65.isCursorSet();
        java.awt.Event event67 = null;
        boolean boolean69 = managementDashboard65.lostFocus(event67, (java.lang.Object) "");
        managementDashboard65.setAutoscrolls(false);
        java.awt.Graphics graphics72 = null;
        managementDashboard65.update(graphics72);
        java.awt.Dimension dimension74 = managementDashboard65.getPreferredSize();
        java.awt.Dimension dimension75 = managementDashboard38.getSize(dimension74);
        managementDashboard1.setPreferredSize(dimension75);
        javax.swing.border.Border border77 = managementDashboard1.getBorder();
        java.awt.Dimension dimension78 = managementDashboard1.getMaximumSize();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(inputMethodRequests29);
        org.junit.Assert.assertNull(container30);
        org.junit.Assert.assertNull(actionListener34);
        org.junit.Assert.assertNotNull(jToolTip35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(dimension48);
        org.junit.Assert.assertNotNull(dimension49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(componentArray57);
        org.junit.Assert.assertNotNull(panelUI60);
        org.junit.Assert.assertNotNull(hierarchyListenerArray63);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray63, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(dimension74);
        org.junit.Assert.assertNotNull(dimension75);
        org.junit.Assert.assertNull(border77);
        org.junit.Assert.assertNotNull(dimension78);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        java.awt.event.HierarchyListener hierarchyListener7 = null;
        managementDashboard1.addHierarchyListener(hierarchyListener7);
        java.awt.Cursor cursor9 = null;
        managementDashboard1.setCursor(cursor9);
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        boolean boolean13 = managementDashboard12.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests14 = managementDashboard12.getInputMethodRequests();
        java.awt.Container container15 = managementDashboard12.getTopLevelAncestor();
        java.awt.Color color16 = null;
        managementDashboard12.setForeground(color16);
        javax.swing.KeyStroke keyStroke18 = null;
        java.awt.event.ActionListener actionListener19 = managementDashboard12.getActionForKeyStroke(keyStroke18);
        javax.swing.JToolTip jToolTip20 = managementDashboard12.createToolTip();
        java.awt.Event event21 = null;
        java.util.function.Consumer<java.lang.String> strConsumer22 = null;
        ManagementDashboard managementDashboard23 = new ManagementDashboard(strConsumer22);
        managementDashboard23.setInheritsPopupMenu(true);
        boolean boolean26 = managementDashboard23.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget27 = null;
        managementDashboard23.setDropTarget(dropTarget27);
        java.awt.Dimension dimension29 = null;
        managementDashboard23.setPreferredSize(dimension29);
        javax.swing.event.AncestorListener ancestorListener31 = null;
        managementDashboard23.removeAncestorListener(ancestorListener31);
        java.awt.Dimension dimension33 = managementDashboard23.getPreferredSize();
        java.awt.Dimension dimension34 = managementDashboard23.getPreferredSize();
        managementDashboard23.setDebugGraphicsOptions(10);
        boolean boolean37 = jToolTip20.lostFocus(event21, (java.lang.Object) managementDashboard23);
        java.awt.Rectangle rectangle38 = jToolTip20.bounds();
        managementDashboard1.setMixingCutoutShape((java.awt.Shape) rectangle38);
        int int40 = managementDashboard1.getComponentCount();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(inputMethodRequests14);
        org.junit.Assert.assertNull(container15);
        org.junit.Assert.assertNull(actionListener19);
        org.junit.Assert.assertNotNull(jToolTip20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(dimension33);
        org.junit.Assert.assertNotNull(dimension34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(rectangle38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        int int9 = managementDashboard1.getDebugGraphicsOptions();
        boolean boolean10 = managementDashboard1.isMaximumSizeSet();
        managementDashboard1.nextFocus();
        java.util.function.Consumer<java.lang.String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        managementDashboard13.setRequestFocusEnabled(false);
        managementDashboard13.enable();
        java.util.function.Consumer<java.lang.String> strConsumer17 = null;
        ManagementDashboard managementDashboard18 = new ManagementDashboard(strConsumer17);
        managementDashboard18.setInheritsPopupMenu(true);
        boolean boolean21 = managementDashboard18.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget22 = null;
        managementDashboard18.setDropTarget(dropTarget22);
        boolean boolean24 = managementDashboard18.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        managementDashboard26.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy29 = null;
        managementDashboard26.setFocusTraversalPolicy(focusTraversalPolicy29);
        java.lang.Object obj31 = managementDashboard18.getClientProperty((java.lang.Object) managementDashboard26);
        java.awt.LayoutManager layoutManager32 = managementDashboard26.getLayout();
        managementDashboard26.setAlignmentX((float) 0);
        managementDashboard1.putClientProperty((java.lang.Object) managementDashboard13, (java.lang.Object) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.awt.AWTKeyStroke> aWTKeyStrokeSet37 = managementDashboard13.getFocusTraversalKeys((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: invalid focus traversal key identifier");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(layoutManager32);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setInheritsPopupMenu(true);
        boolean boolean4 = managementDashboard1.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget5 = null;
        managementDashboard1.setDropTarget(dropTarget5);
        java.awt.event.ComponentListener componentListener7 = null;
        managementDashboard1.removeComponentListener(componentListener7);
        java.awt.dnd.DropTarget dropTarget9 = managementDashboard1.getDropTarget();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(dropTarget9);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.Event event3 = null;
        boolean boolean5 = managementDashboard1.lostFocus(event3, (java.lang.Object) "");
        managementDashboard1.setAutoscrolls(false);
        java.awt.Graphics graphics8 = null;
        managementDashboard1.update(graphics8);
        java.awt.Dimension dimension10 = managementDashboard1.getPreferredSize();
        java.awt.Rectangle rectangle11 = managementDashboard1.getVisibleRect();
        boolean boolean12 = managementDashboard1.isFocusTraversalPolicySet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(dimension10);
        org.junit.Assert.assertNotNull(rectangle11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray9 = managementDashboard1.getHierarchyListeners();
        java.awt.event.KeyListener keyListener10 = null;
        managementDashboard1.addKeyListener(keyListener10);
        java.awt.Cursor cursor12 = managementDashboard1.getCursor();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        boolean boolean15 = managementDashboard14.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests16 = managementDashboard14.getInputMethodRequests();
        java.awt.Container container17 = managementDashboard14.getTopLevelAncestor();
        java.awt.Color color18 = null;
        managementDashboard14.setForeground(color18);
        javax.swing.KeyStroke keyStroke20 = null;
        java.awt.event.ActionListener actionListener21 = managementDashboard14.getActionForKeyStroke(keyStroke20);
        javax.swing.JToolTip jToolTip22 = managementDashboard14.createToolTip();
        java.awt.Event event23 = null;
        java.util.function.Consumer<java.lang.String> strConsumer24 = null;
        ManagementDashboard managementDashboard25 = new ManagementDashboard(strConsumer24);
        managementDashboard25.setInheritsPopupMenu(true);
        boolean boolean28 = managementDashboard25.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget29 = null;
        managementDashboard25.setDropTarget(dropTarget29);
        java.awt.Dimension dimension31 = null;
        managementDashboard25.setPreferredSize(dimension31);
        javax.swing.event.AncestorListener ancestorListener33 = null;
        managementDashboard25.removeAncestorListener(ancestorListener33);
        java.awt.Dimension dimension35 = managementDashboard25.getPreferredSize();
        java.awt.Dimension dimension36 = managementDashboard25.getPreferredSize();
        managementDashboard25.setDebugGraphicsOptions(10);
        boolean boolean39 = jToolTip22.lostFocus(event23, (java.lang.Object) managementDashboard25);
        boolean boolean40 = managementDashboard25.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener42 = null;
        managementDashboard25.addPropertyChangeListener("ToolTipText", propertyChangeListener42);
        java.awt.Component[] componentArray44 = managementDashboard25.getComponents();
        java.awt.Font font45 = null;
        managementDashboard25.setFont(font45);
        javax.swing.plaf.PanelUI panelUI47 = managementDashboard25.getUI();
        java.util.function.Consumer<java.lang.String> strConsumer48 = null;
        ManagementDashboard managementDashboard49 = new ManagementDashboard(strConsumer48);
        managementDashboard49.setInheritsPopupMenu(true);
        boolean boolean52 = managementDashboard49.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget53 = null;
        managementDashboard49.setDropTarget(dropTarget53);
        boolean boolean55 = managementDashboard49.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer56 = null;
        ManagementDashboard managementDashboard57 = new ManagementDashboard(strConsumer56);
        managementDashboard57.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy60 = null;
        managementDashboard57.setFocusTraversalPolicy(focusTraversalPolicy60);
        java.lang.Object obj62 = managementDashboard49.getClientProperty((java.lang.Object) managementDashboard57);
        java.util.function.Consumer<java.lang.String> strConsumer63 = null;
        ManagementDashboard managementDashboard64 = new ManagementDashboard(strConsumer63);
        managementDashboard64.setRequestFocusEnabled(false);
        java.awt.Event event67 = null;
        boolean boolean69 = managementDashboard64.keyUp(event67, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener70 = null;
        managementDashboard64.addInputMethodListener(inputMethodListener70);
        java.awt.Dimension dimension72 = managementDashboard64.getMaximumSize();
        int int73 = managementDashboard49.getComponentZOrder((java.awt.Component) managementDashboard64);
        javax.swing.KeyStroke keyStroke74 = null;
        int int75 = managementDashboard49.getConditionForKeyStroke(keyStroke74);
        managementDashboard49.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer77 = null;
        java.awt.Image image78 = managementDashboard49.createImage(imageProducer77);
        java.util.function.Consumer<java.lang.String> strConsumer81 = null;
        ManagementDashboard managementDashboard82 = new ManagementDashboard(strConsumer81);
        boolean boolean83 = managementDashboard82.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests84 = managementDashboard82.getInputMethodRequests();
        java.awt.Container container85 = managementDashboard82.getTopLevelAncestor();
        java.awt.Color color86 = null;
        managementDashboard82.setForeground(color86);
        java.awt.event.HierarchyListener hierarchyListener88 = null;
        managementDashboard82.addHierarchyListener(hierarchyListener88);
        java.awt.Cursor cursor90 = null;
        managementDashboard82.setCursor(cursor90);
        int int92 = managementDashboard25.checkImage(image78, (int) (byte) 10, (int) 'a', (java.awt.image.ImageObserver) managementDashboard82);
        boolean boolean93 = managementDashboard1.isFocusCycleRoot((java.awt.Container) managementDashboard82);
        java.awt.Event event94 = null;
        boolean boolean97 = managementDashboard1.mouseEnter(event94, (int) ' ', (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray9);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray9, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertNotNull(cursor12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(inputMethodRequests16);
        org.junit.Assert.assertNull(container17);
        org.junit.Assert.assertNull(actionListener21);
        org.junit.Assert.assertNotNull(jToolTip22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(dimension35);
        org.junit.Assert.assertNotNull(dimension36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(componentArray44);
        org.junit.Assert.assertNotNull(panelUI47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(dimension72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(image78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(inputMethodRequests84);
        org.junit.Assert.assertNull(container85);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        CreditCardPayment creditCardPayment0 = new CreditCardPayment();
        PaymentProcessor paymentProcessor1 = new PaymentProcessor((PaymentStrategy) creditCardPayment0);
        creditCardPayment0.pay((double) (-1));
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        managementDashboard1.repaint(10, 100, 0, (int) (short) 1);
        boolean boolean12 = managementDashboard1.requestFocusInWindow();
        java.util.function.Consumer<java.lang.String> strConsumer13 = null;
        ManagementDashboard managementDashboard14 = new ManagementDashboard(strConsumer13);
        managementDashboard14.setInheritsPopupMenu(true);
        boolean boolean17 = managementDashboard14.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget18 = null;
        managementDashboard14.setDropTarget(dropTarget18);
        java.awt.Dimension dimension20 = null;
        managementDashboard14.setPreferredSize(dimension20);
        javax.swing.event.AncestorListener ancestorListener22 = null;
        managementDashboard14.removeAncestorListener(ancestorListener22);
        java.awt.Dimension dimension24 = managementDashboard14.getPreferredSize();
        java.awt.Dimension dimension25 = managementDashboard14.getPreferredSize();
        java.util.function.Consumer<java.lang.String> strConsumer26 = null;
        ManagementDashboard managementDashboard27 = new ManagementDashboard(strConsumer26);
        managementDashboard27.setRequestFocusEnabled(false);
        java.awt.Event event30 = null;
        boolean boolean32 = managementDashboard27.keyUp(event30, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer33 = null;
        ManagementDashboard managementDashboard34 = new ManagementDashboard(strConsumer33);
        managementDashboard34.setRequestFocusEnabled(false);
        java.awt.Event event37 = null;
        boolean boolean39 = managementDashboard34.keyUp(event37, (int) (short) 1);
        managementDashboard34.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener43 = null;
        managementDashboard34.removePropertyChangeListener("", propertyChangeListener43);
        java.awt.Dimension dimension45 = managementDashboard34.getPreferredSize();
        managementDashboard27.setSize(dimension45);
        java.awt.Dimension dimension47 = managementDashboard14.getSize(dimension45);
        java.awt.Dimension dimension48 = managementDashboard1.getSize(dimension47);
        java.awt.Graphics graphics49 = null;
        managementDashboard1.update(graphics49);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(dimension24);
        org.junit.Assert.assertNotNull(dimension25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(dimension45);
        org.junit.Assert.assertNotNull(dimension47);
        org.junit.Assert.assertNotNull(dimension48);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.Event event3 = null;
        boolean boolean5 = managementDashboard1.lostFocus(event3, (java.lang.Object) "");
        java.awt.Component[] componentArray6 = managementDashboard1.getComponents();
        java.awt.Dimension dimension7 = managementDashboard1.getMinimumSize();
        int int8 = managementDashboard1.getDebugGraphicsOptions();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(componentArray6);
        org.junit.Assert.assertNotNull(dimension7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.awt.Event event10 = null;
        java.util.function.Consumer<java.lang.String> strConsumer11 = null;
        ManagementDashboard managementDashboard12 = new ManagementDashboard(strConsumer11);
        managementDashboard12.setInheritsPopupMenu(true);
        boolean boolean15 = managementDashboard12.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget16 = null;
        managementDashboard12.setDropTarget(dropTarget16);
        java.awt.Dimension dimension18 = null;
        managementDashboard12.setPreferredSize(dimension18);
        javax.swing.event.AncestorListener ancestorListener20 = null;
        managementDashboard12.removeAncestorListener(ancestorListener20);
        java.awt.Dimension dimension22 = managementDashboard12.getPreferredSize();
        java.awt.Dimension dimension23 = managementDashboard12.getPreferredSize();
        managementDashboard12.setDebugGraphicsOptions(10);
        boolean boolean26 = jToolTip9.lostFocus(event10, (java.lang.Object) managementDashboard12);
        boolean boolean27 = managementDashboard12.isOpaque();
        java.beans.PropertyChangeListener propertyChangeListener29 = null;
        managementDashboard12.addPropertyChangeListener("ToolTipText", propertyChangeListener29);
        java.awt.Component[] componentArray31 = managementDashboard12.getComponents();
        java.awt.Font font32 = null;
        managementDashboard12.setFont(font32);
        javax.swing.plaf.PanelUI panelUI34 = managementDashboard12.getUI();
        java.awt.Component component36 = managementDashboard12.getComponent(1);
        java.awt.event.HierarchyListener hierarchyListener37 = null;
        managementDashboard12.addHierarchyListener(hierarchyListener37);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(dimension22);
        org.junit.Assert.assertNotNull(dimension23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(componentArray31);
        org.junit.Assert.assertNotNull(panelUI34);
        org.junit.Assert.assertNotNull(component36);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.Event event3 = null;
        boolean boolean5 = managementDashboard1.lostFocus(event3, (java.lang.Object) "");
        managementDashboard1.setAutoscrolls(false);
        java.awt.Graphics graphics8 = null;
        managementDashboard1.update(graphics8);
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        managementDashboard11.setInheritsPopupMenu(true);
        boolean boolean14 = managementDashboard11.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget15 = null;
        managementDashboard11.setDropTarget(dropTarget15);
        boolean boolean17 = managementDashboard11.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer18 = null;
        ManagementDashboard managementDashboard19 = new ManagementDashboard(strConsumer18);
        managementDashboard19.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy22 = null;
        managementDashboard19.setFocusTraversalPolicy(focusTraversalPolicy22);
        java.lang.Object obj24 = managementDashboard11.getClientProperty((java.lang.Object) managementDashboard19);
        java.util.function.Consumer<java.lang.String> strConsumer25 = null;
        ManagementDashboard managementDashboard26 = new ManagementDashboard(strConsumer25);
        managementDashboard26.setRequestFocusEnabled(false);
        java.awt.Event event29 = null;
        boolean boolean31 = managementDashboard26.keyUp(event29, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener32 = null;
        managementDashboard26.addInputMethodListener(inputMethodListener32);
        java.awt.Dimension dimension34 = managementDashboard26.getMaximumSize();
        int int35 = managementDashboard11.getComponentZOrder((java.awt.Component) managementDashboard26);
        javax.swing.KeyStroke keyStroke36 = null;
        int int37 = managementDashboard11.getConditionForKeyStroke(keyStroke36);
        managementDashboard11.transferFocusUpCycle();
        java.awt.image.ImageProducer imageProducer39 = null;
        java.awt.Image image40 = managementDashboard11.createImage(imageProducer39);
        boolean boolean46 = managementDashboard1.imageUpdate(image40, (int) (byte) 10, (int) (short) 10, 4, (int) (short) 0, 2);
        managementDashboard1.enableInputMethods(false);
        java.awt.Component component51 = managementDashboard1.findComponentAt(35, 4);
        managementDashboard1.setRequestFocusEnabled(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(dimension34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(image40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(component51);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        java.util.function.Consumer<java.lang.String> strConsumer7 = null;
        ManagementDashboard managementDashboard8 = new ManagementDashboard(strConsumer7);
        managementDashboard8.setRequestFocusEnabled(false);
        java.awt.Event event11 = null;
        boolean boolean13 = managementDashboard8.keyUp(event11, (int) (short) 1);
        managementDashboard8.setAutoscrolls(true);
        java.beans.PropertyChangeListener propertyChangeListener17 = null;
        managementDashboard8.removePropertyChangeListener("", propertyChangeListener17);
        java.awt.Dimension dimension19 = managementDashboard8.getPreferredSize();
        managementDashboard1.setSize(dimension19);
        managementDashboard1.setRequestFocusEnabled(true);
        java.awt.Font font23 = null;
        managementDashboard1.setFont(font23);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Point point25 = managementDashboard1.getLocationOnScreen();
            org.junit.Assert.fail("Expected exception of type java.awt.IllegalComponentStateException; message: component must be showing on the screen to determine its location");
        } catch (java.awt.IllegalComponentStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(dimension19);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        managementDashboard1.setRequestFocusEnabled(false);
        java.awt.Event event4 = null;
        boolean boolean6 = managementDashboard1.keyUp(event4, (int) (short) 1);
        managementDashboard1.setAutoscrolls(true);
        int int9 = managementDashboard1.getDebugGraphicsOptions();
        java.beans.VetoableChangeListener[] vetoableChangeListenerArray10 = managementDashboard1.getVetoableChangeListeners();
        java.beans.VetoableChangeListener vetoableChangeListener11 = null;
        managementDashboard1.removeVetoableChangeListener(vetoableChangeListener11);
        java.awt.im.InputContext inputContext13 = managementDashboard1.getInputContext();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(vetoableChangeListenerArray10);
        org.junit.Assert.assertArrayEquals(vetoableChangeListenerArray10, new java.beans.VetoableChangeListener[] {});
        org.junit.Assert.assertNull(inputContext13);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        UserDashboard userDashboard1 = new UserDashboard(strConsumer0);
        userDashboard1.transferFocusDownCycle();
        java.awt.FocusTraversalPolicy focusTraversalPolicy3 = userDashboard1.getFocusTraversalPolicy();
        java.util.function.Consumer<java.lang.String> strConsumer4 = null;
        ManagementDashboard managementDashboard5 = new ManagementDashboard(strConsumer4);
        managementDashboard5.setInheritsPopupMenu(true);
        boolean boolean8 = managementDashboard5.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget9 = null;
        managementDashboard5.setDropTarget(dropTarget9);
        boolean boolean11 = managementDashboard5.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer12 = null;
        ManagementDashboard managementDashboard13 = new ManagementDashboard(strConsumer12);
        managementDashboard13.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy16 = null;
        managementDashboard13.setFocusTraversalPolicy(focusTraversalPolicy16);
        java.lang.Object obj18 = managementDashboard5.getClientProperty((java.lang.Object) managementDashboard13);
        java.util.function.Consumer<java.lang.String> strConsumer19 = null;
        ManagementDashboard managementDashboard20 = new ManagementDashboard(strConsumer19);
        managementDashboard20.setRequestFocusEnabled(false);
        java.awt.Event event23 = null;
        boolean boolean25 = managementDashboard20.keyUp(event23, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener26 = null;
        managementDashboard20.addInputMethodListener(inputMethodListener26);
        java.awt.Dimension dimension28 = managementDashboard20.getMaximumSize();
        int int29 = managementDashboard5.getComponentZOrder((java.awt.Component) managementDashboard20);
        javax.swing.KeyStroke keyStroke30 = null;
        int int31 = managementDashboard5.getConditionForKeyStroke(keyStroke30);
        java.util.function.Consumer<java.lang.String> strConsumer32 = null;
        ManagementDashboard managementDashboard33 = new ManagementDashboard(strConsumer32);
        managementDashboard33.setInheritsPopupMenu(true);
        boolean boolean36 = managementDashboard33.isValidateRoot();
        java.awt.dnd.DropTarget dropTarget37 = null;
        managementDashboard33.setDropTarget(dropTarget37);
        boolean boolean39 = managementDashboard33.getAutoscrolls();
        java.util.function.Consumer<java.lang.String> strConsumer40 = null;
        ManagementDashboard managementDashboard41 = new ManagementDashboard(strConsumer40);
        managementDashboard41.setInheritsPopupMenu(true);
        java.awt.FocusTraversalPolicy focusTraversalPolicy44 = null;
        managementDashboard41.setFocusTraversalPolicy(focusTraversalPolicy44);
        java.lang.Object obj46 = managementDashboard33.getClientProperty((java.lang.Object) managementDashboard41);
        java.util.function.Consumer<java.lang.String> strConsumer47 = null;
        ManagementDashboard managementDashboard48 = new ManagementDashboard(strConsumer47);
        managementDashboard48.setRequestFocusEnabled(false);
        java.awt.Event event51 = null;
        boolean boolean53 = managementDashboard48.keyUp(event51, (int) (short) 1);
        java.awt.event.InputMethodListener inputMethodListener54 = null;
        managementDashboard48.addInputMethodListener(inputMethodListener54);
        java.awt.Dimension dimension56 = managementDashboard48.getMaximumSize();
        int int57 = managementDashboard33.getComponentZOrder((java.awt.Component) managementDashboard48);
        java.awt.Component component59 = managementDashboard33.getComponent(1);
        java.awt.Point point60 = managementDashboard33.location();
        java.awt.Component component61 = managementDashboard5.getComponentAt(point60);
        userDashboard1.setLocation(point60);
        org.junit.Assert.assertNull(focusTraversalPolicy3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(dimension28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(dimension56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(component59);
        org.junit.Assert.assertNotNull(point60);
        org.junit.Assert.assertNull(component61);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        java.util.function.Consumer<java.lang.String> strConsumer0 = null;
        ManagementDashboard managementDashboard1 = new ManagementDashboard(strConsumer0);
        boolean boolean2 = managementDashboard1.isCursorSet();
        java.awt.im.InputMethodRequests inputMethodRequests3 = managementDashboard1.getInputMethodRequests();
        java.awt.Container container4 = managementDashboard1.getTopLevelAncestor();
        java.awt.Color color5 = null;
        managementDashboard1.setForeground(color5);
        javax.swing.KeyStroke keyStroke7 = null;
        java.awt.event.ActionListener actionListener8 = managementDashboard1.getActionForKeyStroke(keyStroke7);
        javax.swing.JToolTip jToolTip9 = managementDashboard1.createToolTip();
        java.util.function.Consumer<java.lang.String> strConsumer10 = null;
        ManagementDashboard managementDashboard11 = new ManagementDashboard(strConsumer10);
        boolean boolean12 = managementDashboard11.isCursorSet();
        java.awt.Event event13 = null;
        boolean boolean15 = managementDashboard11.lostFocus(event13, (java.lang.Object) "");
        java.util.function.Consumer<java.lang.String> strConsumer16 = null;
        ManagementDashboard managementDashboard17 = new ManagementDashboard(strConsumer16);
        managementDashboard17.setRequestFocusEnabled(false);
        java.awt.Event event20 = null;
        boolean boolean22 = managementDashboard17.keyUp(event20, (int) (short) 1);
        managementDashboard17.setAutoscrolls(true);
        java.awt.event.HierarchyListener[] hierarchyListenerArray25 = managementDashboard17.getHierarchyListeners();
        jToolTip9.add((java.awt.Component) managementDashboard11, (java.lang.Object) hierarchyListenerArray25);
        java.util.function.Consumer<java.lang.String> strConsumer27 = null;
        ManagementDashboard managementDashboard28 = new ManagementDashboard(strConsumer27);
        managementDashboard28.setInheritsPopupMenu(true);
        boolean boolean31 = managementDashboard28.isValidateRoot();
        boolean boolean32 = managementDashboard11.isFocusCycleRoot((java.awt.Container) managementDashboard28);
        boolean boolean33 = managementDashboard28.isEnabled();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(inputMethodRequests3);
        org.junit.Assert.assertNull(container4);
        org.junit.Assert.assertNull(actionListener8);
        org.junit.Assert.assertNotNull(jToolTip9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(hierarchyListenerArray25);
        org.junit.Assert.assertArrayEquals(hierarchyListenerArray25, new java.awt.event.HierarchyListener[] {});
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }
}

